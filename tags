!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	base/include/fasp.h	/^    dCSRmat *A;$/;"	m	language:C++	struct:__anon13
A	base/include/fasp.h	/^    dCSRmat *A;$/;"	m	language:C++	struct:__anon16
A	base/include/fasp.h	/^    dCSRmat *A;$/;"	m	language:C++	struct:__anon17
A	base/include/fasp.h	/^    dCSRmat A;  \/\/ note: must start from 1!! Change later$/;"	m	language:C++	struct:__anon14
A	base/include/fasp.h	/^    dCSRmat A;$/;"	m	language:C++	struct:__anon15
A	base/include/fasp_block.h	/^    dBLCmat *A;         \/**< problem data, the sparse matrix *\/$/;"	m	language:C++	struct:__anon6
A	base/include/fasp_block.h	/^    dBSRmat *A;$/;"	m	language:C++	struct:__anon4
A	base/include/fasp_block.h	/^    dBSRmat A;$/;"	m	language:C++	struct:__anon2
A	include/fasp.h	/^    dCSRmat *A;$/;"	m	language:C++	struct:__anon37
A	include/fasp.h	/^    dCSRmat *A;$/;"	m	language:C++	struct:__anon40
A	include/fasp.h	/^    dCSRmat *A;$/;"	m	language:C++	struct:__anon41
A	include/fasp.h	/^    dCSRmat A;  \/\/ note: must start from 1!! Change later$/;"	m	language:C++	struct:__anon38
A	include/fasp.h	/^    dCSRmat A;$/;"	m	language:C++	struct:__anon39
A	include/fasp_block.h	/^    dBLCmat *A;         \/**< problem data, the sparse matrix *\/$/;"	m	language:C++	struct:__anon30
A	include/fasp_block.h	/^    dBSRmat *A;$/;"	m	language:C++	struct:__anon28
A	include/fasp_block.h	/^    dBSRmat A;$/;"	m	language:C++	struct:__anon26
ABORT	base/extra/dlmalloc/dlmalloc.c	565;"	d	language:C	file:
ABORT	base/extra/include/malloc.c.h	585;"	d	language:C++
ABORT_ON_ASSERT_FAILURE	base/extra/dlmalloc/dlmalloc.c	568;"	d	language:C	file:
ABORT_ON_ASSERT_FAILURE	base/extra/include/malloc.c.h	588;"	d	language:C++
ABS	base/include/fasp.h	75;"	d	language:C++
ABS	include/fasp.h	75;"	d	language:C++
ACQUIRE_LOCK	base/extra/dlmalloc/dlmalloc.c	1659;"	d	language:C	file:
ACQUIRE_LOCK	base/extra/dlmalloc/dlmalloc.c	1759;"	d	language:C	file:
ACQUIRE_LOCK	base/extra/dlmalloc/dlmalloc.c	1824;"	d	language:C	file:
ACQUIRE_LOCK	base/extra/dlmalloc/dlmalloc.c	1855;"	d	language:C	file:
ACQUIRE_LOCK	base/extra/include/malloc.c.h	1781;"	d	language:C++
ACQUIRE_LOCK	base/extra/include/malloc.c.h	1882;"	d	language:C++
ACQUIRE_LOCK	base/extra/include/malloc.c.h	1947;"	d	language:C++
ACQUIRE_LOCK	base/extra/include/malloc.c.h	1978;"	d	language:C++
ACQUIRE_MALLOC_GLOBAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1906;"	d	language:C	file:
ACQUIRE_MALLOC_GLOBAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1912;"	d	language:C	file:
ACQUIRE_MALLOC_GLOBAL_LOCK	base/extra/include/malloc.c.h	2029;"	d	language:C++
ACQUIRE_MALLOC_GLOBAL_LOCK	base/extra/include/malloc.c.h	2035;"	d	language:C++
AMG_COARSEN_CR	base/src/PreAMGCoarsenCR.c	25;"	d	language:C	file:
AMG_ILU_levels	base/include/fasp.h	/^    SHORT AMG_ILU_levels;          \/**< how many levels use ILU smoother *\/$/;"	m	language:C++	struct:__anon21
AMG_ILU_levels	include/fasp.h	/^    SHORT AMG_ILU_levels;          \/**< how many levels use ILU smoother *\/$/;"	m	language:C++	struct:__anon45
AMG_SWZ_levels	base/include/fasp.h	/^    INT AMG_SWZ_levels;            \/**< number of levels use Schwarz smoother *\/$/;"	m	language:C++	struct:__anon21
AMG_SWZ_levels	include/fasp.h	/^    INT AMG_SWZ_levels;            \/**< number of levels use Schwarz smoother *\/$/;"	m	language:C++	struct:__anon45
AMG_aggregation_type	base/include/fasp.h	/^    SHORT AMG_aggregation_type;    \/**< aggregation type *\/$/;"	m	language:C++	struct:__anon21
AMG_aggregation_type	include/fasp.h	/^    SHORT AMG_aggregation_type;    \/**< aggregation type *\/$/;"	m	language:C++	struct:__anon45
AMG_aggressive_level	base/include/fasp.h	/^    INT AMG_aggressive_level;      \/**< number of levels use aggressive coarsening *\/$/;"	m	language:C++	struct:__anon21
AMG_aggressive_level	include/fasp.h	/^    INT AMG_aggressive_level;      \/**< number of levels use aggressive coarsening *\/$/;"	m	language:C++	struct:__anon45
AMG_aggressive_path	base/include/fasp.h	/^    INT AMG_aggressive_path;       \/**< number of paths to determine strongly coupled C-set *\/$/;"	m	language:C++	struct:__anon21
AMG_aggressive_path	include/fasp.h	/^    INT AMG_aggressive_path;       \/**< number of paths to determine strongly coupled C-set *\/$/;"	m	language:C++	struct:__anon45
AMG_amli_degree	base/include/fasp.h	/^    SHORT AMG_amli_degree;         \/**< degree of the polynomial used by AMLI cycle *\/$/;"	m	language:C++	struct:__anon21
AMG_amli_degree	include/fasp.h	/^    SHORT AMG_amli_degree;         \/**< degree of the polynomial used by AMLI cycle *\/$/;"	m	language:C++	struct:__anon45
AMG_coarse_dof	base/include/fasp.h	/^    INT AMG_coarse_dof;            \/**< max number of coarsest level DOF *\/$/;"	m	language:C++	struct:__anon21
AMG_coarse_dof	include/fasp.h	/^    INT AMG_coarse_dof;            \/**< max number of coarsest level DOF *\/$/;"	m	language:C++	struct:__anon45
AMG_coarse_scaling	base/include/fasp.h	/^    SHORT AMG_coarse_scaling;      \/**< switch of scaling of the coarse grid correction *\/$/;"	m	language:C++	struct:__anon21
AMG_coarse_scaling	include/fasp.h	/^    SHORT AMG_coarse_scaling;      \/**< switch of scaling of the coarse grid correction *\/$/;"	m	language:C++	struct:__anon45
AMG_coarse_solver	base/include/fasp.h	/^    SHORT AMG_coarse_solver;       \/**< coarse solver type *\/$/;"	m	language:C++	struct:__anon21
AMG_coarse_solver	include/fasp.h	/^    SHORT AMG_coarse_solver;       \/**< coarse solver type *\/$/;"	m	language:C++	struct:__anon45
AMG_coarsening_type	base/include/fasp.h	/^    SHORT AMG_coarsening_type;     \/**< coarsening type *\/$/;"	m	language:C++	struct:__anon21
AMG_coarsening_type	include/fasp.h	/^    SHORT AMG_coarsening_type;     \/**< coarsening type *\/$/;"	m	language:C++	struct:__anon45
AMG_cycle_type	base/include/fasp.h	/^    SHORT AMG_cycle_type;          \/**< type of cycle *\/$/;"	m	language:C++	struct:__anon21
AMG_cycle_type	include/fasp.h	/^    SHORT AMG_cycle_type;          \/**< type of cycle *\/$/;"	m	language:C++	struct:__anon45
AMG_data	base/include/fasp.h	/^} AMG_data; \/**< Data for AMG methods *\/$/;"	t	language:C++	typeref:struct:__anon15
AMG_data	include/fasp.h	/^} AMG_data; \/**< Data for AMG methods *\/$/;"	t	language:C++	typeref:struct:__anon39
AMG_data_bsr	base/include/fasp_block.h	/^} AMG_data_bsr; \/**< AMG data for BSR matrices *\/$/;"	t	language:C++	typeref:struct:__anon2
AMG_data_bsr	include/fasp_block.h	/^} AMG_data_bsr; \/**< AMG data for BSR matrices *\/$/;"	t	language:C++	typeref:struct:__anon26
AMG_interpolation_type	base/include/fasp.h	/^    SHORT AMG_interpolation_type;  \/**< interpolation type *\/$/;"	m	language:C++	struct:__anon21
AMG_interpolation_type	include/fasp.h	/^    SHORT AMG_interpolation_type;  \/**< interpolation type *\/$/;"	m	language:C++	struct:__anon45
AMG_levels	base/include/fasp.h	/^    SHORT AMG_levels;              \/**< maximal number of levels *\/$/;"	m	language:C++	struct:__anon21
AMG_levels	include/fasp.h	/^    SHORT AMG_levels;              \/**< maximal number of levels *\/$/;"	m	language:C++	struct:__anon45
AMG_max_aggregation	base/include/fasp.h	/^    INT AMG_max_aggregation;       \/**< max size of each aggregate *\/$/;"	m	language:C++	struct:__anon21
AMG_max_aggregation	include/fasp.h	/^    INT AMG_max_aggregation;       \/**< max size of each aggregate *\/$/;"	m	language:C++	struct:__anon45
AMG_max_row_sum	base/include/fasp.h	/^    REAL AMG_max_row_sum;          \/**< maximal row sum *\/$/;"	m	language:C++	struct:__anon21
AMG_max_row_sum	include/fasp.h	/^    REAL AMG_max_row_sum;          \/**< maximal row sum *\/$/;"	m	language:C++	struct:__anon45
AMG_maxit	base/include/fasp.h	/^    INT AMG_maxit;                 \/**< number of iterations for AMG used as preconditioner *\/$/;"	m	language:C++	struct:__anon21
AMG_maxit	include/fasp.h	/^    INT AMG_maxit;                 \/**< number of iterations for AMG used as preconditioner *\/$/;"	m	language:C++	struct:__anon45
AMG_nl_amli_krylov_type	base/include/fasp.h	/^    SHORT AMG_nl_amli_krylov_type; \/**< type of Krylov method used by nonlinear AMLI cycle *\/$/;"	m	language:C++	struct:__anon21
AMG_nl_amli_krylov_type	include/fasp.h	/^    SHORT AMG_nl_amli_krylov_type; \/**< type of Krylov method used by nonlinear AMLI cycle *\/$/;"	m	language:C++	struct:__anon45
AMG_pair_number	base/include/fasp.h	/^    INT AMG_pair_number;           \/**< number of pairs in matching algorithm *\/$/;"	m	language:C++	struct:__anon21
AMG_pair_number	include/fasp.h	/^    INT AMG_pair_number;           \/**< number of pairs in matching algorithm *\/$/;"	m	language:C++	struct:__anon45
AMG_param	base/include/fasp.h	/^} AMG_param; \/**< Parameters for AMG methods *\/$/;"	t	language:C++	typeref:struct:__anon10
AMG_param	include/fasp.h	/^} AMG_param; \/**< Parameters for AMG methods *\/$/;"	t	language:C++	typeref:struct:__anon34
AMG_polynomial_degree	base/include/fasp.h	/^    SHORT AMG_polynomial_degree;   \/**< degree of the polynomial smoother *\/$/;"	m	language:C++	struct:__anon21
AMG_polynomial_degree	include/fasp.h	/^    SHORT AMG_polynomial_degree;   \/**< degree of the polynomial smoother *\/$/;"	m	language:C++	struct:__anon45
AMG_postsmooth_iter	base/include/fasp.h	/^    SHORT AMG_postsmooth_iter;     \/**< number of postsmoothing *\/$/;"	m	language:C++	struct:__anon21
AMG_postsmooth_iter	include/fasp.h	/^    SHORT AMG_postsmooth_iter;     \/**< number of postsmoothing *\/$/;"	m	language:C++	struct:__anon45
AMG_presmooth_iter	base/include/fasp.h	/^    SHORT AMG_presmooth_iter;      \/**< number of presmoothing *\/$/;"	m	language:C++	struct:__anon21
AMG_presmooth_iter	include/fasp.h	/^    SHORT AMG_presmooth_iter;      \/**< number of presmoothing *\/$/;"	m	language:C++	struct:__anon45
AMG_quality_bound	base/include/fasp.h	/^    REAL AMG_quality_bound;        \/**< threshold for pair wise aggregation *\/$/;"	m	language:C++	struct:__anon21
AMG_quality_bound	include/fasp.h	/^    REAL AMG_quality_bound;        \/**< threshold for pair wise aggregation *\/$/;"	m	language:C++	struct:__anon45
AMG_relaxation	base/include/fasp.h	/^    REAL AMG_relaxation;           \/**< over-relaxation parameter for SOR *\/$/;"	m	language:C++	struct:__anon21
AMG_relaxation	include/fasp.h	/^    REAL AMG_relaxation;           \/**< over-relaxation parameter for SOR *\/$/;"	m	language:C++	struct:__anon45
AMG_smooth_filter	base/include/fasp.h	/^    SHORT AMG_smooth_filter;       \/**< use filter for smoothing the tentative prolongation or not *\/$/;"	m	language:C++	struct:__anon21
AMG_smooth_filter	include/fasp.h	/^    SHORT AMG_smooth_filter;       \/**< use filter for smoothing the tentative prolongation or not *\/$/;"	m	language:C++	struct:__anon45
AMG_smooth_order	base/include/fasp.h	/^    SHORT AMG_smooth_order;        \/**< order for smoothers *\/$/;"	m	language:C++	struct:__anon21
AMG_smooth_order	include/fasp.h	/^    SHORT AMG_smooth_order;        \/**< order for smoothers *\/$/;"	m	language:C++	struct:__anon45
AMG_smooth_restriction	base/include/fasp.h	/^    SHORT AMG_smooth_restriction;  \/**< smoothing the restriction or not *\/$/;"	m	language:C++	struct:__anon21
AMG_smooth_restriction	include/fasp.h	/^    SHORT AMG_smooth_restriction;  \/**< smoothing the restriction or not *\/$/;"	m	language:C++	struct:__anon45
AMG_smoother	base/include/fasp.h	/^    SHORT AMG_smoother;            \/**< type of smoother *\/$/;"	m	language:C++	struct:__anon21
AMG_smoother	include/fasp.h	/^    SHORT AMG_smoother;            \/**< type of smoother *\/$/;"	m	language:C++	struct:__anon45
AMG_strong_coupled	base/include/fasp.h	/^    REAL AMG_strong_coupled;       \/**< strong coupled threshold for aggregate *\/$/;"	m	language:C++	struct:__anon21
AMG_strong_coupled	include/fasp.h	/^    REAL AMG_strong_coupled;       \/**< strong coupled threshold for aggregate *\/$/;"	m	language:C++	struct:__anon45
AMG_strong_threshold	base/include/fasp.h	/^    REAL AMG_strong_threshold;     \/**< strong threshold for coarsening *\/$/;"	m	language:C++	struct:__anon21
AMG_strong_threshold	include/fasp.h	/^    REAL AMG_strong_threshold;     \/**< strong threshold for coarsening *\/$/;"	m	language:C++	struct:__anon45
AMG_tentative_smooth	base/include/fasp.h	/^    REAL AMG_tentative_smooth;     \/**< relaxation factor for smoothing the tentative prolongation *\/$/;"	m	language:C++	struct:__anon21
AMG_tentative_smooth	include/fasp.h	/^    REAL AMG_tentative_smooth;     \/**< relaxation factor for smoothing the tentative prolongation *\/$/;"	m	language:C++	struct:__anon45
AMG_tol	base/include/fasp.h	/^    REAL AMG_tol;                  \/**< tolerance for AMG if used as preconditioner *\/$/;"	m	language:C++	struct:__anon21
AMG_tol	include/fasp.h	/^    REAL AMG_tol;                  \/**< tolerance for AMG if used as preconditioner *\/$/;"	m	language:C++	struct:__anon45
AMG_truncation_threshold	base/include/fasp.h	/^    REAL AMG_truncation_threshold; \/**< truncation factor for interpolation *\/$/;"	m	language:C++	struct:__anon21
AMG_truncation_threshold	include/fasp.h	/^    REAL AMG_truncation_threshold; \/**< truncation factor for interpolation *\/$/;"	m	language:C++	struct:__anon45
AMG_type	base/include/fasp.h	/^    SHORT AMG_type;                \/**< Type of AMG *\/$/;"	m	language:C++	struct:__anon21
AMG_type	base/include/fasp.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon10
AMG_type	base/include/fasp.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon16
AMG_type	base/include/fasp.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon17
AMG_type	base/include/fasp_block.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon4
AMG_type	include/fasp.h	/^    SHORT AMG_type;                \/**< Type of AMG *\/$/;"	m	language:C++	struct:__anon45
AMG_type	include/fasp.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon34
AMG_type	include/fasp.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon40
AMG_type	include/fasp.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon41
AMG_type	include/fasp_block.h	/^    SHORT AMG_type;$/;"	m	language:C++	struct:__anon28
AMLI_CYCLE	base/include/fasp_const.h	178;"	d	language:C++
AMLI_CYCLE	include/fasp_const.h	178;"	d	language:C++
ASCEND	base/include/fasp_const.h	239;"	d	language:C++
ASCEND	include/fasp_const.h	239;"	d	language:C++
A_diag	base/include/fasp_block.h	/^    dCSRmat *A_diag;      \/**< data for each diagonal block*\/$/;"	m	language:C++	struct:__anon5
A_diag	include/fasp_block.h	/^    dCSRmat *A_diag;      \/**< data for each diagonal block*\/$/;"	m	language:C++	struct:__anon29
A_nk	base/include/fasp.h	/^    dCSRmat *A_nk;$/;"	m	language:C++	struct:__anon16
A_nk	base/include/fasp_block.h	/^    dCSRmat *A_nk;$/;"	m	language:C++	struct:__anon2
A_nk	base/include/fasp_block.h	/^    dCSRmat *A_nk;$/;"	m	language:C++	struct:__anon4
A_nk	include/fasp.h	/^    dCSRmat *A_nk;$/;"	m	language:C++	struct:__anon40
A_nk	include/fasp_block.h	/^    dCSRmat *A_nk;$/;"	m	language:C++	struct:__anon26
A_nk	include/fasp_block.h	/^    dCSRmat *A_nk;$/;"	m	language:C++	struct:__anon28
A_str	base/include/fasp.h	/^    dSTRmat *A_str;$/;"	m	language:C++	struct:__anon17
A_str	include/fasp.h	/^    dSTRmat *A_str;$/;"	m	language:C++	struct:__anon41
Ablc	base/include/fasp_block.h	/^    dBLCmat *Ablc;        \/**< problem data, the blocks *\/$/;"	m	language:C++	struct:__anon5
Ablc	include/fasp_block.h	/^    dBLCmat *Ablc;        \/**< problem data, the blocks *\/$/;"	m	language:C++	struct:__anon29
Ac	base/include/fasp_block.h	/^    dCSRmat Ac;$/;"	m	language:C++	struct:__anon2
Ac	include/fasp_block.h	/^    dCSRmat Ac;$/;"	m	language:C++	struct:__anon26
Ai	base/include/fasp_block.h	/^    dBLCmat *Ai;        \/**< preconditioner data, the sparse matrix *\/$/;"	m	language:C++	struct:__anon6
Ai	include/fasp_block.h	/^    dBLCmat *Ai;        \/**< preconditioner data, the sparse matrix *\/$/;"	m	language:C++	struct:__anon30
BIGREAL	base/include/fasp_const.h	245;"	d	language:C++
BIGREAL	include/fasp_const.h	245;"	d	language:C++
Bd_apply_info	test/include/heat_fem.h	/^typedef struct Bd_apply_info$/;"	s	language:C++
Bd_apply_info	test/include/heat_fem.h	/^} Bd_apply_info;$/;"	t	language:C++	typeref:struct:Bd_apply_info
BitScanForward	base/extra/dlmalloc/dlmalloc.c	1379;"	d	language:C	file:
BitScanForward	base/extra/include/malloc.c.h	1403;"	d	language:C++
BitScanReverse	base/extra/dlmalloc/dlmalloc.c	1380;"	d	language:C	file:
BitScanReverse	base/extra/include/malloc.c.h	1404;"	d	language:C++
CALL_DIRECT_MMAP	base/extra/dlmalloc/dlmalloc.c	1578;"	d	language:C	file:
CALL_DIRECT_MMAP	base/extra/dlmalloc/dlmalloc.c	1580;"	d	language:C	file:
CALL_DIRECT_MMAP	base/extra/dlmalloc/dlmalloc.c	1588;"	d	language:C	file:
CALL_DIRECT_MMAP	base/extra/include/malloc.c.h	1699;"	d	language:C++
CALL_DIRECT_MMAP	base/extra/include/malloc.c.h	1701;"	d	language:C++
CALL_DIRECT_MMAP	base/extra/include/malloc.c.h	1709;"	d	language:C++
CALL_MMAP	base/extra/dlmalloc/dlmalloc.c	1568;"	d	language:C	file:
CALL_MMAP	base/extra/dlmalloc/dlmalloc.c	1570;"	d	language:C	file:
CALL_MMAP	base/extra/dlmalloc/dlmalloc.c	1589;"	d	language:C	file:
CALL_MMAP	base/extra/include/malloc.c.h	1689;"	d	language:C++
CALL_MMAP	base/extra/include/malloc.c.h	1691;"	d	language:C++
CALL_MMAP	base/extra/include/malloc.c.h	1710;"	d	language:C++
CALL_MORECORE	base/extra/dlmalloc/dlmalloc.c	1553;"	d	language:C	file:
CALL_MORECORE	base/extra/dlmalloc/dlmalloc.c	1555;"	d	language:C	file:
CALL_MORECORE	base/extra/dlmalloc/dlmalloc.c	1558;"	d	language:C	file:
CALL_MORECORE	base/extra/include/malloc.c.h	1674;"	d	language:C++
CALL_MORECORE	base/extra/include/malloc.c.h	1676;"	d	language:C++
CALL_MORECORE	base/extra/include/malloc.c.h	1679;"	d	language:C++
CALL_MREMAP	base/extra/dlmalloc/dlmalloc.c	1598;"	d	language:C	file:
CALL_MREMAP	base/extra/dlmalloc/dlmalloc.c	1600;"	d	language:C	file:
CALL_MREMAP	base/extra/dlmalloc/dlmalloc.c	1603;"	d	language:C	file:
CALL_MREMAP	base/extra/include/malloc.c.h	1719;"	d	language:C++
CALL_MREMAP	base/extra/include/malloc.c.h	1721;"	d	language:C++
CALL_MREMAP	base/extra/include/malloc.c.h	1724;"	d	language:C++
CALL_MUNMAP	base/extra/dlmalloc/dlmalloc.c	1573;"	d	language:C	file:
CALL_MUNMAP	base/extra/dlmalloc/dlmalloc.c	1575;"	d	language:C	file:
CALL_MUNMAP	base/extra/dlmalloc/dlmalloc.c	1590;"	d	language:C	file:
CALL_MUNMAP	base/extra/include/malloc.c.h	1694;"	d	language:C++
CALL_MUNMAP	base/extra/include/malloc.c.h	1696;"	d	language:C++
CALL_MUNMAP	base/extra/include/malloc.c.h	1711;"	d	language:C++
CC	test/Makefile	/^   CC=gcc $/;"	m	language:Make
CC	test/Makefile	/^CC = not-defined-yet$/;"	m	language:Make
CC	tutorial/Makefile	/^   CC=gcc $/;"	m	language:Make
CC	tutorial/Makefile	/^CC = not-defined-yet$/;"	m	language:Make
CFLAGS	test/Makefile	/^CFLAGS = -I$(fasp_prefix)\/include\/ -I.\/include $/;"	m	language:Make
CFLAGS	tutorial/Makefile	/^CFLAGS=-I$(fasp_prefix)\/include $/;"	m	language:Make
CF_ORDER	base/include/fasp_const.h	231;"	d	language:C++
CF_ORDER	include/fasp_const.h	231;"	d	language:C++
CGPT	base/include/fasp_const.h	224;"	d	language:C++
CGPT	include/fasp_const.h	224;"	d	language:C++
CHUNK_ALIGN_MASK	base/extra/dlmalloc/dlmalloc.c	1453;"	d	language:C	file:
CHUNK_ALIGN_MASK	base/extra/include/malloc.c.h	1477;"	d	language:C++
CHUNK_OVERHEAD	base/extra/dlmalloc/dlmalloc.c	2073;"	d	language:C	file:
CHUNK_OVERHEAD	base/extra/dlmalloc/dlmalloc.c	2075;"	d	language:C	file:
CHUNK_OVERHEAD	base/extra/include/malloc.c.h	2195;"	d	language:C++
CHUNK_OVERHEAD	base/extra/include/malloc.c.h	2197;"	d	language:C++
CINUSE_BIT	base/extra/dlmalloc/dlmalloc.c	2117;"	d	language:C	file:
CINUSE_BIT	base/extra/include/malloc.c.h	2239;"	d	language:C++
CLASSIC_AMG	base/include/fasp_const.h	161;"	d	language:C++
CLASSIC_AMG	include/fasp_const.h	161;"	d	language:C++
CMFAIL	base/extra/dlmalloc/dlmalloc.c	1474;"	d	language:C	file:
CMFAIL	base/extra/include/malloc.c.h	1519;"	d	language:C++
CMK_ordering	base/src/BlaOrderingCSR.c	/^static void CMK_ordering (const dCSRmat *A,$/;"	f	language:C	file:	signature:(const dCSRmat *A, INT loc, INT s, INT jj, INT mindg, INT *oindex, INT *order)
COARSE_AC	base/include/fasp_const.h	207;"	d	language:C++
COARSE_AC	include/fasp_const.h	207;"	d	language:C++
COARSE_CR	base/include/fasp_const.h	206;"	d	language:C++
COARSE_CR	include/fasp_const.h	206;"	d	language:C++
COARSE_MIS	base/include/fasp_const.h	208;"	d	language:C++
COARSE_MIS	include/fasp_const.h	208;"	d	language:C++
COARSE_RS	base/include/fasp_const.h	204;"	d	language:C++
COARSE_RS	include/fasp_const.h	204;"	d	language:C++
COARSE_RSP	base/include/fasp_const.h	205;"	d	language:C++
COARSE_RSP	include/fasp_const.h	205;"	d	language:C++
COL	base/include/fasp_block.h	/^    INT COL;$/;"	m	language:C++	struct:dBSRmat
COL	include/fasp_block.h	/^    INT COL;$/;"	m	language:C++	struct:dBSRmat
CONFIG_FLAGS	Makefile	/^CONFIG_FLAGS=-DCMAKE_RULE_MESSAGES=ON$/;"	m	language:Make
CORRUPTION_ERROR_ACTION	base/extra/dlmalloc/dlmalloc.c	2629;"	d	language:C	file:
CORRUPTION_ERROR_ACTION	base/extra/dlmalloc/dlmalloc.c	2635;"	d	language:C	file:
CORRUPTION_ERROR_ACTION	base/extra/include/malloc.c.h	2730;"	d	language:C++
CORRUPTION_ERROR_ACTION	base/extra/include/malloc.c.h	2736;"	d	language:C++
CPFIRST	base/include/fasp_const.h	237;"	d	language:C++
CPFIRST	include/fasp_const.h	237;"	d	language:C++
CURRENT_THREAD	base/extra/dlmalloc/dlmalloc.c	1657;"	d	language:C	file:
CURRENT_THREAD	base/extra/dlmalloc/dlmalloc.c	1757;"	d	language:C	file:
CURRENT_THREAD	base/extra/dlmalloc/dlmalloc.c	1822;"	d	language:C	file:
CURRENT_THREAD	base/extra/dlmalloc/dlmalloc.c	1853;"	d	language:C	file:
CURRENT_THREAD	base/extra/include/malloc.c.h	1779;"	d	language:C++
CURRENT_THREAD	base/extra/include/malloc.c.h	1880;"	d	language:C++
CURRENT_THREAD	base/extra/include/malloc.c.h	1945;"	d	language:C++
CURRENT_THREAD	base/extra/include/malloc.c.h	1976;"	d	language:C++
CXX	test/Makefile	/^   CXX=g++$/;"	m	language:Make
CXX	test/Makefile	/^CXX = not-defined-yet$/;"	m	language:Make
CXX	tutorial/Makefile	/^   CXX=g++$/;"	m	language:Make
CXX	tutorial/Makefile	/^CXX = not-defined-yet$/;"	m	language:Make
CheckInpData	FASP_install.tcl	/^proc CheckInpData { x } {$/;"	p	language:Tcl
ChkedTlsGetValue	base/extra/nedmalloc/nedmalloc.c	/^static LPVOID ChkedTlsGetValue(DWORD idx)$/;"	f	language:C	file:	signature:(DWORD idx)
Config	FASP_install.tcl	/^proc Config { f } {$/;"	p	language:Tcl
DEBUG	base/extra/dlmalloc/dlmalloc.c	1308;"	d	language:C	file:
DEBUG	base/extra/include/malloc.c.h	1328;"	d	language:C++
DEBUG	base/extra/nedmalloc/nedmalloc.c	105;"	d	language:C	file:
DEBUG	base/extra/nedmalloc/nedmalloc.c	81;"	d	language:C	file:
DEBUG	base/extra/nedmalloc/nedmalloc.c	85;"	d	language:C	file:
DEBUG	base/extra/nedmalloc/nedmalloc.c	87;"	d	language:C	file:
DEBUG	base/extra/nedmalloc/nedmalloc.c	90;"	d	language:C	file:
DEFAULT_GRANULARITY	base/extra/dlmalloc/dlmalloc.c	619;"	d	language:C	file:
DEFAULT_GRANULARITY	base/extra/dlmalloc/dlmalloc.c	621;"	d	language:C	file:
DEFAULT_GRANULARITY	base/extra/include/malloc.c.h	639;"	d	language:C++
DEFAULT_GRANULARITY	base/extra/include/malloc.c.h	641;"	d	language:C++
DEFAULT_GRANULARITY	base/extra/nedmalloc/nedmalloc.c	95;"	d	language:C	file:
DEFAULT_GRANULARITY_ALIGNED	base/extra/nedmalloc/nedmalloc.c	97;"	d	language:C	file:
DEFAULT_MMAP_THRESHOLD	base/extra/dlmalloc/dlmalloc.c	633;"	d	language:C	file:
DEFAULT_MMAP_THRESHOLD	base/extra/dlmalloc/dlmalloc.c	635;"	d	language:C	file:
DEFAULT_MMAP_THRESHOLD	base/extra/include/malloc.c.h	653;"	d	language:C++
DEFAULT_MMAP_THRESHOLD	base/extra/include/malloc.c.h	655;"	d	language:C++
DEFAULT_TRIM_THRESHOLD	base/extra/dlmalloc/dlmalloc.c	626;"	d	language:C	file:
DEFAULT_TRIM_THRESHOLD	base/extra/dlmalloc/dlmalloc.c	628;"	d	language:C	file:
DEFAULT_TRIM_THRESHOLD	base/extra/include/malloc.c.h	646;"	d	language:C++
DEFAULT_TRIM_THRESHOLD	base/extra/include/malloc.c.h	648;"	d	language:C++
DESCEND	base/include/fasp_const.h	240;"	d	language:C++
DESCEND	include/fasp_const.h	240;"	d	language:C++
DIAGONAL_PREF	base/include/fasp.h	59;"	d	language:C++
DIAGONAL_PREF	include/fasp.h	59;"	d	language:C++
DIM	test/main/testheat.c	19;"	d	language:C	file:
DIM	test/src/FemHeatEqn.c	11;"	d	language:C	file:
DIM	test/src/FemMesh.c	14;"	d	language:C	file:
DIM	test/src/FemPoisson.c	21;"	d	language:C	file:
DIRECT_MMAP	base/extra/dlmalloc/dlmalloc.c	1587;"	d	language:C	file:
DIRECT_MMAP	base/extra/include/malloc.c.h	1708;"	d	language:C++
DIRECT_MMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1500;"	d	language:C	file:
DIRECT_MMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1537;"	d	language:C	file:
DIRECT_MMAP_DEFAULT	base/extra/include/malloc.c.h	1572;"	d	language:C++
DIRECT_MMAP_DEFAULT	base/extra/include/malloc.c.h	1658;"	d	language:C++
DIRICHLET	test/include/assemble.h	11;"	d	language:C++
DIRICHLET	test/include/mesh.h	8;"	d	language:C++
DIRICHLET	test/main/testfct_heat.inl	14;"	d	language:C++	file:
DIRICHLET	test/main/testfct_poisson.inl	13;"	d	language:C++	file:
DLMALLOC	base/include/fasp.h	48;"	d	language:C++
DLMALLOC	include/fasp.h	48;"	d	language:C++
DLMALLOC_VERSION	base/extra/dlmalloc/dlmalloc.c	485;"	d	language:C	file:
DLMALLOC_VERSION	base/extra/include/malloc.c.h	506;"	d	language:C++
DOBJ	test/Makefile	/^DOBJ=$(DSRC:.c=.o)$/;"	m	language:Make
DSRC	test/Makefile	/^DSRC=$(shell find .\/src -name '*.c')$/;"	m	language:Make
Diaginv	base/src/ItrSmootherCSRpoly.c	/^static void Diaginv (dCSRmat *Amat,$/;"	f	language:C	file:	signature:(dCSRmat *Amat, REAL *Dinv)
Diagx	base/src/ItrSmootherCSRpoly.c	/^static void Diagx (REAL *Dinv,$/;"	f	language:C	file:	signature:(REAL *Dinv, INT n, REAL *x, REAL *b)
DinvAnorminf	base/src/ItrSmootherCSRpoly.c	/^static REAL DinvAnorminf (dCSRmat *Amat,$/;"	f	language:C	file:	signature:(dCSRmat *Amat, REAL *Dinv)
DistClean	FASP_install.tcl	/^proc DistClean { } {$/;"	p	language:Tcl
Downloading from BitBucket	doc/userguide.tex	/^\\end{center}$/;"	u	language:Tex
Downloading from SourceForge	doc/userguide.tex	/^There are several ways to download the FASP source files. We recommend users download the most updated version from the FASP page on SourceForge. $/;"	u	language:Tex
ENABLE_TOLERANT_NEDMALLOC	base/extra/include/nedmalloc.h	144;"	d	language:C++
ENABLE_TOLERANT_NEDMALLOC	base/extra/include/nedmalloc.h	92;"	d	language:C++
ERROR_ALLOC_MEM	base/include/fasp_const.h	29;"	d	language:C++
ERROR_ALLOC_MEM	include/fasp_const.h	29;"	d	language:C++
ERROR_AMG_COARSEING	base/include/fasp_const.h	37;"	d	language:C++
ERROR_AMG_COARSEING	include/fasp_const.h	37;"	d	language:C++
ERROR_AMG_COARSE_TYPE	base/include/fasp_const.h	36;"	d	language:C++
ERROR_AMG_COARSE_TYPE	include/fasp_const.h	36;"	d	language:C++
ERROR_AMG_INTERP_TYPE	base/include/fasp_const.h	34;"	d	language:C++
ERROR_AMG_INTERP_TYPE	include/fasp_const.h	34;"	d	language:C++
ERROR_AMG_SETUP	base/include/fasp_const.h	38;"	d	language:C++
ERROR_AMG_SETUP	include/fasp_const.h	38;"	d	language:C++
ERROR_AMG_SMOOTH_TYPE	base/include/fasp_const.h	35;"	d	language:C++
ERROR_AMG_SMOOTH_TYPE	include/fasp_const.h	35;"	d	language:C++
ERROR_DATA_STRUCTURE	base/include/fasp_const.h	30;"	d	language:C++
ERROR_DATA_STRUCTURE	include/fasp_const.h	30;"	d	language:C++
ERROR_DATA_ZERODIAG	base/include/fasp_const.h	31;"	d	language:C++
ERROR_DATA_ZERODIAG	include/fasp_const.h	31;"	d	language:C++
ERROR_DUMMY_VAR	base/include/fasp_const.h	32;"	d	language:C++
ERROR_DUMMY_VAR	include/fasp_const.h	32;"	d	language:C++
ERROR_INPUT_PAR	base/include/fasp_const.h	23;"	d	language:C++
ERROR_INPUT_PAR	include/fasp_const.h	23;"	d	language:C++
ERROR_LIC_TYPE	base/include/fasp_const.h	53;"	d	language:C++
ERROR_LIC_TYPE	include/fasp_const.h	53;"	d	language:C++
ERROR_MAT_SIZE	base/include/fasp_const.h	25;"	d	language:C++
ERROR_MAT_SIZE	include/fasp_const.h	25;"	d	language:C++
ERROR_MISC	base/include/fasp_const.h	27;"	d	language:C++
ERROR_MISC	include/fasp_const.h	27;"	d	language:C++
ERROR_NUM_BLOCKS	base/include/fasp_const.h	26;"	d	language:C++
ERROR_NUM_BLOCKS	include/fasp_const.h	26;"	d	language:C++
ERROR_OPEN_FILE	base/include/fasp_const.h	21;"	d	language:C++
ERROR_OPEN_FILE	include/fasp_const.h	21;"	d	language:C++
ERROR_QUAD_DIM	base/include/fasp_const.h	51;"	d	language:C++
ERROR_QUAD_DIM	include/fasp_const.h	51;"	d	language:C++
ERROR_QUAD_TYPE	base/include/fasp_const.h	50;"	d	language:C++
ERROR_QUAD_TYPE	include/fasp_const.h	50;"	d	language:C++
ERROR_REGRESS	base/include/fasp_const.h	24;"	d	language:C++
ERROR_REGRESS	include/fasp_const.h	24;"	d	language:C++
ERROR_SOLVER_EXIT	base/include/fasp_const.h	48;"	d	language:C++
ERROR_SOLVER_EXIT	include/fasp_const.h	48;"	d	language:C++
ERROR_SOLVER_ILUSETUP	base/include/fasp_const.h	45;"	d	language:C++
ERROR_SOLVER_ILUSETUP	include/fasp_const.h	45;"	d	language:C++
ERROR_SOLVER_MAXIT	base/include/fasp_const.h	47;"	d	language:C++
ERROR_SOLVER_MAXIT	include/fasp_const.h	47;"	d	language:C++
ERROR_SOLVER_MISC	base/include/fasp_const.h	46;"	d	language:C++
ERROR_SOLVER_MISC	include/fasp_const.h	46;"	d	language:C++
ERROR_SOLVER_PRECTYPE	base/include/fasp_const.h	41;"	d	language:C++
ERROR_SOLVER_PRECTYPE	include/fasp_const.h	41;"	d	language:C++
ERROR_SOLVER_SOLSTAG	base/include/fasp_const.h	43;"	d	language:C++
ERROR_SOLVER_SOLSTAG	include/fasp_const.h	43;"	d	language:C++
ERROR_SOLVER_STAG	base/include/fasp_const.h	42;"	d	language:C++
ERROR_SOLVER_STAG	include/fasp_const.h	42;"	d	language:C++
ERROR_SOLVER_TOLSMALL	base/include/fasp_const.h	44;"	d	language:C++
ERROR_SOLVER_TOLSMALL	include/fasp_const.h	44;"	d	language:C++
ERROR_SOLVER_TYPE	base/include/fasp_const.h	40;"	d	language:C++
ERROR_SOLVER_TYPE	include/fasp_const.h	40;"	d	language:C++
ERROR_UNKNOWN	base/include/fasp_const.h	55;"	d	language:C++
ERROR_UNKNOWN	include/fasp_const.h	55;"	d	language:C++
ERROR_WRONG_FILE	base/include/fasp_const.h	22;"	d	language:C++
ERROR_WRONG_FILE	include/fasp_const.h	22;"	d	language:C++
EXTERN_BIT	base/extra/dlmalloc/dlmalloc.c	1610;"	d	language:C	file:
EXTERN_BIT	base/extra/include/malloc.c.h	1731;"	d	language:C++
EntryList	FASP_install.tcl	/^proc EntryList { parent } {$/;"	p	language:Tcl
FALSE	base/include/fasp_const.h	61;"	d	language:C++
FALSE	include/fasp_const.h	61;"	d	language:C++
FASP_SUCCESS	base/include/fasp_const.h	19;"	d	language:C++
FASP_SUCCESS	include/fasp_const.h	19;"	d	language:C++
FASP_VERSION	base/include/fasp.h	41;"	d	language:C++
FASP_VERSION	include/fasp.h	41;"	d	language:C++
FC	test/Makefile	/^   FC=gfortran$/;"	m	language:Make
FC	test/Makefile	/^FC = not-defined-yet$/;"	m	language:Make
FC	tutorial/Makefile	/^   FC=gfortran$/;"	m	language:Make
FC	tutorial/Makefile	/^FC = not-defined-yet$/;"	m	language:Make
FEM_param	test/include/misc.h	/^typedef struct FEM_param{$/;"	s	language:C++
FEM_param	test/include/misc.h	/^} FEM_param;$/;"	t	language:C++	typeref:struct:FEM_param
FEM_param_init	test/src/FemParam.c	/^void FEM_param_init (FEM_param *pt)$/;"	f	language:C	signature:(FEM_param *pt)
FEM_param_set	test/src/FemParam.c	/^int FEM_param_set(int argc, const char *argv [], FEM_param * pt)$/;"	f	language:C	signature:(int argc, const char *argv [], FEM_param * pt)
FENCEPOST_HEAD	base/extra/dlmalloc/dlmalloc.c	2123;"	d	language:C	file:
FENCEPOST_HEAD	base/extra/include/malloc.c.h	2245;"	d	language:C++
FFLAGS	tutorial/Makefile	/^FFLAGS=-I$(fasp_prefix)\/include $/;"	m	language:Make
FGPT	base/include/fasp_const.h	223;"	d	language:C++
FGPT	include/fasp_const.h	223;"	d	language:C++
FLAG4_BIT	base/extra/dlmalloc/dlmalloc.c	2118;"	d	language:C	file:
FLAG4_BIT	base/extra/include/malloc.c.h	2240;"	d	language:C++
FLAG_BITS	base/extra/dlmalloc/dlmalloc.c	2120;"	d	language:C	file:
FLAG_BITS	base/extra/include/malloc.c.h	2242;"	d	language:C++
FOOTERS	base/extra/dlmalloc/dlmalloc.c	562;"	d	language:C	file:
FOOTERS	base/extra/include/malloc.c.h	582;"	d	language:C++
FOOTERS	base/extra/nedmalloc/nedmalloc.c	72;"	d	language:C	file:
FORCEINLINE	base/extra/dlmalloc/dlmalloc.c	727;"	d	language:C	file:
FORCEINLINE	base/extra/dlmalloc/dlmalloc.c	729;"	d	language:C	file:
FORCEINLINE	base/extra/dlmalloc/dlmalloc.c	745;"	d	language:C	file:
FORCEINLINE	base/extra/dlmalloc/dlmalloc.c	749;"	d	language:C	file:
FORCEINLINE	base/extra/include/malloc.c.h	747;"	d	language:C++
FORCEINLINE	base/extra/include/malloc.c.h	749;"	d	language:C++
FORCEINLINE	base/extra/include/malloc.c.h	765;"	d	language:C++
FORCEINLINE	base/extra/include/malloc.c.h	769;"	d	language:C++
FORCEINLINE	base/extra/nedmalloc/nedmalloc.c	51;"	d	language:C	file:
FOUR_SIZE_T_SIZES	base/extra/dlmalloc/dlmalloc.c	1448;"	d	language:C	file:
FOUR_SIZE_T_SIZES	base/extra/include/malloc.c.h	1472;"	d	language:C++
FPFIRST	base/include/fasp_const.h	238;"	d	language:C++
FPFIRST	include/fasp_const.h	238;"	d	language:C++
FindFile	FASP_install.tcl	/^proc FindFile { startDir namePat } {$/;"	p	language:Tcl
G0PT	base/include/fasp_const.h	221;"	d	language:C++
G0PT	include/fasp_const.h	221;"	d	language:C++
GE	base/include/fasp.h	81;"	d	language:C++
GE	include/fasp.h	81;"	d	language:C++
GETMSPACE	base/extra/nedmalloc/nedmalloc.c	1255;"	d	language:C	file:
GT	base/include/fasp.h	80;"	d	language:C++
GT	include/fasp.h	80;"	d	language:C++
General description	doc/userguide.tex	/^\\chapter{Introduction}\\label{ch:intro}$/;"	s	language:Tex
GentleExit	FASP_install.tcl	/^proc GentleExit {} {$/;"	p	language:Tcl
GetLargePageMinimum_t	base/extra/include/malloc.c.h	/^typedef size_t (WINAPI *GetLargePageMinimum_t)(void);$/;"	t	language:C++
GraphAdd	base/src/PreAMGCoarsenCR.c	/^static INT GraphAdd (Link  *list,$/;"	f	language:C	file:	signature:(Link *list, INT *head, INT *tail, INT index, INT istack)
GraphRemove	base/src/PreAMGCoarsenCR.c	/^static INT GraphRemove (Link   *list,$/;"	f	language:C	file:	signature:(Link *list, INT *head, INT *tail, INT index)
HALF_MAX_SIZE_T	base/extra/dlmalloc/dlmalloc.c	1450;"	d	language:C	file:
HALF_MAX_SIZE_T	base/extra/include/malloc.c.h	1474;"	d	language:C++
HAVE_MMAP	base/extra/dlmalloc/dlmalloc.c	502;"	d	language:C	file:
HAVE_MMAP	base/extra/dlmalloc/dlmalloc.c	525;"	d	language:C	file:
HAVE_MMAP	base/extra/dlmalloc/dlmalloc.c	587;"	d	language:C	file:
HAVE_MMAP	base/extra/include/malloc.c.h	522;"	d	language:C++
HAVE_MMAP	base/extra/include/malloc.c.h	545;"	d	language:C++
HAVE_MMAP	base/extra/include/malloc.c.h	607;"	d	language:C++
HAVE_MORECORE	base/extra/dlmalloc/dlmalloc.c	503;"	d	language:C	file:
HAVE_MORECORE	base/extra/dlmalloc/dlmalloc.c	524;"	d	language:C	file:
HAVE_MORECORE	base/extra/dlmalloc/dlmalloc.c	604;"	d	language:C	file:
HAVE_MORECORE	base/extra/dlmalloc/dlmalloc.c	606;"	d	language:C	file:
HAVE_MORECORE	base/extra/include/malloc.c.h	523;"	d	language:C++
HAVE_MORECORE	base/extra/include/malloc.c.h	544;"	d	language:C++
HAVE_MORECORE	base/extra/include/malloc.c.h	624;"	d	language:C++
HAVE_MORECORE	base/extra/include/malloc.c.h	626;"	d	language:C++
HAVE_MREMAP	base/extra/dlmalloc/dlmalloc.c	594;"	d	language:C	file:
HAVE_MREMAP	base/extra/dlmalloc/dlmalloc.c	596;"	d	language:C	file:
HAVE_MREMAP	base/extra/include/malloc.c.h	614;"	d	language:C++
HAVE_MREMAP	base/extra/include/malloc.c.h	616;"	d	language:C++
Help	FASP_install.tcl	/^proc Help {} {$/;"	p	language:Tcl
How to obtain FASP	doc/userguide.tex	/^have been changed before this document is updated.$/;"	s	language:Tex
How to use this guide	doc/userguide.tex	/^% user's guide.$/;"	s	language:Tex
I	base/include/fasp.h	/^    INT *I;$/;"	m	language:C++	struct:iCOOmat
I	include/fasp.h	/^    INT *I;$/;"	m	language:C++	struct:iCOOmat
IA	base/include/fasp.h	/^    INT *IA;$/;"	m	language:C++	struct:dCSRmat
IA	base/include/fasp.h	/^    INT *IA;$/;"	m	language:C++	struct:iCSRmat
IA	base/include/fasp_block.h	/^    INT *IA;$/;"	m	language:C++	struct:dBSRmat
IA	include/fasp.h	/^    INT *IA;$/;"	m	language:C++	struct:dCSRmat
IA	include/fasp.h	/^    INT *IA;$/;"	m	language:C++	struct:iCSRmat
IA	include/fasp_block.h	/^    INT *IA;$/;"	m	language:C++	struct:dBSRmat
ICNTL	base/extra/interface/XtrMumps.c	23;"	d	language:C	file:
ILU_LEVSCH_OMP	base/include/fasp.h	43;"	d	language:C++
ILU_LEVSCH_OMP	include/fasp.h	43;"	d	language:C++
ILU_MC_OMP	base/include/fasp.h	1181;"	d	language:C++
ILU_MC_OMP	include/fasp.h	1181;"	d	language:C++
ILU_data	base/include/fasp.h	/^} ILU_data; \/**< Data for ILU *\/$/;"	t	language:C++	typeref:struct:__anon13
ILU_data	include/fasp.h	/^} ILU_data; \/**< Data for ILU *\/$/;"	t	language:C++	typeref:struct:__anon37
ILU_droptol	base/include/fasp.h	/^    REAL ILU_droptol;    \/**< drop tolerance *\/$/;"	m	language:C++	struct:__anon21
ILU_droptol	base/include/fasp.h	/^    REAL ILU_droptol;$/;"	m	language:C++	struct:__anon10
ILU_droptol	base/include/fasp.h	/^    REAL ILU_droptol;$/;"	m	language:C++	struct:__anon8
ILU_droptol	include/fasp.h	/^    REAL ILU_droptol;    \/**< drop tolerance *\/$/;"	m	language:C++	struct:__anon45
ILU_droptol	include/fasp.h	/^    REAL ILU_droptol;$/;"	m	language:C++	struct:__anon32
ILU_droptol	include/fasp.h	/^    REAL ILU_droptol;$/;"	m	language:C++	struct:__anon34
ILU_levels	base/include/fasp.h	/^    INT ILU_levels;$/;"	m	language:C++	struct:__anon15
ILU_levels	base/include/fasp.h	/^    SHORT ILU_levels;$/;"	m	language:C++	struct:__anon10
ILU_levels	base/include/fasp_block.h	/^    INT ILU_levels;$/;"	m	language:C++	struct:__anon2
ILU_levels	include/fasp.h	/^    INT ILU_levels;$/;"	m	language:C++	struct:__anon39
ILU_levels	include/fasp.h	/^    SHORT ILU_levels;$/;"	m	language:C++	struct:__anon34
ILU_levels	include/fasp_block.h	/^    INT ILU_levels;$/;"	m	language:C++	struct:__anon26
ILU_lfil	base/include/fasp.h	/^    INT ILU_lfil;        \/**< level of fill-in *\/$/;"	m	language:C++	struct:__anon21
ILU_lfil	base/include/fasp.h	/^    INT ILU_lfil;$/;"	m	language:C++	struct:__anon10
ILU_lfil	base/include/fasp.h	/^    INT ILU_lfil;$/;"	m	language:C++	struct:__anon8
ILU_lfil	include/fasp.h	/^    INT ILU_lfil;        \/**< level of fill-in *\/$/;"	m	language:C++	struct:__anon45
ILU_lfil	include/fasp.h	/^    INT ILU_lfil;$/;"	m	language:C++	struct:__anon32
ILU_lfil	include/fasp.h	/^    INT ILU_lfil;$/;"	m	language:C++	struct:__anon34
ILU_param	base/include/fasp.h	/^} ILU_param; \/**< Parameters for ILU *\/$/;"	t	language:C++	typeref:struct:__anon8
ILU_param	include/fasp.h	/^} ILU_param; \/**< Parameters for ILU *\/$/;"	t	language:C++	typeref:struct:__anon32
ILU_permtol	base/include/fasp.h	/^    REAL ILU_permtol;    \/**< permutation tolerance *\/$/;"	m	language:C++	struct:__anon21
ILU_permtol	base/include/fasp.h	/^    REAL ILU_permtol;$/;"	m	language:C++	struct:__anon10
ILU_permtol	base/include/fasp.h	/^    REAL ILU_permtol;$/;"	m	language:C++	struct:__anon8
ILU_permtol	include/fasp.h	/^    REAL ILU_permtol;    \/**< permutation tolerance *\/$/;"	m	language:C++	struct:__anon45
ILU_permtol	include/fasp.h	/^    REAL ILU_permtol;$/;"	m	language:C++	struct:__anon32
ILU_permtol	include/fasp.h	/^    REAL ILU_permtol;$/;"	m	language:C++	struct:__anon34
ILU_relax	base/include/fasp.h	/^    REAL ILU_relax;      \/**< scaling factor: add the sum of dropped entries to diagonal *\/$/;"	m	language:C++	struct:__anon21
ILU_relax	base/include/fasp.h	/^    REAL ILU_relax;$/;"	m	language:C++	struct:__anon10
ILU_relax	base/include/fasp.h	/^    REAL ILU_relax;$/;"	m	language:C++	struct:__anon8
ILU_relax	include/fasp.h	/^    REAL ILU_relax;      \/**< scaling factor: add the sum of dropped entries to diagonal *\/$/;"	m	language:C++	struct:__anon45
ILU_relax	include/fasp.h	/^    REAL ILU_relax;$/;"	m	language:C++	struct:__anon32
ILU_relax	include/fasp.h	/^    REAL ILU_relax;$/;"	m	language:C++	struct:__anon34
ILU_type	base/include/fasp.h	/^    SHORT ILU_type;      \/**< ILU type for decomposition*\/$/;"	m	language:C++	struct:__anon21
ILU_type	base/include/fasp.h	/^    SHORT ILU_type;$/;"	m	language:C++	struct:__anon10
ILU_type	base/include/fasp.h	/^    SHORT ILU_type;$/;"	m	language:C++	struct:__anon8
ILU_type	include/fasp.h	/^    SHORT ILU_type;      \/**< ILU type for decomposition*\/$/;"	m	language:C++	struct:__anon45
ILU_type	include/fasp.h	/^    SHORT ILU_type;$/;"	m	language:C++	struct:__anon32
ILU_type	include/fasp.h	/^    SHORT ILU_type;$/;"	m	language:C++	struct:__anon34
ILUk	base/include/fasp_const.h	147;"	d	language:C++
ILUk	include/fasp_const.h	147;"	d	language:C++
ILUt	base/include/fasp_const.h	148;"	d	language:C++
ILUt	include/fasp_const.h	148;"	d	language:C++
ILUtp	base/include/fasp_const.h	149;"	d	language:C++
ILUtp	include/fasp_const.h	149;"	d	language:C++
INCX	base/extra/hb_io/XtrHBIO.c	3686;"	d	language:C	file:
INCX	base/extra/hb_io/XtrHBIO.c	3768;"	d	language:C	file:
INITIAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1658;"	d	language:C	file:
INITIAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1758;"	d	language:C	file:
INITIAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1823;"	d	language:C	file:
INITIAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1854;"	d	language:C	file:
INITIAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1901;"	d	language:C	file:
INITIAL_LOCK	base/extra/include/malloc.c.h	1780;"	d	language:C++
INITIAL_LOCK	base/extra/include/malloc.c.h	1881;"	d	language:C++
INITIAL_LOCK	base/extra/include/malloc.c.h	1946;"	d	language:C++
INITIAL_LOCK	base/extra/include/malloc.c.h	1977;"	d	language:C++
INITIAL_LOCK	base/extra/include/malloc.c.h	2024;"	d	language:C++
INSECURE	base/extra/dlmalloc/dlmalloc.c	584;"	d	language:C	file:
INSECURE	base/extra/include/malloc.c.h	604;"	d	language:C++
INT	base/include/fasp.h	65;"	d	language:C++
INT	include/fasp.h	65;"	d	language:C++
INTERIORI	test/include/assemble.h	12;"	d	language:C++
INTERIORI	test/include/mesh.h	9;"	d	language:C++
INTERIROI	test/main/testfct_heat.inl	15;"	d	language:C++	file:
INTERIROI	test/main/testfct_poisson.inl	14;"	d	language:C++	file:
INTERP_DIR	base/include/fasp_const.h	213;"	d	language:C++
INTERP_DIR	include/fasp_const.h	213;"	d	language:C++
INTERP_ENG	base/include/fasp_const.h	215;"	d	language:C++
INTERP_ENG	include/fasp_const.h	215;"	d	language:C++
INTERP_EXT	base/include/fasp_const.h	216;"	d	language:C++
INTERP_EXT	include/fasp_const.h	216;"	d	language:C++
INTERP_STD	base/include/fasp_const.h	214;"	d	language:C++
INTERP_STD	include/fasp_const.h	214;"	d	language:C++
INUSE_BITS	base/extra/dlmalloc/dlmalloc.c	2119;"	d	language:C	file:
INUSE_BITS	base/extra/include/malloc.c.h	2241;"	d	language:C++
ISNAN	base/include/fasp.h	84;"	d	language:C++
ISNAN	include/fasp.h	84;"	d	language:C++
ISPT	base/include/fasp_const.h	225;"	d	language:C++
ISPT	include/fasp_const.h	225;"	d	language:C++
ITS_CHECK	base/src/KryUtil.inl	/^static inline void ITS_CHECK (const INT MaxIt, const REAL tol)$/;"	f	language:C++	file:	signature:(const INT MaxIt, const REAL tol)
ITS_COMPRES	base/src/KryUtil.inl	47;"	d	language:C++	file:
ITS_DIFFRES	base/src/KryUtil.inl	56;"	d	language:C++	file:
ITS_DIVZERO	base/src/KryUtil.inl	41;"	d	language:C++	file:
ITS_FACONV	base/src/KryUtil.inl	26;"	d	language:C++	file:
ITS_FINAL	base/src/KryUtil.inl	/^static inline void ITS_FINAL (const INT iter, const INT MaxIt, const REAL relres)$/;"	f	language:C++	file:	signature:(const INT iter, const INT MaxIt, const REAL relres)
ITS_PUTNORM	base/src/KryUtil.inl	59;"	d	language:C++	file:
ITS_REALRES	base/src/KryUtil.inl	44;"	d	language:C++	file:
ITS_RESTART	base/src/KryUtil.inl	32;"	d	language:C++	file:
ITS_RESTORE	base/src/KryUtil.inl	53;"	d	language:C++	file:
ITS_SMALLSP	base/src/KryUtil.inl	50;"	d	language:C++	file:
ITS_STAGGED	base/src/KryUtil.inl	35;"	d	language:C++	file:
ITS_ZEROSOL	base/src/KryUtil.inl	29;"	d	language:C++	file:
ITS_ZEROTOL	base/src/KryUtil.inl	38;"	d	language:C++	file:
ITS_param	base/include/fasp.h	/^} ITS_param; \/**< Parameters for iterative solvers *\/$/;"	t	language:C++	typeref:struct:__anon7
ITS_param	include/fasp.h	/^} ITS_param; \/**< Parameters for iterative solvers *\/$/;"	t	language:C++	typeref:struct:__anon31
InitOpts	FASP_install.tcl	/^proc InitOpts { } {$/;"	p	language:Tcl
InstallError	FASP_install.tcl	/^proc InstallError { x } {$/;"	p	language:Tcl
InstallHelper	FASP_install.tcl	/^proc InstallHelper { s } {$/;"	p	language:Tcl
InstallStatus	FASP_install.tcl	/^proc InstallStatus { s } {$/;"	p	language:Tcl
Introduction	doc/userguide.tex	/^\\tableofcontents$/;"	c	language:Tex
ItemsSelect	FASP_install.tcl	/^proc ItemsSelect { w y } {$/;"	p	language:Tcl
J	base/include/fasp.h	/^    INT *J;$/;"	m	language:C++	struct:iCOOmat
J	include/fasp.h	/^    INT *J;$/;"	m	language:C++	struct:iCOOmat
JA	base/include/fasp.h	/^    INT *JA;$/;"	m	language:C++	struct:dCSRmat
JA	base/include/fasp.h	/^    INT *JA;$/;"	m	language:C++	struct:iCSRmat
JA	base/include/fasp_block.h	/^    INT *JA;$/;"	m	language:C++	struct:dBSRmat
JA	include/fasp.h	/^    INT *JA;$/;"	m	language:C++	struct:dCSRmat
JA	include/fasp.h	/^    INT *JA;$/;"	m	language:C++	struct:iCSRmat
JA	include/fasp_block.h	/^    INT *JA;$/;"	m	language:C++	struct:dBSRmat
Kcycle_dcsr_pgcg	base/src/PreMGRecurAMLI.inl	/^static SHORT Kcycle_dcsr_pgcg (dCSRmat   *A,$/;"	f	language:C++	file:	signature:(dCSRmat *A, dvector *b, dvector *u, precond *pc)
Kcycle_dcsr_pgcr	base/src/PreMGRecurAMLI.inl	/^static SHORT Kcycle_dcsr_pgcr (dCSRmat   *A,$/;"	f	language:C++	file:	signature:(dCSRmat *A, dvector *b, dvector *u, precond *pc)
L2NormError1d	test/main/testgmg.c	/^static REAL L2NormError1d (REAL *u,$/;"	f	language:C	file:	signature:(REAL *u, INT nx)
L2NormError2d	test/main/testgmg.c	/^static REAL L2NormError2d (REAL *u,$/;"	f	language:C	file:	signature:(REAL *u, INT nx, INT ny)
L2NormError2d	tutorial/main/poisson-gmg.c	/^static REAL L2NormError2d (REAL *u,$/;"	f	language:C	file:	signature:(REAL *u, INT nx, INT ny)
L2NormError3d	test/main/testgmg.c	/^static REAL L2NormError3d (REAL *u,$/;"	f	language:C	file:	signature:(REAL *u, INT nx, INT ny, INT nz)
LACKS_ERRNO_H	base/extra/dlmalloc/dlmalloc.c	510;"	d	language:C	file:
LACKS_ERRNO_H	base/extra/include/malloc.c.h	530;"	d	language:C++
LACKS_FCNTL_H	base/extra/dlmalloc/dlmalloc.c	495;"	d	language:C	file:
LACKS_FCNTL_H	base/extra/include/malloc.c.h	514;"	d	language:C++
LACKS_STRINGS_H	base/extra/dlmalloc/dlmalloc.c	508;"	d	language:C	file:
LACKS_STRINGS_H	base/extra/include/malloc.c.h	528;"	d	language:C++
LACKS_STRING_H	base/extra/dlmalloc/dlmalloc.c	507;"	d	language:C	file:
LACKS_STRING_H	base/extra/include/malloc.c.h	527;"	d	language:C++
LACKS_SYS_MMAN_H	base/extra/dlmalloc/dlmalloc.c	506;"	d	language:C	file:
LACKS_SYS_MMAN_H	base/extra/include/malloc.c.h	526;"	d	language:C++
LACKS_SYS_PARAM_H	base/extra/dlmalloc/dlmalloc.c	505;"	d	language:C	file:
LACKS_SYS_PARAM_H	base/extra/include/malloc.c.h	525;"	d	language:C++
LACKS_SYS_TYPES_H	base/extra/dlmalloc/dlmalloc.c	509;"	d	language:C	file:
LACKS_SYS_TYPES_H	base/extra/include/malloc.c.h	529;"	d	language:C++
LACKS_UNISTD_H	base/extra/dlmalloc/dlmalloc.c	504;"	d	language:C	file:
LACKS_UNISTD_H	base/extra/include/malloc.c.h	524;"	d	language:C++
LE	base/include/fasp.h	83;"	d	language:C++
LE	include/fasp.h	83;"	d	language:C++
LFLAGS	test/Makefile	/^LFLAGS = $(LINK_OPT) -L$(fasp_prefix)\/lib -lfasp $(mkl_lib)$/;"	m	language:Make
LFLAGS	tutorial/Makefile	/^LFLAGS = -L$(fasp_prefix)\/lib -lfasp $/;"	m	language:Make
LINE_MAX	base/extra/hb_io/XtrHBIO.c	1003;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	1061;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	1360;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	1509;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	1845;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	2076;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	2519;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	2664;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	3067;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	311;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	3146;"	d	language:C	file:
LINE_MAX	base/extra/hb_io/XtrHBIO.c	369;"	d	language:C	file:
LINKER	test/Makefile	/^LINKER = $(FC) $/;"	m	language:Make
LINKER	tutorial/Makefile	/^LINKER = $(FC) # because of linking with Fortran files$/;"	m	language:Make
LIST_HEAD	base/src/PreAMGUtil.inl	16;"	d	language:C++	file:
LIST_TAIL	base/src/PreAMGUtil.inl	17;"	d	language:C++	file:
LONG	base/include/fasp.h	66;"	d	language:C++
LONG	include/fasp.h	66;"	d	language:C++
LONGLONG	base/include/fasp.h	67;"	d	language:C++
LONGLONG	include/fasp.h	67;"	d	language:C++
LS	base/include/fasp.h	82;"	d	language:C++
LS	include/fasp.h	82;"	d	language:C++
LU	base/include/fasp.h	/^    ILU_data *LU;$/;"	m	language:C++	struct:__anon16
LU	base/include/fasp.h	/^    ILU_data *LU;$/;"	m	language:C++	struct:__anon17
LU	base/include/fasp.h	/^    ILU_data LU;$/;"	m	language:C++	struct:__anon15
LU	base/include/fasp_block.h	/^    ILU_data *LU;$/;"	m	language:C++	struct:__anon4
LU	base/include/fasp_block.h	/^    ILU_data LU;$/;"	m	language:C++	struct:__anon2
LU	include/fasp.h	/^    ILU_data *LU;$/;"	m	language:C++	struct:__anon40
LU	include/fasp.h	/^    ILU_data *LU;$/;"	m	language:C++	struct:__anon41
LU	include/fasp.h	/^    ILU_data LU;$/;"	m	language:C++	struct:__anon39
LU	include/fasp_block.h	/^    ILU_data *LU;$/;"	m	language:C++	struct:__anon28
LU	include/fasp_block.h	/^    ILU_data LU;$/;"	m	language:C++	struct:__anon26
LU_diag	base/include/fasp_block.h	/^    void **LU_diag;       \/**< LU decomposition for the diagonal blocks (for UMFpack) *\/$/;"	m	language:C++	struct:__anon5
LU_diag	include/fasp_block.h	/^    void **LU_diag;       \/**< LU decomposition for the diagonal blocks (for UMFpack) *\/$/;"	m	language:C++	struct:__anon29
Link	base/src/PreAMGUtil.inl	/^} Link; \/**< General data structure for Links *\/$/;"	t	language:C++	typeref:struct:__anon1	file:
LinkList	base/src/PreAMGUtil.inl	/^typedef ListElement *LinkList; \/**< linked list *\/$/;"	t	language:C++	file:
ListElement	base/src/PreAMGUtil.inl	/^} ListElement; \/**< Linked element in list *\/$/;"	t	language:C++	typeref:struct:linked_list	file:
MALLINFO_FIELD_TYPE	base/extra/dlmalloc/dlmalloc.c	655;"	d	language:C	file:
MALLINFO_FIELD_TYPE	base/extra/include/dlmalloc.h	65;"	d	language:C++
MALLINFO_FIELD_TYPE	base/extra/include/malloc.c.h	675;"	d	language:C++
MALLOC_280_H	base/extra/include/dlmalloc.h	26;"	d	language:C++
MALLOC_ALIGNMENT	base/extra/dlmalloc/dlmalloc.c	528;"	d	language:C	file:
MALLOC_ALIGNMENT	base/extra/dlmalloc/dlmalloc.c	559;"	d	language:C	file:
MALLOC_ALIGNMENT	base/extra/include/malloc.c.h	548;"	d	language:C++
MALLOC_ALIGNMENT	base/extra/include/malloc.c.h	579;"	d	language:C++
MALLOC_FAILURE_ACTION	base/extra/dlmalloc/dlmalloc.c	512;"	d	language:C	file:
MALLOC_FAILURE_ACTION	base/extra/dlmalloc/dlmalloc.c	600;"	d	language:C	file:
MALLOC_FAILURE_ACTION	base/extra/include/malloc.c.h	532;"	d	language:C++
MALLOC_FAILURE_ACTION	base/extra/include/malloc.c.h	620;"	d	language:C++
MAP_ANONYMOUS	base/extra/dlmalloc/dlmalloc.c	1482;"	d	language:C	file:
MAP_ANONYMOUS	base/extra/include/malloc.c.h	1525;"	d	language:C++
MAT_BLC	base/include/fasp_const.h	89;"	d	language:C++
MAT_BLC	include/fasp_const.h	89;"	d	language:C++
MAT_BSR	base/include/fasp_const.h	85;"	d	language:C++
MAT_BSR	include/fasp_const.h	85;"	d	language:C++
MAT_CSR	base/include/fasp_const.h	84;"	d	language:C++
MAT_CSR	include/fasp_const.h	84;"	d	language:C++
MAT_CSRL	base/include/fasp_const.h	87;"	d	language:C++
MAT_CSRL	include/fasp_const.h	87;"	d	language:C++
MAT_FREE	base/include/fasp_const.h	82;"	d	language:C++
MAT_FREE	include/fasp_const.h	82;"	d	language:C++
MAT_STR	base/include/fasp_const.h	86;"	d	language:C++
MAT_STR	include/fasp_const.h	86;"	d	language:C++
MAT_SymCSR	base/include/fasp_const.h	88;"	d	language:C++
MAT_SymCSR	include/fasp_const.h	88;"	d	language:C++
MAT_bBSR	base/include/fasp_const.h	94;"	d	language:C++
MAT_bBSR	include/fasp_const.h	94;"	d	language:C++
MAT_bCSR	base/include/fasp_const.h	93;"	d	language:C++
MAT_bCSR	include/fasp_const.h	93;"	d	language:C++
MAT_bSTR	base/include/fasp_const.h	95;"	d	language:C++
MAT_bSTR	include/fasp_const.h	95;"	d	language:C++
MAX	base/include/fasp.h	73;"	d	language:C++
MAX	include/fasp.h	73;"	d	language:C++
MAXTHREADSINPOOL	base/extra/nedmalloc/nedmalloc.c	116;"	d	language:C	file:
MAX_AMG_LVL	base/include/fasp_const.h	249;"	d	language:C++
MAX_AMG_LVL	include/fasp_const.h	249;"	d	language:C++
MAX_CRATE	base/include/fasp_const.h	252;"	d	language:C++
MAX_CRATE	include/fasp_const.h	252;"	d	language:C++
MAX_QUAD	test/src/FemHeatEqn.c	12;"	d	language:C	file:
MAX_QUAD	test/src/FemPoisson.c	22;"	d	language:C	file:
MAX_REFINE_LVL	base/include/fasp_const.h	248;"	d	language:C++
MAX_REFINE_LVL	include/fasp_const.h	248;"	d	language:C++
MAX_RELEASE_CHECK_RATE	base/extra/dlmalloc/dlmalloc.c	640;"	d	language:C	file:
MAX_RELEASE_CHECK_RATE	base/extra/dlmalloc/dlmalloc.c	642;"	d	language:C	file:
MAX_RELEASE_CHECK_RATE	base/extra/include/malloc.c.h	660;"	d	language:C++
MAX_RELEASE_CHECK_RATE	base/extra/include/malloc.c.h	662;"	d	language:C++
MAX_REQUEST	base/extra/dlmalloc/dlmalloc.c	2094;"	d	language:C	file:
MAX_REQUEST	base/extra/include/malloc.c.h	2216;"	d	language:C++
MAX_RESTART	base/include/fasp_const.h	253;"	d	language:C++
MAX_RESTART	include/fasp_const.h	253;"	d	language:C++
MAX_SIZE_T	base/extra/dlmalloc/dlmalloc.c	544;"	d	language:C	file:
MAX_SIZE_T	base/extra/include/malloc.c.h	564;"	d	language:C++
MAX_SMALL_REQUEST	base/extra/dlmalloc/dlmalloc.c	2441;"	d	language:C	file:
MAX_SMALL_REQUEST	base/extra/include/malloc.c.h	2563;"	d	language:C++
MAX_SMALL_SIZE	base/extra/dlmalloc/dlmalloc.c	2440;"	d	language:C	file:
MAX_SMALL_SIZE	base/extra/include/malloc.c.h	2562;"	d	language:C++
MAX_STAG	base/include/fasp_const.h	254;"	d	language:C++
MAX_STAG	include/fasp_const.h	254;"	d	language:C++
MCHUNK_SIZE	base/extra/dlmalloc/dlmalloc.c	2070;"	d	language:C	file:
MCHUNK_SIZE	base/extra/include/malloc.c.h	2192;"	d	language:C++
MFAIL	base/extra/dlmalloc/dlmalloc.c	1473;"	d	language:C	file:
MFAIL	base/extra/include/malloc.c.h	1518;"	d	language:C++
MIN	base/include/fasp.h	74;"	d	language:C++
MIN	include/fasp.h	74;"	d	language:C++
MIN_CDOF	base/include/fasp_const.h	250;"	d	language:C++
MIN_CDOF	include/fasp_const.h	250;"	d	language:C++
MIN_CHUNK_SIZE	base/extra/dlmalloc/dlmalloc.c	2084;"	d	language:C	file:
MIN_CHUNK_SIZE	base/extra/include/malloc.c.h	2206;"	d	language:C++
MIN_CRATE	base/include/fasp_const.h	251;"	d	language:C++
MIN_CRATE	include/fasp_const.h	251;"	d	language:C++
MIN_LARGE_SIZE	base/extra/dlmalloc/dlmalloc.c	2439;"	d	language:C	file:
MIN_LARGE_SIZE	base/extra/include/malloc.c.h	2561;"	d	language:C++
MIN_REQUEST	base/extra/dlmalloc/dlmalloc.c	2095;"	d	language:C	file:
MIN_REQUEST	base/extra/include/malloc.c.h	2217;"	d	language:C++
MIN_SMALL_INDEX	base/extra/dlmalloc/dlmalloc.c	2682;"	d	language:C	file:
MIN_SMALL_INDEX	base/extra/include/malloc.c.h	2783;"	d	language:C++
MLOCK_T	base/extra/dlmalloc/dlmalloc.c	1656;"	d	language:C	file:
MLOCK_T	base/extra/dlmalloc/dlmalloc.c	1756;"	d	language:C	file:
MLOCK_T	base/extra/dlmalloc/dlmalloc.c	1821;"	d	language:C	file:
MLOCK_T	base/extra/dlmalloc/dlmalloc.c	1852;"	d	language:C	file:
MLOCK_T	base/extra/include/malloc.c.h	1778;"	d	language:C++
MLOCK_T	base/extra/include/malloc.c.h	1879;"	d	language:C++
MLOCK_T	base/extra/include/malloc.c.h	1944;"	d	language:C++
MLOCK_T	base/extra/include/malloc.c.h	1975;"	d	language:C++
MMAP	base/extra/dlmalloc/dlmalloc.c	1585;"	d	language:C	file:
MMAP	base/extra/include/malloc.c.h	1706;"	d	language:C++
MMAP_CHUNK_OVERHEAD	base/extra/dlmalloc/dlmalloc.c	2079;"	d	language:C	file:
MMAP_CHUNK_OVERHEAD	base/extra/include/malloc.c.h	2201;"	d	language:C++
MMAP_CLEARS	base/extra/dlmalloc/dlmalloc.c	515;"	d	language:C	file:
MMAP_CLEARS	base/extra/dlmalloc/dlmalloc.c	517;"	d	language:C	file:
MMAP_CLEARS	base/extra/dlmalloc/dlmalloc.c	590;"	d	language:C	file:
MMAP_CLEARS	base/extra/include/malloc.c.h	535;"	d	language:C++
MMAP_CLEARS	base/extra/include/malloc.c.h	537;"	d	language:C++
MMAP_CLEARS	base/extra/include/malloc.c.h	610;"	d	language:C++
MMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1486;"	d	language:C	file:
MMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1494;"	d	language:C	file:
MMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1535;"	d	language:C	file:
MMAP_DEFAULT	base/extra/include/malloc.c.h	1558;"	d	language:C++
MMAP_DEFAULT	base/extra/include/malloc.c.h	1566;"	d	language:C++
MMAP_DEFAULT	base/extra/include/malloc.c.h	1656;"	d	language:C++
MMAP_FLAGS	base/extra/dlmalloc/dlmalloc.c	1485;"	d	language:C	file:
MMAP_FLAGS	base/extra/dlmalloc/dlmalloc.c	1492;"	d	language:C	file:
MMAP_FLAGS	base/extra/include/malloc.c.h	1557;"	d	language:C++
MMAP_FLAGS	base/extra/include/malloc.c.h	1564;"	d	language:C++
MMAP_FOOT_PAD	base/extra/dlmalloc/dlmalloc.c	2081;"	d	language:C	file:
MMAP_FOOT_PAD	base/extra/include/malloc.c.h	2203;"	d	language:C++
MMAP_IMPL	base/extra/include/malloc.c.h	1528;"	d	language:C++
MMAP_IMPL	base/extra/include/malloc.c.h	1552;"	d	language:C++
MMAP_PROT	base/extra/dlmalloc/dlmalloc.c	1480;"	d	language:C	file:
MMAP_PROT	base/extra/include/malloc.c.h	1555;"	d	language:C++
MORECORE_CONTIGUOUS	base/extra/dlmalloc/dlmalloc.c	610;"	d	language:C	file:
MORECORE_CONTIGUOUS	base/extra/dlmalloc/dlmalloc.c	614;"	d	language:C	file:
MORECORE_CONTIGUOUS	base/extra/include/malloc.c.h	630;"	d	language:C++
MORECORE_CONTIGUOUS	base/extra/include/malloc.c.h	634;"	d	language:C++
MORECORE_DEFAULT	base/extra/dlmalloc/dlmalloc.c	612;"	d	language:C	file:
MORECORE_DEFAULT	base/extra/include/malloc.c.h	632;"	d	language:C++
MREMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1543;"	d	language:C	file:
MREMAP_DEFAULT	base/extra/include/malloc.c.h	1664;"	d	language:C++
MSPACES	base/extra/dlmalloc/dlmalloc.c	553;"	d	language:C	file:
MSPACES	base/extra/dlmalloc/dlmalloc.c	555;"	d	language:C	file:
MSPACES	base/extra/include/malloc.c.h	573;"	d	language:C++
MSPACES	base/extra/include/malloc.c.h	575;"	d	language:C++
MSPACES	base/extra/nedmalloc/nedmalloc.c	65;"	d	language:C	file:
MULTI_COLORS_ORDER	base/include/fasp.h	42;"	d	language:C++
MULTI_COLORS_ORDER	include/fasp.h	42;"	d	language:C++
MUNMAP	base/extra/dlmalloc/dlmalloc.c	1586;"	d	language:C	file:
MUNMAP	base/extra/include/malloc.c.h	1707;"	d	language:C++
MUNMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1479;"	d	language:C	file:
MUNMAP_DEFAULT	base/extra/dlmalloc/dlmalloc.c	1536;"	d	language:C	file:
MUNMAP_DEFAULT	base/extra/include/malloc.c.h	1554;"	d	language:C++
MUNMAP_DEFAULT	base/extra/include/malloc.c.h	1657;"	d	language:C++
M_GRANULARITY	base/extra/dlmalloc/dlmalloc.c	669;"	d	language:C	file:
M_GRANULARITY	base/extra/include/dlmalloc.h	183;"	d	language:C++
M_GRANULARITY	base/extra/include/malloc.c.h	689;"	d	language:C++
M_MMAP_THRESHOLD	base/extra/dlmalloc/dlmalloc.c	670;"	d	language:C	file:
M_MMAP_THRESHOLD	base/extra/include/dlmalloc.h	184;"	d	language:C++
M_MMAP_THRESHOLD	base/extra/include/malloc.c.h	690;"	d	language:C++
M_TRIM_THRESHOLD	base/extra/dlmalloc/dlmalloc.c	668;"	d	language:C	file:
M_TRIM_THRESHOLD	base/extra/include/dlmalloc.h	182;"	d	language:C++
M_TRIM_THRESHOLD	base/extra/include/malloc.c.h	688;"	d	language:C++
Mesh	test/include/mesh.h	/^typedef struct Mesh{$/;"	s	language:C++
Mesh	test/include/mesh.h	/^} Mesh;$/;"	t	language:C++	typeref:struct:Mesh
Mesh_aux	test/include/mesh.h	/^typedef struct Mesh_aux{$/;"	s	language:C++
Mesh_aux	test/include/mesh.h	/^} Mesh_aux;$/;"	t	language:C++	typeref:struct:Mesh_aux
Million	base/src/AuxMemory.c	/^const    INT Million           = 1048576;  \/\/! 1M = 1024*1024$/;"	v	language:C
Mumps_data	base/include/fasp.h	/^} Mumps_data; \/**< Data for MUMPS *\/$/;"	t	language:C++	typeref:struct:__anon11
Mumps_data	include/fasp.h	/^} Mumps_data; \/**< Data for MUMPS *\/$/;"	t	language:C++	typeref:struct:__anon35
NDEBUG	base/extra/nedmalloc/nedmalloc.c	32;"	d	language:C	file:
NEDMALLOC	base/include/fasp.h	49;"	d	language:C++
NEDMALLOC	include/fasp.h	49;"	d	language:C++
NEDMALLOCEXTSPEC	base/extra/include/nedmalloc.h	87;"	d	language:C++
NEDMALLOCEXTSPEC	base/extra/include/nedmalloc.h	89;"	d	language:C++
NEDMALLOCEXTSPEC	base/extra/include/nedmalloc.h	95;"	d	language:C++
NEDMALLOCNOALIASATTR	base/extra/include/nedmalloc.h	115;"	d	language:C++
NEDMALLOCNOALIASATTR	base/extra/include/nedmalloc.h	124;"	d	language:C++
NEDMALLOCPTRATTR	base/extra/include/nedmalloc.h	114;"	d	language:C++
NEDMALLOCPTRATTR	base/extra/include/nedmalloc.h	118;"	d	language:C++
NEDMALLOCPTRATTR	base/extra/include/nedmalloc.h	121;"	d	language:C++
NEDMALLOC_DEBUG	base/extra/nedmalloc/nedmalloc.c	75;"	d	language:C	file:
NEDMALLOC_DEBUG	base/extra/nedmalloc/nedmalloc.c	77;"	d	language:C	file:
NEDMALLOC_H	base/extra/include/nedmalloc.h	30;"	d	language:C++
NEED_GLOBAL_LOCK_INIT	base/extra/dlmalloc/dlmalloc.c	1858;"	d	language:C	file:
NEED_GLOBAL_LOCK_INIT	base/extra/include/malloc.c.h	1981;"	d	language:C++
NL_AMLI_CYCLE	base/include/fasp_const.h	179;"	d	language:C++
NL_AMLI_CYCLE	include/fasp_const.h	179;"	d	language:C++
NNZ	base/include/fasp_block.h	/^    INT NNZ;$/;"	m	language:C++	struct:dBSRmat
NNZ	include/fasp_block.h	/^    INT NNZ;$/;"	m	language:C++	struct:dBSRmat
NOINLINE	base/extra/dlmalloc/dlmalloc.c	734;"	d	language:C	file:
NOINLINE	base/extra/dlmalloc/dlmalloc.c	736;"	d	language:C	file:
NOINLINE	base/extra/dlmalloc/dlmalloc.c	738;"	d	language:C	file:
NOINLINE	base/extra/include/malloc.c.h	754;"	d	language:C++
NOINLINE	base/extra/include/malloc.c.h	756;"	d	language:C++
NOINLINE	base/extra/include/malloc.c.h	758;"	d	language:C++
NOINLINE	base/extra/nedmalloc/nedmalloc.c	52;"	d	language:C	file:
NO_MALLINFO	base/extra/dlmalloc/dlmalloc.c	652;"	d	language:C	file:
NO_MALLINFO	base/extra/include/dlmalloc.h	38;"	d	language:C++
NO_MALLINFO	base/extra/include/malloc.c.h	672;"	d	language:C++
NO_ORDER	base/include/fasp_const.h	230;"	d	language:C++
NO_ORDER	include/fasp_const.h	230;"	d	language:C++
NO_SEGMENT_TRAVERSAL	base/extra/dlmalloc/dlmalloc.c	658;"	d	language:C	file:
NO_SEGMENT_TRAVERSAL	base/extra/include/malloc.c.h	678;"	d	language:C++
NPAIR	base/include/fasp_const.h	170;"	d	language:C++
NPAIR	include/fasp_const.h	170;"	d	language:C++
NSMALLBINS	base/extra/dlmalloc/dlmalloc.c	2434;"	d	language:C	file:
NSMALLBINS	base/extra/include/malloc.c.h	2556;"	d	language:C++
NTREEBINS	base/extra/dlmalloc/dlmalloc.c	2435;"	d	language:C	file:
NTREEBINS	base/extra/include/malloc.c.h	2557;"	d	language:C++
NumLayers	base/include/fasp_block.h	/^    INT NumLayers;      \/**< number of layers *\/$/;"	m	language:C++	struct:__anon6
NumLayers	include/fasp_block.h	/^    INT NumLayers;      \/**< number of layers *\/$/;"	m	language:C++	struct:__anon30
Numeric	base/include/fasp.h	/^    void *Numeric;$/;"	m	language:C++	struct:__anon15
Numeric	base/include/fasp_block.h	/^    void *Numeric;$/;"	m	language:C++	struct:__anon2
Numeric	include/fasp.h	/^    void *Numeric;$/;"	m	language:C++	struct:__anon39
Numeric	include/fasp_block.h	/^    void *Numeric;$/;"	m	language:C++	struct:__anon26
OFF	base/include/fasp_const.h	67;"	d	language:C++
OFF	include/fasp_const.h	67;"	d	language:C++
ON	base/include/fasp_const.h	66;"	d	language:C++
ON	include/fasp_const.h	66;"	d	language:C++
ONLY_MSPACES	base/extra/dlmalloc/dlmalloc.c	547;"	d	language:C	file:
ONLY_MSPACES	base/extra/dlmalloc/dlmalloc.c	549;"	d	language:C	file:
ONLY_MSPACES	base/extra/include/dlmalloc.h	35;"	d	language:C++
ONLY_MSPACES	base/extra/include/malloc.c.h	567;"	d	language:C++
ONLY_MSPACES	base/extra/include/malloc.c.h	569;"	d	language:C++
ONLY_MSPACES	base/extra/nedmalloc/nedmalloc.c	66;"	d	language:C	file:
OPENMP_HOLDS	base/include/fasp_const.h	256;"	d	language:C++
OPENMP_HOLDS	include/fasp_const.h	256;"	d	language:C++
P	base/include/fasp.h	/^    dCSRmat P;$/;"	m	language:C++	struct:__anon15
P	base/include/fasp_block.h	/^    dBSRmat P;$/;"	m	language:C++	struct:__anon2
P	include/fasp.h	/^    dCSRmat P;$/;"	m	language:C++	struct:__anon39
P	include/fasp_block.h	/^    dBSRmat P;$/;"	m	language:C++	struct:__anon26
PAIRWISE	base/include/fasp_const.h	168;"	d	language:C++
PAIRWISE	include/fasp_const.h	168;"	d	language:C++
PI	test/include/poisson_fdm.h	16;"	d	language:C++
PINUSE_BIT	base/extra/dlmalloc/dlmalloc.c	2116;"	d	language:C	file:
PINUSE_BIT	base/extra/include/malloc.c.h	2238;"	d	language:C++
POSTACTION	base/extra/dlmalloc/dlmalloc.c	2600;"	d	language:C	file:
POSTACTION	base/extra/dlmalloc/dlmalloc.c	2608;"	d	language:C	file:
POSTACTION	base/extra/include/malloc.c.h	2701;"	d	language:C++
POSTACTION	base/extra/include/malloc.c.h	2709;"	d	language:C++
PP	base/include/fasp_block.h	/^    dCSRmat PP;$/;"	m	language:C++	struct:__anon2
PP	include/fasp_block.h	/^    dCSRmat PP;$/;"	m	language:C++	struct:__anon26
PP_LU	base/include/fasp_block.h	/^    ILU_data PP_LU;$/;"	m	language:C++	struct:__anon2
PP_LU	include/fasp_block.h	/^    ILU_data PP_LU;$/;"	m	language:C++	struct:__anon26
PREACTION	base/extra/dlmalloc/dlmalloc.c	2599;"	d	language:C	file:
PREACTION	base/extra/dlmalloc/dlmalloc.c	2604;"	d	language:C	file:
PREACTION	base/extra/include/malloc.c.h	2700;"	d	language:C++
PREACTION	base/extra/include/malloc.c.h	2705;"	d	language:C++
PREC_AMG	base/include/fasp_const.h	139;"	d	language:C++
PREC_AMG	include/fasp_const.h	139;"	d	language:C++
PREC_DIAG	base/include/fasp_const.h	138;"	d	language:C++
PREC_DIAG	include/fasp_const.h	138;"	d	language:C++
PREC_FMG	base/include/fasp_const.h	140;"	d	language:C++
PREC_FMG	include/fasp_const.h	140;"	d	language:C++
PREC_ILU	base/include/fasp_const.h	141;"	d	language:C++
PREC_ILU	include/fasp_const.h	141;"	d	language:C++
PREC_NULL	base/include/fasp_const.h	137;"	d	language:C++
PREC_NULL	include/fasp_const.h	137;"	d	language:C++
PREC_SCHWARZ	base/include/fasp_const.h	142;"	d	language:C++
PREC_SCHWARZ	include/fasp_const.h	142;"	d	language:C++
PRINT_ALL	base/include/fasp_const.h	77;"	d	language:C++
PRINT_ALL	include/fasp_const.h	77;"	d	language:C++
PRINT_MIN	base/include/fasp_const.h	73;"	d	language:C++
PRINT_MIN	include/fasp_const.h	73;"	d	language:C++
PRINT_MORE	base/include/fasp_const.h	75;"	d	language:C++
PRINT_MORE	include/fasp_const.h	75;"	d	language:C++
PRINT_MOST	base/include/fasp_const.h	76;"	d	language:C++
PRINT_MOST	include/fasp_const.h	76;"	d	language:C++
PRINT_NONE	base/include/fasp_const.h	72;"	d	language:C++
PRINT_NONE	include/fasp_const.h	72;"	d	language:C++
PRINT_SOME	base/include/fasp_const.h	74;"	d	language:C++
PRINT_SOME	include/fasp_const.h	74;"	d	language:C++
PROCEED_ON_ERROR	base/extra/dlmalloc/dlmalloc.c	571;"	d	language:C	file:
PROCEED_ON_ERROR	base/extra/include/malloc.c.h	591;"	d	language:C++
PTHREAD_MUTEX_RECURSIVE	base/extra/dlmalloc/dlmalloc.c	1836;"	d	language:C	file:
PTHREAD_MUTEX_RECURSIVE	base/extra/include/malloc.c.h	1959;"	d	language:C++
PUT_INT	base/include/fasp.h	89;"	d	language:C++
PUT_INT	include/fasp.h	89;"	d	language:C++
PUT_REAL	base/include/fasp.h	90;"	d	language:C++
PUT_REAL	include/fasp.h	90;"	d	language:C++
P_nk	base/include/fasp.h	/^    dCSRmat *P_nk;$/;"	m	language:C++	struct:__anon16
P_nk	base/include/fasp_block.h	/^    dCSRmat *P_nk;$/;"	m	language:C++	struct:__anon2
P_nk	base/include/fasp_block.h	/^    dCSRmat *P_nk;$/;"	m	language:C++	struct:__anon4
P_nk	include/fasp.h	/^    dCSRmat *P_nk;$/;"	m	language:C++	struct:__anon40
P_nk	include/fasp_block.h	/^    dCSRmat *P_nk;$/;"	m	language:C++	struct:__anon26
P_nk	include/fasp_block.h	/^    dCSRmat *P_nk;$/;"	m	language:C++	struct:__anon28
Pardiso_data	base/include/fasp.h	/^} Pardiso_data; \/**< Data for PARDISO *\/$/;"	t	language:C++	typeref:struct:__anon12
Pardiso_data	include/fasp.h	/^} Pardiso_data; \/**< Data for PARDISO *\/$/;"	t	language:C++	typeref:struct:__anon36
R	base/include/fasp.h	/^    dCSRmat R;$/;"	m	language:C++	struct:__anon15
R	base/include/fasp_block.h	/^    dBSRmat R;$/;"	m	language:C++	struct:__anon2
R	include/fasp.h	/^    dCSRmat R;$/;"	m	language:C++	struct:__anon39
R	include/fasp_block.h	/^    dBSRmat R;$/;"	m	language:C++	struct:__anon26
REAL	base/include/fasp.h	68;"	d	language:C++
REAL	include/fasp.h	68;"	d	language:C++
RELEASE_LOCK	base/extra/dlmalloc/dlmalloc.c	1660;"	d	language:C	file:
RELEASE_LOCK	base/extra/dlmalloc/dlmalloc.c	1760;"	d	language:C	file:
RELEASE_LOCK	base/extra/dlmalloc/dlmalloc.c	1825;"	d	language:C	file:
RELEASE_LOCK	base/extra/dlmalloc/dlmalloc.c	1856;"	d	language:C	file:
RELEASE_LOCK	base/extra/include/malloc.c.h	1782;"	d	language:C++
RELEASE_LOCK	base/extra/include/malloc.c.h	1883;"	d	language:C++
RELEASE_LOCK	base/extra/include/malloc.c.h	1948;"	d	language:C++
RELEASE_LOCK	base/extra/include/malloc.c.h	1979;"	d	language:C++
RELEASE_MALLOC_GLOBAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1909;"	d	language:C	file:
RELEASE_MALLOC_GLOBAL_LOCK	base/extra/dlmalloc/dlmalloc.c	1913;"	d	language:C	file:
RELEASE_MALLOC_GLOBAL_LOCK	base/extra/include/malloc.c.h	2032;"	d	language:C++
RELEASE_MALLOC_GLOBAL_LOCK	base/extra/include/malloc.c.h	2036;"	d	language:C++
RESTRICT	base/extra/include/nedmalloc.h	100;"	d	language:C++
RESTRICT	base/extra/include/nedmalloc.h	103;"	d	language:C++
RESTRICT	base/extra/include/nedmalloc.h	106;"	d	language:C++
RESTRICT	base/extra/include/nedmalloc.h	110;"	d	language:C++
ROW	base/include/fasp_block.h	/^    INT ROW;$/;"	m	language:C++	struct:dBSRmat
ROW	include/fasp_block.h	/^    INT ROW;$/;"	m	language:C++	struct:dBSRmat
RS_C1	base/include/fasp.h	57;"	d	language:C++
RS_C1	include/fasp.h	57;"	d	language:C++
RTCHECK	base/extra/dlmalloc/dlmalloc.c	2891;"	d	language:C	file:
RTCHECK	base/extra/dlmalloc/dlmalloc.c	2893;"	d	language:C	file:
RTCHECK	base/extra/dlmalloc/dlmalloc.c	2896;"	d	language:C	file:
RTCHECK	base/extra/include/malloc.c.h	2992;"	d	language:C++
RTCHECK	base/extra/include/malloc.c.h	2994;"	d	language:C++
RTCHECK	base/extra/include/malloc.c.h	2997;"	d	language:C++
R_nk	base/include/fasp.h	/^    dCSRmat *R_nk;$/;"	m	language:C++	struct:__anon16
R_nk	base/include/fasp_block.h	/^    dCSRmat *R_nk;$/;"	m	language:C++	struct:__anon2
R_nk	base/include/fasp_block.h	/^    dCSRmat *R_nk;$/;"	m	language:C++	struct:__anon4
R_nk	include/fasp.h	/^    dCSRmat *R_nk;$/;"	m	language:C++	struct:__anon40
R_nk	include/fasp_block.h	/^    dCSRmat *R_nk;$/;"	m	language:C++	struct:__anon26
R_nk	include/fasp_block.h	/^    dCSRmat *R_nk;$/;"	m	language:C++	struct:__anon28
Roadmap  from basics to complex applications	doc/userguide.tex	/^\\end{snugshade}$/;"	s	language:Tex
Rr	base/src/ItrSmootherCSRpoly.c	/^static void Rr (dCSRmat *Amat, $/;"	f	language:C	file:	signature:(dCSRmat *Amat, REAL *Dinv, REAL *r, REAL *rbar, REAL *v0, REAL *v1, REAL *vnew, REAL *k, INT m)
RunIt	FASP_install.tcl	/^proc RunIt { f command0 } {$/;"	p	language:Tcl
SA_AMG	base/include/fasp_const.h	162;"	d	language:C++
SA_AMG	include/fasp_const.h	162;"	d	language:C++
SCHWARZ_BACKWARD	base/include/fasp_const.h	155;"	d	language:C++
SCHWARZ_BACKWARD	include/fasp_const.h	155;"	d	language:C++
SCHWARZ_FORWARD	base/include/fasp_const.h	154;"	d	language:C++
SCHWARZ_FORWARD	include/fasp_const.h	154;"	d	language:C++
SCHWARZ_SYMMETRIC	base/include/fasp_const.h	156;"	d	language:C++
SCHWARZ_SYMMETRIC	include/fasp_const.h	156;"	d	language:C++
SHORT	base/include/fasp.h	64;"	d	language:C++
SHORT	include/fasp.h	64;"	d	language:C++
SIX_SIZE_T_SIZES	base/extra/dlmalloc/dlmalloc.c	1449;"	d	language:C	file:
SIX_SIZE_T_SIZES	base/extra/include/malloc.c.h	1473;"	d	language:C++
SIZE_T_BITSIZE	base/extra/dlmalloc/dlmalloc.c	1439;"	d	language:C	file:
SIZE_T_BITSIZE	base/extra/include/malloc.c.h	1463;"	d	language:C++
SIZE_T_FOUR	base/extra/dlmalloc/dlmalloc.c	1446;"	d	language:C	file:
SIZE_T_FOUR	base/extra/include/malloc.c.h	1470;"	d	language:C++
SIZE_T_ONE	base/extra/dlmalloc/dlmalloc.c	1444;"	d	language:C	file:
SIZE_T_ONE	base/extra/include/malloc.c.h	1468;"	d	language:C++
SIZE_T_SIZE	base/extra/dlmalloc/dlmalloc.c	1438;"	d	language:C	file:
SIZE_T_SIZE	base/extra/include/malloc.c.h	1462;"	d	language:C++
SIZE_T_TWO	base/extra/dlmalloc/dlmalloc.c	1445;"	d	language:C	file:
SIZE_T_TWO	base/extra/include/malloc.c.h	1469;"	d	language:C++
SIZE_T_ZERO	base/extra/dlmalloc/dlmalloc.c	1443;"	d	language:C	file:
SIZE_T_ZERO	base/extra/include/malloc.c.h	1467;"	d	language:C++
SMALLBIN_SHIFT	base/extra/dlmalloc/dlmalloc.c	2436;"	d	language:C	file:
SMALLBIN_SHIFT	base/extra/include/malloc.c.h	2558;"	d	language:C++
SMALLBIN_WIDTH	base/extra/dlmalloc/dlmalloc.c	2437;"	d	language:C	file:
SMALLBIN_WIDTH	base/extra/include/malloc.c.h	2559;"	d	language:C++
SMALLREAL	base/include/fasp_const.h	246;"	d	language:C++
SMALLREAL	include/fasp_const.h	246;"	d	language:C++
SMALLREAL2	base/include/fasp_const.h	247;"	d	language:C++
SMALLREAL2	include/fasp_const.h	247;"	d	language:C++
SMOOTHER_BLKOIL	base/include/fasp_const.h	198;"	d	language:C++
SMOOTHER_BLKOIL	include/fasp_const.h	198;"	d	language:C++
SMOOTHER_CG	base/include/fasp_const.h	187;"	d	language:C++
SMOOTHER_CG	include/fasp_const.h	187;"	d	language:C++
SMOOTHER_GS	base/include/fasp_const.h	185;"	d	language:C++
SMOOTHER_GS	include/fasp_const.h	185;"	d	language:C++
SMOOTHER_GSOR	base/include/fasp_const.h	190;"	d	language:C++
SMOOTHER_GSOR	include/fasp_const.h	190;"	d	language:C++
SMOOTHER_JACOBI	base/include/fasp_const.h	184;"	d	language:C++
SMOOTHER_JACOBI	include/fasp_const.h	184;"	d	language:C++
SMOOTHER_L1DIAG	base/include/fasp_const.h	193;"	d	language:C++
SMOOTHER_L1DIAG	include/fasp_const.h	193;"	d	language:C++
SMOOTHER_POLY	base/include/fasp_const.h	192;"	d	language:C++
SMOOTHER_POLY	include/fasp_const.h	192;"	d	language:C++
SMOOTHER_SGS	base/include/fasp_const.h	186;"	d	language:C++
SMOOTHER_SGS	include/fasp_const.h	186;"	d	language:C++
SMOOTHER_SGSOR	base/include/fasp_const.h	191;"	d	language:C++
SMOOTHER_SGSOR	include/fasp_const.h	191;"	d	language:C++
SMOOTHER_SOR	base/include/fasp_const.h	188;"	d	language:C++
SMOOTHER_SOR	include/fasp_const.h	188;"	d	language:C++
SMOOTHER_SPETEN	base/include/fasp_const.h	199;"	d	language:C++
SMOOTHER_SPETEN	include/fasp_const.h	199;"	d	language:C++
SMOOTHER_SSOR	base/include/fasp_const.h	189;"	d	language:C++
SMOOTHER_SSOR	include/fasp_const.h	189;"	d	language:C++
SOLVER_AMG	base/include/fasp_const.h	119;"	d	language:C++
SOLVER_AMG	include/fasp_const.h	119;"	d	language:C++
SOLVER_BiCGstab	base/include/fasp_const.h	103;"	d	language:C++
SOLVER_BiCGstab	include/fasp_const.h	103;"	d	language:C++
SOLVER_CG	base/include/fasp_const.h	102;"	d	language:C++
SOLVER_CG	include/fasp_const.h	102;"	d	language:C++
SOLVER_DEFAULT	base/include/fasp_const.h	100;"	d	language:C++
SOLVER_DEFAULT	include/fasp_const.h	100;"	d	language:C++
SOLVER_FMG	base/include/fasp_const.h	120;"	d	language:C++
SOLVER_FMG	include/fasp_const.h	120;"	d	language:C++
SOLVER_GCG	base/include/fasp_const.h	108;"	d	language:C++
SOLVER_GCG	include/fasp_const.h	108;"	d	language:C++
SOLVER_GCR	base/include/fasp_const.h	109;"	d	language:C++
SOLVER_GCR	include/fasp_const.h	109;"	d	language:C++
SOLVER_GMRES	base/include/fasp_const.h	105;"	d	language:C++
SOLVER_GMRES	include/fasp_const.h	105;"	d	language:C++
SOLVER_MUMPS	base/include/fasp_const.h	124;"	d	language:C++
SOLVER_MUMPS	include/fasp_const.h	124;"	d	language:C++
SOLVER_MinRes	base/include/fasp_const.h	104;"	d	language:C++
SOLVER_MinRes	include/fasp_const.h	104;"	d	language:C++
SOLVER_PARDISO	base/include/fasp_const.h	125;"	d	language:C++
SOLVER_PARDISO	include/fasp_const.h	125;"	d	language:C++
SOLVER_SBiCGstab	base/include/fasp_const.h	112;"	d	language:C++
SOLVER_SBiCGstab	include/fasp_const.h	112;"	d	language:C++
SOLVER_SCG	base/include/fasp_const.h	111;"	d	language:C++
SOLVER_SCG	include/fasp_const.h	111;"	d	language:C++
SOLVER_SGCG	base/include/fasp_const.h	117;"	d	language:C++
SOLVER_SGCG	include/fasp_const.h	117;"	d	language:C++
SOLVER_SGMRES	base/include/fasp_const.h	114;"	d	language:C++
SOLVER_SGMRES	include/fasp_const.h	114;"	d	language:C++
SOLVER_SMinRes	base/include/fasp_const.h	113;"	d	language:C++
SOLVER_SMinRes	include/fasp_const.h	113;"	d	language:C++
SOLVER_SUPERLU	base/include/fasp_const.h	122;"	d	language:C++
SOLVER_SUPERLU	include/fasp_const.h	122;"	d	language:C++
SOLVER_SVFGMRES	base/include/fasp_const.h	116;"	d	language:C++
SOLVER_SVFGMRES	include/fasp_const.h	116;"	d	language:C++
SOLVER_SVGMRES	base/include/fasp_const.h	115;"	d	language:C++
SOLVER_SVGMRES	include/fasp_const.h	115;"	d	language:C++
SOLVER_UMFPACK	base/include/fasp_const.h	123;"	d	language:C++
SOLVER_UMFPACK	include/fasp_const.h	123;"	d	language:C++
SOLVER_VFGMRES	base/include/fasp_const.h	107;"	d	language:C++
SOLVER_VFGMRES	include/fasp_const.h	107;"	d	language:C++
SOLVER_VGMRES	base/include/fasp_const.h	106;"	d	language:C++
SOLVER_VGMRES	include/fasp_const.h	106;"	d	language:C++
SPAIR	base/include/fasp_const.h	171;"	d	language:C++
SPAIR	include/fasp_const.h	171;"	d	language:C++
SPINS_PER_YIELD	base/extra/dlmalloc/dlmalloc.c	1662;"	d	language:C	file:
SPINS_PER_YIELD	base/extra/dlmalloc/dlmalloc.c	1762;"	d	language:C	file:
SPINS_PER_YIELD	base/extra/include/malloc.c.h	1784;"	d	language:C++
SPINS_PER_YIELD	base/extra/include/malloc.c.h	1885;"	d	language:C++
SPIN_LOCKS_AVAILABLE	base/extra/dlmalloc/dlmalloc.c	538;"	d	language:C	file:
SPIN_LOCKS_AVAILABLE	base/extra/dlmalloc/dlmalloc.c	540;"	d	language:C	file:
SPIN_LOCKS_AVAILABLE	base/extra/include/malloc.c.h	558;"	d	language:C++
SPIN_LOCKS_AVAILABLE	base/extra/include/malloc.c.h	560;"	d	language:C++
SS	base/include/fasp_block.h	/^    dBSRmat SS;$/;"	m	language:C++	struct:__anon2
SS	include/fasp_block.h	/^    dBSRmat SS;$/;"	m	language:C++	struct:__anon26
SS_str	base/include/fasp.h	/^    dSTRmat *SS_str;$/;"	m	language:C++	struct:__anon17
SS_str	include/fasp.h	/^    dSTRmat *SS_str;$/;"	m	language:C++	struct:__anon41
STAG_RATIO	base/include/fasp_const.h	255;"	d	language:C++
STAG_RATIO	include/fasp_const.h	255;"	d	language:C++
STOP_MOD_REL_RES	base/include/fasp_const.h	132;"	d	language:C++
STOP_MOD_REL_RES	include/fasp_const.h	132;"	d	language:C++
STOP_REL_PRECRES	base/include/fasp_const.h	131;"	d	language:C++
STOP_REL_PRECRES	include/fasp_const.h	131;"	d	language:C++
STOP_REL_RES	base/include/fasp_const.h	130;"	d	language:C++
STOP_REL_RES	include/fasp_const.h	130;"	d	language:C++
STRUCT_MALLINFO_DECLARED	base/extra/dlmalloc/dlmalloc.c	703;"	d	language:C	file:
STRUCT_MALLINFO_DECLARED	base/extra/include/dlmalloc.h	68;"	d	language:C++
STRUCT_MALLINFO_DECLARED	base/extra/include/malloc.c.h	723;"	d	language:C++
SWAP	base/src/BlaSmallMatInv.c	17;"	d	language:C	file:
SWZ_blksolver	base/include/fasp.h	/^    INT SWZ_blksolver;   \/**< type of Schwarz block solver *\/$/;"	m	language:C++	struct:__anon21
SWZ_blksolver	base/include/fasp.h	/^    INT SWZ_blksolver;$/;"	m	language:C++	struct:__anon10
SWZ_blksolver	base/include/fasp.h	/^    INT SWZ_blksolver;$/;"	m	language:C++	struct:__anon9
SWZ_blksolver	include/fasp.h	/^    INT SWZ_blksolver;   \/**< type of Schwarz block solver *\/$/;"	m	language:C++	struct:__anon45
SWZ_blksolver	include/fasp.h	/^    INT SWZ_blksolver;$/;"	m	language:C++	struct:__anon33
SWZ_blksolver	include/fasp.h	/^    INT SWZ_blksolver;$/;"	m	language:C++	struct:__anon34
SWZ_block	base/src/BlaSchwarzSetup.c	/^static void SWZ_block (SWZ_data   *swzdata,$/;"	f	language:C	file:	signature:(SWZ_data *swzdata, const INT nblk, const INT *iblock, const INT *jblock, INT *mask)
SWZ_data	base/include/fasp.h	/^} SWZ_data; \/**< Data for Schwarz method *\/$/;"	t	language:C++	typeref:struct:__anon14
SWZ_data	include/fasp.h	/^} SWZ_data; \/**< Data for Schwarz method *\/$/;"	t	language:C++	typeref:struct:__anon38
SWZ_level	base/src/BlaSchwarzSetup.c	/^static void SWZ_level (const INT   inroot,$/;"	f	language:C	file:	signature:(const INT inroot, dCSRmat *A, INT *mask, INT *nlvl, INT *iblock, INT *jblock, const INT maxlev)
SWZ_levels	base/include/fasp.h	/^    INT SWZ_levels;$/;"	m	language:C++	struct:__anon10
SWZ_levels	base/include/fasp.h	/^    INT SWZ_levels;$/;"	m	language:C++	struct:__anon15
SWZ_levels	include/fasp.h	/^    INT SWZ_levels;$/;"	m	language:C++	struct:__anon34
SWZ_levels	include/fasp.h	/^    INT SWZ_levels;$/;"	m	language:C++	struct:__anon39
SWZ_maxlvl	base/include/fasp.h	/^    INT SWZ_maxlvl;      \/**< maximal levels *\/$/;"	m	language:C++	struct:__anon21
SWZ_maxlvl	base/include/fasp.h	/^    INT SWZ_maxlvl;$/;"	m	language:C++	struct:__anon10
SWZ_maxlvl	base/include/fasp.h	/^    INT SWZ_maxlvl;$/;"	m	language:C++	struct:__anon9
SWZ_maxlvl	include/fasp.h	/^    INT SWZ_maxlvl;      \/**< maximal levels *\/$/;"	m	language:C++	struct:__anon45
SWZ_maxlvl	include/fasp.h	/^    INT SWZ_maxlvl;$/;"	m	language:C++	struct:__anon33
SWZ_maxlvl	include/fasp.h	/^    INT SWZ_maxlvl;$/;"	m	language:C++	struct:__anon34
SWZ_mmsize	base/include/fasp.h	/^    INT SWZ_mmsize;      \/**< maximal block size *\/$/;"	m	language:C++	struct:__anon21
SWZ_mmsize	base/include/fasp.h	/^    INT SWZ_mmsize;$/;"	m	language:C++	struct:__anon10
SWZ_mmsize	base/include/fasp.h	/^    INT SWZ_mmsize;$/;"	m	language:C++	struct:__anon9
SWZ_mmsize	include/fasp.h	/^    INT SWZ_mmsize;      \/**< maximal block size *\/$/;"	m	language:C++	struct:__anon45
SWZ_mmsize	include/fasp.h	/^    INT SWZ_mmsize;$/;"	m	language:C++	struct:__anon33
SWZ_mmsize	include/fasp.h	/^    INT SWZ_mmsize;$/;"	m	language:C++	struct:__anon34
SWZ_param	base/include/fasp.h	/^} SWZ_param; \/**< Parameters for Schwarz method *\/$/;"	t	language:C++	typeref:struct:__anon9
SWZ_param	include/fasp.h	/^} SWZ_param; \/**< Parameters for Schwarz method *\/$/;"	t	language:C++	typeref:struct:__anon33
SWZ_type	base/include/fasp.h	/^    INT SWZ_type;        \/**< type of Schwarz method *\/$/;"	m	language:C++	struct:__anon21
SWZ_type	base/include/fasp.h	/^    INT SWZ_type;$/;"	m	language:C++	struct:__anon10
SWZ_type	base/include/fasp.h	/^    INT SWZ_type;$/;"	m	language:C++	struct:__anon14
SWZ_type	base/include/fasp.h	/^    SHORT SWZ_type;$/;"	m	language:C++	struct:__anon9
SWZ_type	include/fasp.h	/^    INT SWZ_type;        \/**< type of Schwarz method *\/$/;"	m	language:C++	struct:__anon45
SWZ_type	include/fasp.h	/^    INT SWZ_type;$/;"	m	language:C++	struct:__anon34
SWZ_type	include/fasp.h	/^    INT SWZ_type;$/;"	m	language:C++	struct:__anon38
SWZ_type	include/fasp.h	/^    SHORT SWZ_type;$/;"	m	language:C++	struct:__anon33
SYS_ALLOC_PADDING	base/extra/dlmalloc/dlmalloc.c	2541;"	d	language:C	file:
SYS_ALLOC_PADDING	base/extra/include/malloc.c.h	2642;"	d	language:C++
Schwarz	base/include/fasp.h	/^    SWZ_data Schwarz;$/;"	m	language:C++	struct:__anon15
Schwarz	include/fasp.h	/^    SWZ_data Schwarz;$/;"	m	language:C++	struct:__anon39
ScrolledText	FASP_install.tcl	/^proc ScrolledText { parent width height } {$/;"	p	language:Tcl
ScrolledText1	FASP_install.tcl	/^proc ScrolledText1 { parent width height } {$/;"	p	language:Tcl
ShowOpts	FASP_install.tcl	/^proc ShowOpts { f } {$/;"	p	language:Tcl
T	test/include/misc.h	/^    double T;$/;"	m	language:C++	struct:FEM_param
THDs_AMG_GS	base/src/AuxThreads.c	/^INT THDs_AMG_GS=0;  \/**< AMG GS smoothing threads      *\/$/;"	v	language:C
THDs_CPR_gGS	base/src/AuxThreads.c	/^INT THDs_CPR_gGS=0; \/**< global matrix GS smoothing threads *\/$/;"	v	language:C
THDs_CPR_lGS	base/src/AuxThreads.c	/^INT THDs_CPR_lGS=0; \/**< reservoir GS smoothing threads     *\/$/;"	v	language:C
THREADCACHEMAX	base/extra/nedmalloc/nedmalloc.c	124;"	d	language:C	file:
THREADCACHEMAXBINS	base/extra/nedmalloc/nedmalloc.c	138;"	d	language:C	file:
THREADCACHEMAXCACHES	base/extra/nedmalloc/nedmalloc.c	120;"	d	language:C	file:
THREADCACHEMAXFREESPACE	base/extra/nedmalloc/nedmalloc.c	143;"	d	language:C	file:
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR NEDMALLOCPTRATTR void * nedcalloc(size_t no, size_t size) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR NEDMALLOCPTRATTR void * nedmalloc(size_t size) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR NEDMALLOCPTRATTR void * nedmemalign(size_t alignment, size_t bytes) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR NEDMALLOCPTRATTR void * nedrealloc(void *mem, size_t size) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR NEDMALLOCPTRATTR void **nedindependent_calloc(size_t elemsno, size_t elemsize, void **chunks) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR NEDMALLOCPTRATTR void **nedindependent_comalloc(size_t elems, size_t *sizes, void **chunks) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR int    nedmalloc_trim(size_t pad) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR int    nedmallopt(int parno, int value) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR size_t nedblksize(int *RESTRICT isforeign, void *RESTRICT mem) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR size_t nedmalloc_footprint(void) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR struct nedmallinfo nedmallinfo(void) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR void   nedfree(void *mem) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR void nedsetvalue(void *v) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCNOALIASATTR void*  nedmalloc_internals(size_t *granularity, size_t *magic) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR nedpool *nedcreatepool(size_t capacity, int threads) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR void * nedpcalloc(nedpool *p, size_t no, size_t size) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR void * nedpmalloc(nedpool *p, size_t size) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR void * nedpmemalign(nedpool *p, size_t alignment, size_t bytes) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR void * nedprealloc(nedpool *p, void *mem, size_t size) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR void **nedpindependent_calloc(nedpool *p, size_t elemsno, size_t elemsize, void **chunks) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC NEDMALLOCPTRATTR void **nedpindependent_comalloc(nedpool *p, size_t elems, size_t *sizes, void **chunks) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC int    nedpmalloc_trim(nedpool *p, size_t pad) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC int    nedpmallopt(nedpool *p, int parno, int value) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC nedpool **nedpoollist() THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC size_t nedpmalloc_footprint(nedpool *p) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC struct nedmallinfo nedpmallinfo(nedpool *p) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void   nedmalloc_stats(void) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void   nedpfree(nedpool *p, void *mem) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void   nedpmalloc_stats(nedpool *p) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void *nedgetvalue(nedpool **p, void *mem) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void neddestroypool(nedpool *p) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void neddestroysyspool() THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void neddisablethreadcache(nedpool *p) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void nedpsetvalue(nedpool *p, void *v) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	/^NEDMALLOCEXTSPEC void nedtrimthreadcache(nedpool *p, int disable) THROWSPEC;$/;"	m	language:C++	namespace:nedalloc
THROWSPEC	base/extra/include/nedmalloc.h	190;"	d	language:C++
TIME_SIZE	base/extra/hb_io/XtrHBIO.c	4429;"	d	language:C	file:
TIME_SIZE	base/extra/hb_io/XtrHBIO.c	4444;"	d	language:C	file:
TLSALLOC	base/extra/nedmalloc/nedmalloc.c	150;"	d	language:C	file:
TLSALLOC	base/extra/nedmalloc/nedmalloc.c	166;"	d	language:C	file:
TLSALLOC	base/extra/nedmalloc/nedmalloc.c	173;"	d	language:C	file:
TLSFREE	base/extra/nedmalloc/nedmalloc.c	151;"	d	language:C	file:
TLSFREE	base/extra/nedmalloc/nedmalloc.c	167;"	d	language:C	file:
TLSFREE	base/extra/nedmalloc/nedmalloc.c	174;"	d	language:C	file:
TLSGET	base/extra/nedmalloc/nedmalloc.c	152;"	d	language:C	file:
TLSGET	base/extra/nedmalloc/nedmalloc.c	161;"	d	language:C	file:
TLSGET	base/extra/nedmalloc/nedmalloc.c	162;"	d	language:C	file:
TLSGET	base/extra/nedmalloc/nedmalloc.c	168;"	d	language:C	file:
TLSGET	base/extra/nedmalloc/nedmalloc.c	175;"	d	language:C	file:
TLSSET	base/extra/nedmalloc/nedmalloc.c	153;"	d	language:C	file:
TLSSET	base/extra/nedmalloc/nedmalloc.c	169;"	d	language:C	file:
TLSSET	base/extra/nedmalloc/nedmalloc.c	176;"	d	language:C	file:
TLSVAR	base/extra/nedmalloc/nedmalloc.c	149;"	d	language:C	file:
TLSVAR	base/extra/nedmalloc/nedmalloc.c	165;"	d	language:C	file:
TLSVAR	base/extra/nedmalloc/nedmalloc.c	172;"	d	language:C	file:
TOP_FOOT_SIZE	base/extra/dlmalloc/dlmalloc.c	2585;"	d	language:C	file:
TOP_FOOT_SIZE	base/extra/include/malloc.c.h	2686;"	d	language:C++
TREEBIN_SHIFT	base/extra/dlmalloc/dlmalloc.c	2438;"	d	language:C	file:
TREEBIN_SHIFT	base/extra/include/malloc.c.h	2560;"	d	language:C++
TRUE	base/include/fasp_const.h	60;"	d	language:C++
TRUE	include/fasp_const.h	60;"	d	language:C++
TRY_LOCK	base/extra/dlmalloc/dlmalloc.c	1661;"	d	language:C	file:
TRY_LOCK	base/extra/dlmalloc/dlmalloc.c	1761;"	d	language:C	file:
TRY_LOCK	base/extra/dlmalloc/dlmalloc.c	1826;"	d	language:C	file:
TRY_LOCK	base/extra/dlmalloc/dlmalloc.c	1857;"	d	language:C	file:
TRY_LOCK	base/extra/include/malloc.c.h	1783;"	d	language:C++
TRY_LOCK	base/extra/include/malloc.c.h	1884;"	d	language:C++
TRY_LOCK	base/extra/include/malloc.c.h	1949;"	d	language:C++
TRY_LOCK	base/extra/include/malloc.c.h	1980;"	d	language:C++
TWO_SIZE_T_SIZES	base/extra/dlmalloc/dlmalloc.c	1447;"	d	language:C	file:
TWO_SIZE_T_SIZES	base/extra/include/malloc.c.h	1471;"	d	language:C++
UA_AMG	base/include/fasp_const.h	163;"	d	language:C++
UA_AMG	include/fasp_const.h	163;"	d	language:C++
UNPT	base/include/fasp_const.h	222;"	d	language:C++
UNPT	include/fasp_const.h	222;"	d	language:C++
USAGE_ERROR_ACTION	base/extra/dlmalloc/dlmalloc.c	2630;"	d	language:C	file:
USAGE_ERROR_ACTION	base/extra/dlmalloc/dlmalloc.c	2639;"	d	language:C	file:
USAGE_ERROR_ACTION	base/extra/include/malloc.c.h	2731;"	d	language:C++
USAGE_ERROR_ACTION	base/extra/include/malloc.c.h	2740;"	d	language:C++
USERDEFINED	base/include/fasp_const.h	236;"	d	language:C++
USERDEFINED	include/fasp_const.h	236;"	d	language:C++
USE_ALLOCATOR	base/extra/include/nedmalloc.h	132;"	d	language:C++
USE_BUILTIN_FFS	base/extra/dlmalloc/dlmalloc.c	646;"	d	language:C	file:
USE_BUILTIN_FFS	base/extra/include/malloc.c.h	666;"	d	language:C++
USE_DEV_RANDOM	base/extra/dlmalloc/dlmalloc.c	649;"	d	language:C	file:
USE_DEV_RANDOM	base/extra/include/malloc.c.h	669;"	d	language:C++
USE_DL_PREFIX	base/extra/nedmalloc/nedmalloc.c	68;"	d	language:C	file:
USE_LOCKS	base/extra/dlmalloc/dlmalloc.c	574;"	d	language:C	file:
USE_LOCKS	base/extra/include/malloc.c.h	594;"	d	language:C++
USE_LOCKS	base/extra/nedmalloc/nedmalloc.c	70;"	d	language:C	file:
USE_LOCK_BIT	base/extra/dlmalloc/dlmalloc.c	1898;"	d	language:C	file:
USE_LOCK_BIT	base/extra/dlmalloc/dlmalloc.c	1900;"	d	language:C	file:
USE_LOCK_BIT	base/extra/include/malloc.c.h	2021;"	d	language:C++
USE_LOCK_BIT	base/extra/include/malloc.c.h	2023;"	d	language:C++
USE_MAGIC_HEADERS	base/extra/include/nedmalloc.h	128;"	d	language:C++
USE_MMAP_BIT	base/extra/dlmalloc/dlmalloc.c	1565;"	d	language:C	file:
USE_MMAP_BIT	base/extra/dlmalloc/dlmalloc.c	1583;"	d	language:C	file:
USE_MMAP_BIT	base/extra/include/malloc.c.h	1686;"	d	language:C++
USE_MMAP_BIT	base/extra/include/malloc.c.h	1704;"	d	language:C++
USE_NONCONTIGUOUS_BIT	base/extra/dlmalloc/dlmalloc.c	1607;"	d	language:C	file:
USE_NONCONTIGUOUS_BIT	base/extra/include/malloc.c.h	1728;"	d	language:C++
USE_SPIN_LOCKS	base/extra/dlmalloc/dlmalloc.c	578;"	d	language:C	file:
USE_SPIN_LOCKS	base/extra/dlmalloc/dlmalloc.c	580;"	d	language:C	file:
USE_SPIN_LOCKS	base/extra/include/malloc.c.h	598;"	d	language:C++
USE_SPIN_LOCKS	base/extra/include/malloc.c.h	600;"	d	language:C++
Uninstall	FASP_install.tcl	/^proc  Uninstall { } {$/;"	p	language:Tcl
VMB	base/include/fasp_const.h	169;"	d	language:C++
VMB	include/fasp_const.h	169;"	d	language:C++
V_CYCLE	base/include/fasp_const.h	176;"	d	language:C++
V_CYCLE	include/fasp_const.h	176;"	d	language:C++
WIN32	base/extra/dlmalloc/dlmalloc.c	492;"	d	language:C	file:
WIN32	base/extra/dlmalloc/dlmalloc.c	496;"	d	language:C	file:
WIN32	base/extra/include/malloc.c.h	511;"	d	language:C++
WIN32	base/extra/include/malloc.c.h	515;"	d	language:C++
WIN32_LEAN_AND_MEAN	base/extra/dlmalloc/dlmalloc.c	500;"	d	language:C	file:
WIN32_LEAN_AND_MEAN	base/extra/include/malloc.c.h	519;"	d	language:C++
W_CYCLE	base/include/fasp_const.h	177;"	d	language:C++
W_CYCLE	include/fasp_const.h	177;"	d	language:C++
_ASSEMBLE_H_	test/include/assemble.h	6;"	d	language:C++
_DEBUG	base/extra/nedmalloc/nedmalloc.c	82;"	d	language:C	file:
_DEBUG	base/extra/nedmalloc/nedmalloc.c	84;"	d	language:C	file:
_DEBUG	base/extra/nedmalloc/nedmalloc.c	91;"	d	language:C	file:
_FSLS_HEADER_	test/include/poisson_fdm.h	6;"	d	language:C++
_HEAT_FEM_H_	test/include/heat_fem.h	6;"	d	language:C++
_MESH_H_	test/include/mesh.h	6;"	d	language:C++
_MISC_H_	test/include/misc.h	6;"	d	language:C++
_SC_PAGE_SIZE	base/extra/dlmalloc/dlmalloc.c	1390;"	d	language:C	file:
_SC_PAGE_SIZE	base/extra/include/malloc.c.h	1414;"	d	language:C++
_SETUP_POISSON_H_	test/include/poisson_fem.h	6;"	d	language:C++
__FASPBLOCK_HEADER__	base/include/fasp_block.h	18;"	d	language:C++
__FASPBLOCK_HEADER__	include/fasp_block.h	18;"	d	language:C++
__FASPGRID_HEADER__	base/include/fasp_grid.h	12;"	d	language:C++
__FASPGRID_HEADER__	include/fasp_grid.h	12;"	d	language:C++
__FASP_CONST__	base/include/fasp_const.h	14;"	d	language:C++
__FASP_CONST__	include/fasp_const.h	14;"	d	language:C++
__FASP_HEADER__	base/include/fasp.h	32;"	d	language:C++
__FASP_HEADER__	include/fasp.h	32;"	d	language:C++
__USE_GNU	base/extra/dlmalloc/dlmalloc.c	1322;"	d	language:C	file:
__USE_GNU	base/extra/dlmalloc/dlmalloc.c	1324;"	d	language:C	file:
__USE_GNU	base/extra/include/malloc.c.h	1342;"	d	language:C++
__USE_GNU	base/extra/include/malloc.c.h	1344;"	d	language:C++
__linux__	base/extra/nedmalloc/nedmalloc.c	29;"	d	language:C	file:
_gm_	base/extra/dlmalloc/dlmalloc.c	/^static struct malloc_state _gm_;$/;"	v	language:C	typeref:struct:malloc_state	file:
_gm_	base/extra/include/malloc.c.h	/^static struct malloc_state _gm_;$/;"	v	language:C++	typeref:struct:malloc_state
a	test/main/testf.f90	/^  double precision, dimension(:), al/;"	v	language:Fortran	program:test
a	tutorial/main/poisson-amg.f90	/^  double precision, dimension(:), al/;"	v	language:Fortran	program:test
a	tutorial/main/poisson-pcg.f90	/^  double precision, dimension(:), al/;"	v	language:Fortran	program:test
aAxpby	base/src/ItrSmootherSTR.c	/^static void aAxpby (REAL  alpha,$/;"	f	language:C	file:	signature:(REAL alpha, REAL beta, INT size, REAL *A, REAL *x, REAL *y)
add_segment	base/extra/dlmalloc/dlmalloc.c	/^static void add_segment(mstate m, char* tbase, size_t tsize, flag_t mmapped) {$/;"	f	language:C	file:	signature:(mstate m, char* tbase, size_t tsize, flag_t mmapped)
add_segment	base/extra/include/malloc.c.h	/^static void add_segment(mstate m, char* tbase, size_t tsize, flag_t mmapped) {$/;"	f	language:C++	signature:(mstate m, char* tbase, size_t tsize, flag_t mmapped)
aggregation_nsympair	base/src/PreAMGAggregationUA.inl	/^static SHORT aggregation_nsympair (AMG_data   *mgl,$/;"	f	language:C++	file:	signature:(AMG_data *mgl, AMG_param *param, const INT level, ivector *vertices, INT *NumAggregates)
aggregation_quality	base/src/PreAMGAggregationUA.inl	/^static SHORT aggregation_quality (const dCSRmat  *A,$/;"	f	language:C++	file:	signature:(const dCSRmat *A, const ivector *tentmap, const REAL *s, const INT root, const INT pair, const INT dopass, const REAL quality_bound)
aggregation_symmpair	base/src/PreAMGAggregationUA.inl	/^static SHORT aggregation_symmpair (AMG_data   *mgl,$/;"	f	language:C++	file:	signature:(AMG_data *mgl, AMG_param *param, const INT level, ivector *vertices, INT *NumAggregates)
aggregation_type	base/include/fasp.h	/^    SHORT aggregation_type;$/;"	m	language:C++	struct:__anon10
aggregation_type	include/fasp.h	/^    SHORT aggregation_type;$/;"	m	language:C++	struct:__anon34
aggregation_vmb	base/src/PreAMGAggregation.inl	/^static SHORT aggregation_vmb (dCSRmat    *A,$/;"	f	language:C++	file:	signature:(dCSRmat *A, ivector *vertices, AMG_param *param, const INT NumLevels, dCSRmat *Neigh, INT *NumAggregates)
aggressive_level	base/include/fasp.h	/^    INT aggressive_level;$/;"	m	language:C++	struct:__anon10
aggressive_level	include/fasp.h	/^    INT aggressive_level;$/;"	m	language:C++	struct:__anon34
aggressive_path	base/include/fasp.h	/^    INT aggressive_path;$/;"	m	language:C++	struct:__anon10
aggressive_path	include/fasp.h	/^    INT aggressive_path;$/;"	m	language:C++	struct:__anon34
al	base/include/fasp.h	/^    REAL *al;$/;"	m	language:C++	struct:__anon14
al	include/fasp.h	/^    REAL *al;$/;"	m	language:C++	struct:__anon38
align_as_chunk	base/extra/dlmalloc/dlmalloc.c	2091;"	d	language:C	file:
align_as_chunk	base/extra/include/malloc.c.h	2213;"	d	language:C++
align_offset	base/extra/dlmalloc/dlmalloc.c	1459;"	d	language:C	file:
align_offset	base/extra/include/malloc.c.h	1483;"	d	language:C++
amg_interp_trunc	base/src/PreAMGInterp.c	/^static void amg_interp_trunc (dCSRmat    *P,$/;"	f	language:C	file:	signature:(dCSRmat *P, AMG_param *param)
amg_setup_smoothP_smoothR	base/src/PreAMGSetupSA.c	/^static SHORT amg_setup_smoothP_smoothR (AMG_data   *mgl,$/;"	f	language:C	file:	signature:(AMG_data *mgl, AMG_param *param)
amg_setup_smoothP_smoothR_bsr	base/src/PreAMGSetupSABSR.c	/^static SHORT amg_setup_smoothP_smoothR_bsr (AMG_data_bsr *mgl,$/;"	f	language:C	file:	signature:(AMG_data_bsr *mgl, AMG_param *param)
amg_setup_smoothP_unsmoothR	base/src/PreAMGSetupSA.c	/^static SHORT amg_setup_smoothP_unsmoothR (AMG_data   *mgl,$/;"	f	language:C	file:	signature:(AMG_data *mgl, AMG_param *param)
amg_setup_unsmoothP_unsmoothR	base/src/PreAMGSetupUA.c	/^static SHORT amg_setup_unsmoothP_unsmoothR (AMG_data   *mgl,$/;"	f	language:C	file:	signature:(AMG_data *mgl, AMG_param *param)
amg_setup_unsmoothP_unsmoothR_bsr	base/src/PreAMGSetupUABSR.c	/^static SHORT amg_setup_unsmoothP_unsmoothR_bsr (AMG_data_bsr   *mgl,$/;"	f	language:C	file:	signature:(AMG_data_bsr *mgl, AMG_param *param)
amgparam	base/include/fasp_block.h	/^    AMG_param *amgparam;  \/**< parameters for AMG *\/$/;"	m	language:C++	struct:__anon5
amgparam	include/fasp_block.h	/^    AMG_param *amgparam;  \/**< parameters for AMG *\/$/;"	m	language:C++	struct:__anon29
amli_coef	base/include/fasp.h	/^    REAL *amli_coef;$/;"	m	language:C++	struct:__anon10
amli_coef	base/include/fasp.h	/^    REAL *amli_coef;$/;"	m	language:C++	struct:__anon16
amli_coef	base/include/fasp_block.h	/^    REAL *amli_coef;$/;"	m	language:C++	struct:__anon4
amli_coef	include/fasp.h	/^    REAL *amli_coef;$/;"	m	language:C++	struct:__anon34
amli_coef	include/fasp.h	/^    REAL *amli_coef;$/;"	m	language:C++	struct:__anon40
amli_coef	include/fasp_block.h	/^    REAL *amli_coef;$/;"	m	language:C++	struct:__anon28
amli_degree	base/include/fasp.h	/^    SHORT amli_degree;$/;"	m	language:C++	struct:__anon10
amli_degree	base/include/fasp.h	/^    SHORT amli_degree;$/;"	m	language:C++	struct:__anon16
amli_degree	base/include/fasp_block.h	/^    SHORT amli_degree;$/;"	m	language:C++	struct:__anon4
amli_degree	include/fasp.h	/^    SHORT amli_degree;$/;"	m	language:C++	struct:__anon34
amli_degree	include/fasp.h	/^    SHORT amli_degree;$/;"	m	language:C++	struct:__anon40
amli_degree	include/fasp_block.h	/^    SHORT amli_degree;$/;"	m	language:C++	struct:__anon28
areaT	test/src/FemBasis.inl	/^static double areaT (double x1,$/;"	f	language:C++	file:	signature:(double x1, double x2, double x3, double y1, double y2, double y3)
arena	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	language:C	struct:mallinfo	file:
arena	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	language:C++	struct:mallinfo
arena	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	language:C++	struct:mallinfo
arena	base/extra/include/nedmalloc.h	/^  size_t arena;    \/* non-mmapped space allocated from system *\/$/;"	m	language:C++	struct:nedmallinfo
assemble_stiffmat	test/src/FemHeatEqn.c	/^static void assemble_stiffmat (dCSRmat *A, $/;"	f	language:C	file:	signature:(dCSRmat *A, dCSRmat *M, dvector *b, Mesh *mesh, Mesh_aux *mesh_aux, FEM_param *pt, double dt)
assemble_stiffmat	test/src/FemPoisson.c	/^static void assemble_stiffmat (dCSRmat *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, dvector *b, Mesh *mesh, Mesh_aux *mesh_aux, FEM_param *pt)
assert	base/extra/dlmalloc/dlmalloc.c	1299;"	d	language:C	file:
assert	base/extra/dlmalloc/dlmalloc.c	1300;"	d	language:C	file:
assert	base/extra/dlmalloc/dlmalloc.c	1306;"	d	language:C	file:
assert	base/extra/include/malloc.c.h	1319;"	d	language:C++
assert	base/extra/include/malloc.c.h	1320;"	d	language:C++
assert	base/extra/include/malloc.c.h	1326;"	d	language:C++
au	base/include/fasp.h	/^    REAL *au;$/;"	m	language:C++	struct:__anon14
au	include/fasp.h	/^    REAL *au;$/;"	m	language:C++	struct:__anon38
ay1d	base/src/PreGMG.inl	/^static void ay1d (REAL       *x,$/;"	f	language:C++	file:	signature:(REAL *x, const REAL *y, const INT *level, const INT k)
ay2d	base/src/PreGMG.inl	/^static void ay2d (REAL       *x,$/;"	f	language:C++	file:	signature:(REAL *x, const REAL *y, const INT *level, const INT k, const INT *nxk, const INT *nyk)
ay3d	base/src/PreGMG.inl	/^static void ay3d (REAL       *x,$/;"	f	language:C++	file:	signature:(REAL *x, const REAL *y, const INT *level, const INT k, const INT *nxk, const INT *nyk, const INT *nzk)
b	base/include/fasp.h	/^    dvector b;$/;"	m	language:C++	struct:__anon15
b	base/include/fasp_block.h	/^    dvector b;$/;"	m	language:C++	struct:__anon2
b	include/fasp.h	/^    dvector b;$/;"	m	language:C++	struct:__anon39
b	include/fasp_block.h	/^    dvector b;$/;"	m	language:C++	struct:__anon26
b	test/main/testf.f90	/^  doubl/;"	v	language:Fortran	program:test
b	tutorial/main/poisson-amg.f90	/^  doubl/;"	v	language:Fortran	program:test
b	tutorial/main/poisson-pcg.f90	/^  doubl/;"	v	language:Fortran	program:test
base	base/extra/dlmalloc/dlmalloc.c	/^  char*        base;             \/* base address *\/$/;"	m	language:C	struct:malloc_segment	file:
base	base/extra/include/malloc.c.h	/^  char*        base;             \/* base address *\/$/;"	m	language:C++	struct:malloc_segment
basisP1	test/src/FemBasis.inl	/^static double basisP1 (int index, $/;"	f	language:C++	file:	signature:(int index, double lambda[2])
bcol	base/include/fasp_block.h	/^    INT bcol;$/;"	m	language:C++	struct:dBLCmat
bcol	base/include/fasp_block.h	/^    INT bcol;$/;"	m	language:C++	struct:iBLCmat
bcol	include/fasp_block.h	/^    INT bcol;$/;"	m	language:C++	struct:dBLCmat
bcol	include/fasp_block.h	/^    INT bcol;$/;"	m	language:C++	struct:iBLCmat
bd	test/include/heat_fem.h	/^    ivector dof, bd, idx;$/;"	m	language:C++	struct:Bd_apply_info
bd_flag	test/main/testfct_heat.inl	/^int bd_flag (double *p)$/;"	f	language:C++	signature:(double *p)
bd_flag	test/main/testfct_poisson.inl	/^int bd_flag (double *p)$/;"	f	language:C++	signature:(double *p)
bin_find	base/extra/dlmalloc/dlmalloc.c	/^static int bin_find(mstate m, mchunkptr x) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr x)
bin_find	base/extra/include/malloc.c.h	/^static int bin_find(mstate m, mchunkptr x) {$/;"	f	language:C++	signature:(mstate m, mchunkptr x)
bindex_t	base/extra/dlmalloc/dlmalloc.c	/^typedef unsigned int bindex_t;         \/* Described below *\/$/;"	t	language:C	file:
bindex_t	base/extra/include/malloc.c.h	/^typedef unsigned int bindex_t;         \/* Described below *\/$/;"	t	language:C++
binmap_t	base/extra/dlmalloc/dlmalloc.c	/^typedef unsigned int binmap_t;         \/* Described below *\/$/;"	t	language:C	file:
binmap_t	base/extra/include/malloc.c.h	/^typedef unsigned int binmap_t;         \/* Described below *\/$/;"	t	language:C++
bit_for_tree_index	base/extra/dlmalloc/dlmalloc.c	2754;"	d	language:C	file:
bit_for_tree_index	base/extra/include/malloc.c.h	2855;"	d	language:C++
bk	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_chunk* bk;$/;"	m	language:C	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
bk	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_tree_chunk* bk;$/;"	m	language:C	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
bk	base/extra/include/malloc.c.h	/^  struct malloc_chunk* bk;$/;"	m	language:C++	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk
bk	base/extra/include/malloc.c.h	/^  struct malloc_tree_chunk* bk;$/;"	m	language:C++	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk
blk_data	base/include/fasp.h	/^    dCSRmat *blk_data;$/;"	m	language:C++	struct:__anon14
blk_data	include/fasp.h	/^    dCSRmat *blk_data;$/;"	m	language:C++	struct:__anon38
blk_solver	base/include/fasp.h	/^    INT blk_solver;$/;"	m	language:C++	struct:__anon14
blk_solver	include/fasp.h	/^    INT blk_solver;$/;"	m	language:C++	struct:__anon38
blkcontr2	base/src/ItrSmootherSTR.c	/^static void blkcontr2 (INT   start_data,$/;"	f	language:C	file:	signature:(INT start_data, INT start_vecx, INT start_vecy, INT nc, REAL *data, REAL *x, REAL *y)
blkcontr_str	base/src/BlaSpmvSTR.c	/^static inline void blkcontr_str (const INT   start_data,$/;"	f	language:C	file:	signature:(const INT start_data, const INT start_vecx, const INT start_vecy, const INT nc, const REAL *data, const REAL *x, REAL *y)
block_dvector	base/include/fasp_block.h	/^typedef struct block_dvector {$/;"	s	language:C++
block_dvector	base/include/fasp_block.h	/^} block_dvector; \/**< Vector of REAL type in Block format *\/$/;"	t	language:C++	typeref:struct:block_dvector
block_dvector	include/fasp_block.h	/^typedef struct block_dvector {$/;"	s	language:C++
block_dvector	include/fasp_block.h	/^} block_dvector; \/**< Vector of REAL type in Block format *\/$/;"	t	language:C++	typeref:struct:block_dvector
block_ivector	base/include/fasp_block.h	/^typedef struct block_ivector {$/;"	s	language:C++
block_ivector	base/include/fasp_block.h	/^} block_ivector; \/**< Vector of INT type in Block format *\/$/;"	t	language:C++	typeref:struct:block_ivector
block_ivector	include/fasp_block.h	/^typedef struct block_ivector {$/;"	s	language:C++
block_ivector	include/fasp_block.h	/^} block_ivector; \/**< Vector of INT type in Block format *\/$/;"	t	language:C++	typeref:struct:block_ivector
blocks	base/include/fasp_block.h	/^    dCSRmat **blocks;$/;"	m	language:C++	struct:dBLCmat
blocks	base/include/fasp_block.h	/^    dvector **blocks;$/;"	m	language:C++	struct:block_dvector
blocks	base/include/fasp_block.h	/^    iCSRmat **blocks;$/;"	m	language:C++	struct:iBLCmat
blocks	base/include/fasp_block.h	/^    ivector **blocks;$/;"	m	language:C++	struct:block_ivector
blocks	include/fasp_block.h	/^    dCSRmat **blocks;$/;"	m	language:C++	struct:dBLCmat
blocks	include/fasp_block.h	/^    dvector **blocks;$/;"	m	language:C++	struct:block_dvector
blocks	include/fasp_block.h	/^    iCSRmat **blocks;$/;"	m	language:C++	struct:iBLCmat
blocks	include/fasp_block.h	/^    ivector **blocks;$/;"	m	language:C++	struct:block_ivector
bminax	base/src/ItrSmootherCSRpoly.c	/^static void bminax (REAL *b,$/;"	f	language:C	file:	signature:(REAL *b, INT *ia, INT *ja, REAL *a, REAL *x, INT *nn, REAL *res)
brow	base/include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:block_dvector
brow	base/include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:block_ivector
brow	base/include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:dBLCmat
brow	base/include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:iBLCmat
brow	include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:block_dvector
brow	include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:block_ivector
brow	include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:dBLCmat
brow	include/fasp_block.h	/^    INT brow;$/;"	m	language:C++	struct:iBLCmat
build_dir	Makefile	/^build_dir=BUILD_FASP$/;"	m	language:Make
c	base/extra/dlmalloc/dlmalloc.c	/^  unsigned int c;$/;"	m	language:C	struct:pthread_mlock_t	file:
c	base/extra/dlmalloc/dlmalloc.c	/^  unsigned int c;$/;"	m	language:C	struct:win32_mlock_t	file:
c	base/extra/include/malloc.c.h	/^  unsigned int c;$/;"	m	language:C++	struct:pthread_mlock_t
c	base/extra/include/malloc.c.h	/^  unsigned int c;$/;"	m	language:C++	struct:win32_mlock_t
cachelinepadding	base/extra/include/malloc.c.h	/^  char cachelinepadding[64];$/;"	m	language:C++	struct:pthread_mlock_t
cachelinepadding	base/extra/include/malloc.c.h	/^  char cachelinepadding[64];$/;"	m	language:C++	struct:win32_mlock_t
calloc_must_clear	base/extra/dlmalloc/dlmalloc.c	2164;"	d	language:C	file:
calloc_must_clear	base/extra/dlmalloc/dlmalloc.c	2166;"	d	language:C	file:
calloc_must_clear	base/extra/include/malloc.c.h	2286;"	d	language:C++
calloc_must_clear	base/extra/include/malloc.c.h	2288;"	d	language:C++
cflags	Makefile	/^		cflags="-Wall -g -DDEBUG_MODE=3 -DCHMEM_MODE=1"$/;"	m	language:Make
cflags	Makefile	/^	cflags="-Wall -g -DDEBUG_MODE=1"$/;"	m	language:Make
cflags	Makefile	/^	cflags="-Wall -g"$/;"	m	language:Make
cfmark	base/include/fasp.h	/^    ivector cfmark;$/;"	m	language:C++	struct:__anon15
cfmark	base/include/fasp_block.h	/^    ivector cfmark;$/;"	m	language:C++	struct:__anon2
cfmark	include/fasp.h	/^    ivector cfmark;$/;"	m	language:C++	struct:__anon39
cfmark	include/fasp_block.h	/^    ivector cfmark;$/;"	m	language:C++	struct:__anon26
cfsplitting_agg	base/src/PreAMGCoarsenRS.c	/^static INT cfsplitting_agg (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, ivector *vertices, INT aggressive_path)
cfsplitting_cls	base/src/PreAMGCoarsenRS.c	/^static INT cfsplitting_cls (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, ivector *vertices)
cfsplitting_clsp	base/src/PreAMGCoarsenRS.c	/^static INT cfsplitting_clsp (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, ivector *vertices)
cfsplitting_mis	base/src/PreAMGCoarsenRS.c	/^static INT cfsplitting_mis (iCSRmat   *S,$/;"	f	language:C	file:	signature:(iCSRmat *S, ivector *vertices, ivector *order)
ch_eqi	base/extra/hb_io/XtrHBIO.c	/^int ch_eqi ( char ch1, char ch2 )$/;"	f	language:C	signature:( char ch1, char ch2 )
ch_is_digit	base/extra/hb_io/XtrHBIO.c	/^int ch_is_digit ( char c )$/;"	f	language:C	signature:( char c )
ch_is_format_code	base/extra/hb_io/XtrHBIO.c	/^int ch_is_format_code ( char c )$/;"	f	language:C	signature:( char c )
ch_to_digit	base/extra/hb_io/XtrHBIO.c	/^int ch_to_digit ( char ch )$/;"	f	language:C	signature:( char ch )
change_mparam	base/extra/dlmalloc/dlmalloc.c	/^static int change_mparam(int param_number, int value) {$/;"	f	language:C	file:	signature:(int param_number, int value)
change_mparam	base/extra/include/malloc.c.h	/^static int change_mparam(int param_number, int value) {$/;"	f	language:C++	signature:(int param_number, int value)
check_free_chunk	base/extra/dlmalloc/dlmalloc.c	2648;"	d	language:C	file:
check_free_chunk	base/extra/dlmalloc/dlmalloc.c	2656;"	d	language:C	file:
check_free_chunk	base/extra/include/malloc.c.h	2749;"	d	language:C++
check_free_chunk	base/extra/include/malloc.c.h	2757;"	d	language:C++
check_inuse_chunk	base/extra/dlmalloc/dlmalloc.c	2649;"	d	language:C	file:
check_inuse_chunk	base/extra/dlmalloc/dlmalloc.c	2657;"	d	language:C	file:
check_inuse_chunk	base/extra/include/malloc.c.h	2750;"	d	language:C++
check_inuse_chunk	base/extra/include/malloc.c.h	2758;"	d	language:C++
check_malloc_state	base/extra/dlmalloc/dlmalloc.c	2652;"	d	language:C	file:
check_malloc_state	base/extra/dlmalloc/dlmalloc.c	2661;"	d	language:C	file:
check_malloc_state	base/extra/include/malloc.c.h	2753;"	d	language:C++
check_malloc_state	base/extra/include/malloc.c.h	2762;"	d	language:C++
check_malloced_chunk	base/extra/dlmalloc/dlmalloc.c	2650;"	d	language:C	file:
check_malloced_chunk	base/extra/dlmalloc/dlmalloc.c	2659;"	d	language:C	file:
check_malloced_chunk	base/extra/include/malloc.c.h	2751;"	d	language:C++
check_malloced_chunk	base/extra/include/malloc.c.h	2760;"	d	language:C++
check_mmapped_chunk	base/extra/dlmalloc/dlmalloc.c	2651;"	d	language:C	file:
check_mmapped_chunk	base/extra/dlmalloc/dlmalloc.c	2660;"	d	language:C	file:
check_mmapped_chunk	base/extra/include/malloc.c.h	2752;"	d	language:C++
check_mmapped_chunk	base/extra/include/malloc.c.h	2761;"	d	language:C++
check_solu	test/main/regression.c	/^static void check_solu(dvector *x, dvector *sol, double tol)$/;"	f	language:C	file:	signature:(dvector *x, dvector *sol, double tol)
check_solu	test/main/regression_mf.c	/^static void check_solu(dvector *x, dvector *sol, double tol)$/;"	f	language:C	file:	signature:(dvector *x, dvector *sol, double tol)
check_solu	test/main/regression_mm.c	/^static void check_solu(dvector *x, dvector *sol, double tol, unsigned int *nt, unsigned int *nf)$/;"	f	language:C	file:	signature:(dvector *x, dvector *sol, double tol, unsigned int *nt, unsigned int *nf)
check_top_chunk	base/extra/dlmalloc/dlmalloc.c	2653;"	d	language:C	file:
check_top_chunk	base/extra/dlmalloc/dlmalloc.c	2658;"	d	language:C	file:
check_top_chunk	base/extra/include/malloc.c.h	2754;"	d	language:C++
check_top_chunk	base/extra/include/malloc.c.h	2759;"	d	language:C++
child	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_tree_chunk* child[2];$/;"	m	language:C	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
child	base/extra/include/malloc.c.h	/^  struct malloc_tree_chunk* child[2];$/;"	m	language:C++	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk
cholesky_factorization_check	base/src/PreAMGAggregationUA.inl	/^static SHORT cholesky_factorization_check (REAL      W[8][8],$/;"	f	language:C++	file:	signature:(REAL W[8][8], const INT agg_size)
chunk2mem	base/extra/dlmalloc/dlmalloc.c	2088;"	d	language:C	file:
chunk2mem	base/extra/include/malloc.c.h	2210;"	d	language:C++
chunk_minus_offset	base/extra/dlmalloc/dlmalloc.c	2137;"	d	language:C	file:
chunk_minus_offset	base/extra/include/malloc.c.h	2259;"	d	language:C++
chunk_plus_offset	base/extra/dlmalloc/dlmalloc.c	2136;"	d	language:C	file:
chunk_plus_offset	base/extra/include/malloc.c.h	2258;"	d	language:C++
chunksize	base/extra/dlmalloc/dlmalloc.c	2131;"	d	language:C	file:
chunksize	base/extra/include/malloc.c.h	2253;"	d	language:C++
cinuse	base/extra/dlmalloc/dlmalloc.c	2126;"	d	language:C	file:
cinuse	base/extra/include/malloc.c.h	2248;"	d	language:C++
clean_ff_couplings	base/src/PreAMGCoarsenRS.c	/^static INT clean_ff_couplings (iCSRmat   *S,$/;"	f	language:C	file:	signature:(iCSRmat *S, ivector *vertices, INT row, INT col)
clear_pinuse	base/extra/dlmalloc/dlmalloc.c	2133;"	d	language:C	file:
clear_pinuse	base/extra/include/malloc.c.h	2255;"	d	language:C++
clear_smallmap	base/extra/dlmalloc/dlmalloc.c	2775;"	d	language:C	file:
clear_smallmap	base/extra/include/malloc.c.h	2876;"	d	language:C++
clear_treemap	base/extra/dlmalloc/dlmalloc.c	2779;"	d	language:C	file:
clear_treemap	base/extra/include/malloc.c.h	2880;"	d	language:C++
coarse_dof	base/include/fasp.h	/^    INT coarse_dof;$/;"	m	language:C++	struct:__anon10
coarse_dof	include/fasp.h	/^    INT coarse_dof;$/;"	m	language:C++	struct:__anon34
coarse_scaling	base/include/fasp.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon10
coarse_scaling	base/include/fasp.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon16
coarse_scaling	base/include/fasp.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon17
coarse_scaling	base/include/fasp_block.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon4
coarse_scaling	include/fasp.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon34
coarse_scaling	include/fasp.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon40
coarse_scaling	include/fasp.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon41
coarse_scaling	include/fasp_block.h	/^    SHORT coarse_scaling;$/;"	m	language:C++	struct:__anon28
coarse_solver	base/include/fasp.h	/^    SHORT coarse_solver;$/;"	m	language:C++	struct:__anon10
coarse_solver	base/include/fasp.h	/^    SHORT coarse_solver;$/;"	m	language:C++	struct:__anon16
coarse_solver	base/include/fasp_block.h	/^    SHORT coarse_solver;$/;"	m	language:C++	struct:__anon4
coarse_solver	include/fasp.h	/^    SHORT coarse_solver;$/;"	m	language:C++	struct:__anon34
coarse_solver	include/fasp.h	/^    SHORT coarse_solver;$/;"	m	language:C++	struct:__anon40
coarse_solver	include/fasp_block.h	/^    SHORT coarse_solver;$/;"	m	language:C++	struct:__anon28
coarsening_type	base/include/fasp.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon10
coarsening_type	base/include/fasp.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon16
coarsening_type	base/include/fasp.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon17
coarsening_type	base/include/fasp_block.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon4
coarsening_type	include/fasp.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon34
coarsening_type	include/fasp.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon40
coarsening_type	include/fasp.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon41
coarsening_type	include/fasp_block.h	/^    SHORT coarsening_type;$/;"	m	language:C++	struct:__anon28
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:__anon13
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:dCOOmat
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:dCSRLmat
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:dCSRmat
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:ddenmat
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:iCOOmat
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:iCSRmat
col	base/include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:idenmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:__anon37
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:dCOOmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:dCSRLmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:dCSRmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:ddenmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:iCOOmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:iCSRmat
col	include/fasp.h	/^    INT col;$/;"	m	language:C++	struct:idenmat
colind	base/include/fasp.h	/^    INT *colind;$/;"	m	language:C++	struct:dCOOmat
colind	include/fasp.h	/^    INT *colind;$/;"	m	language:C++	struct:dCOOmat
colors	base/include/fasp.h	/^    INT colors;$/;"	m	language:C++	struct:__anon15
colors	include/fasp.h	/^    INT colors;$/;"	m	language:C++	struct:__anon39
compress_S	base/src/PreAMGCoarsenRS.c	/^static INT compress_S (iCSRmat *S)$/;"	f	language:C	file:	signature:(iCSRmat *S)
compute_bit2idx	base/extra/dlmalloc/dlmalloc.c	2794;"	d	language:C	file:
compute_bit2idx	base/extra/dlmalloc/dlmalloc.c	2802;"	d	language:C	file:
compute_bit2idx	base/extra/dlmalloc/dlmalloc.c	2810;"	d	language:C	file:
compute_bit2idx	base/extra/dlmalloc/dlmalloc.c	2818;"	d	language:C	file:
compute_bit2idx	base/extra/dlmalloc/dlmalloc.c	2821;"	d	language:C	file:
compute_bit2idx	base/extra/include/malloc.c.h	2895;"	d	language:C++
compute_bit2idx	base/extra/include/malloc.c.h	2903;"	d	language:C++
compute_bit2idx	base/extra/include/malloc.c.h	2911;"	d	language:C++
compute_bit2idx	base/extra/include/malloc.c.h	2919;"	d	language:C++
compute_bit2idx	base/extra/include/malloc.c.h	2922;"	d	language:C++
compute_tree_index	base/extra/dlmalloc/dlmalloc.c	2690;"	d	language:C	file:
compute_tree_index	base/extra/dlmalloc/dlmalloc.c	2705;"	d	language:C	file:
compute_tree_index	base/extra/dlmalloc/dlmalloc.c	2719;"	d	language:C	file:
compute_tree_index	base/extra/dlmalloc/dlmalloc.c	2734;"	d	language:C	file:
compute_tree_index	base/extra/include/malloc.c.h	2791;"	d	language:C++
compute_tree_index	base/extra/include/malloc.c.h	2806;"	d	language:C++
compute_tree_index	base/extra/include/malloc.c.h	2820;"	d	language:C++
compute_tree_index	base/extra/include/malloc.c.h	2835;"	d	language:C++
condenseBSR	base/src/PreAMGAggregationBSR.inl	/^static dCSRmat condenseBSR (const dBSRmat *A)$/;"	f	language:C++	file:	signature:(const dBSRmat *A)
condenseBSRLinf	base/src/PreAMGAggregationBSR.inl	/^static dCSRmat condenseBSRLinf (const dBSRmat *A)$/;"	f	language:C++	file:	signature:(const dBSRmat *A)
create_mspace	base/extra/dlmalloc/dlmalloc.c	/^mspace create_mspace(size_t capacity, int locked) {$/;"	f	language:C	signature:(size_t capacity, int locked)
create_mspace	base/extra/include/malloc.c.h	/^mspace create_mspace(size_t capacity, int locked) {$/;"	f	language:C++	signature:(size_t capacity, int locked)
create_mspace_with_base	base/extra/dlmalloc/dlmalloc.c	/^mspace create_mspace_with_base(void* base, size_t capacity, int locked) {$/;"	f	language:C	signature:(void* base, size_t capacity, int locked)
create_mspace_with_base	base/extra/include/malloc.c.h	/^mspace create_mspace_with_base(void* base, size_t capacity, int locked) {$/;"	f	language:C++	signature:(void* base, size_t capacity, int locked)
create_node	base/src/PreAMGUtil.inl	/^static LinkList create_node (INT Item)$/;"	f	language:C++	file:	signature:(INT Item)
cxxflags	Makefile	/^		cxxflags="-Wall -g -DDEBUG_MODE=3 -DCHMEM_MODE=1"$/;"	m	language:Make
cxxflags	Makefile	/^	cxxflags="-Wall -g -DDEBUG_MODE=1"$/;"	m	language:Make
cxxflags	Makefile	/^	cxxflags="-Wall -g"$/;"	m	language:Make
cycle_type	base/include/fasp.h	/^    INT cycle_type;$/;"	m	language:C++	struct:__anon15
cycle_type	base/include/fasp.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon10
cycle_type	base/include/fasp.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon16
cycle_type	base/include/fasp.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon17
cycle_type	base/include/fasp_block.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon4
cycle_type	include/fasp.h	/^    INT cycle_type;$/;"	m	language:C++	struct:__anon39
cycle_type	include/fasp.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon34
cycle_type	include/fasp.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon40
cycle_type	include/fasp.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon41
cycle_type	include/fasp_block.h	/^    SHORT cycle_type;$/;"	m	language:C++	struct:__anon28
dBLCmat	base/include/fasp_block.h	/^typedef struct dBLCmat {$/;"	s	language:C++
dBLCmat	base/include/fasp_block.h	/^} dBLCmat; \/**< Matrix of REAL type in Block CSR format *\/$/;"	t	language:C++	typeref:struct:dBLCmat
dBLCmat	include/fasp_block.h	/^typedef struct dBLCmat {$/;"	s	language:C++
dBLCmat	include/fasp_block.h	/^} dBLCmat; \/**< Matrix of REAL type in Block CSR format *\/$/;"	t	language:C++	typeref:struct:dBLCmat
dBSRmat	base/include/fasp_block.h	/^typedef struct dBSRmat {$/;"	s	language:C++
dBSRmat	base/include/fasp_block.h	/^} dBSRmat; \/**< Matrix of REAL type in BSR format *\/$/;"	t	language:C++	typeref:struct:dBSRmat
dBSRmat	include/fasp_block.h	/^typedef struct dBSRmat {$/;"	s	language:C++
dBSRmat	include/fasp_block.h	/^} dBSRmat; \/**< Matrix of REAL type in BSR format *\/$/;"	t	language:C++	typeref:struct:dBSRmat
dCOOmat	base/include/fasp.h	/^typedef struct dCOOmat{$/;"	s	language:C++
dCOOmat	base/include/fasp.h	/^} dCOOmat; \/**< Sparse matrix of REAL type in COO format *\/$/;"	t	language:C++	typeref:struct:dCOOmat
dCOOmat	include/fasp.h	/^typedef struct dCOOmat{$/;"	s	language:C++
dCOOmat	include/fasp.h	/^} dCOOmat; \/**< Sparse matrix of REAL type in COO format *\/$/;"	t	language:C++	typeref:struct:dCOOmat
dCSRLmat	base/include/fasp.h	/^typedef struct dCSRLmat{$/;"	s	language:C++
dCSRLmat	base/include/fasp.h	/^} dCSRLmat; \/**< Sparse matrix of REAL type in CSRL format *\/$/;"	t	language:C++	typeref:struct:dCSRLmat
dCSRLmat	include/fasp.h	/^typedef struct dCSRLmat{$/;"	s	language:C++
dCSRLmat	include/fasp.h	/^} dCSRLmat; \/**< Sparse matrix of REAL type in CSRL format *\/$/;"	t	language:C++	typeref:struct:dCSRLmat
dCSRmat	base/include/fasp.h	/^typedef struct dCSRmat{$/;"	s	language:C++
dCSRmat	base/include/fasp.h	/^} dCSRmat; \/**< Sparse matrix of REAL type in CSR format *\/$/;"	t	language:C++	typeref:struct:dCSRmat
dCSRmat	include/fasp.h	/^typedef struct dCSRmat{$/;"	s	language:C++
dCSRmat	include/fasp.h	/^} dCSRmat; \/**< Sparse matrix of REAL type in CSR format *\/$/;"	t	language:C++	typeref:struct:dCSRmat
dCSRmat2SAMGInput	base/extra/interface/XtrSamg.c	/^INT dCSRmat2SAMGInput (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, char *filefrm, char *fileamg)
dCSRmat_Multicoloring_Theta	base/src/multi_color.c	/^void dCSRmat_Multicoloring_Theta(AMG_data *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, REAL theta, INT *rowmax, INT *groups)
dSTRmat	base/include/fasp.h	/^typedef struct dSTRmat{$/;"	s	language:C++
dSTRmat	base/include/fasp.h	/^} dSTRmat; \/**< Structured matrix of REAL type *\/$/;"	t	language:C++	typeref:struct:dSTRmat
dSTRmat	include/fasp.h	/^typedef struct dSTRmat{$/;"	s	language:C++
dSTRmat	include/fasp.h	/^} dSTRmat; \/**< Structured matrix of REAL type *\/$/;"	t	language:C++	typeref:struct:dSTRmat
dSwapping	base/src/AuxSort.c	/^static void dSwapping (REAL      *w,$/;"	f	language:C	file:	signature:(REAL *w, const INT i, const INT j)
data	base/include/fasp.h	/^    void *data;$/;"	m	language:C++	struct:__anon19
data	base/include/fasp.h	/^    void *data;$/;"	m	language:C++	struct:__anon20
data	base/src/PreAMGUtil.inl	/^    INT data;$/;"	m	language:C++	struct:linked_list	file:
data	include/fasp.h	/^    void *data;$/;"	m	language:C++	struct:__anon43
data	include/fasp.h	/^    void *data;$/;"	m	language:C++	struct:__anon44
data	test/include/poisson_fdm.h	/^    double  *data;     \/**< @brief data of the vector (length is size) *\/$/;"	m	language:C++	struct:__anon25
data	test/include/poisson_fdm.h	/^    double  *data;$/;"	m	language:C++	struct:__anon22
data	test/include/poisson_fdm.h	/^    double  *data;$/;"	m	language:C++	struct:__anon23
data_ext	test/include/poisson_fdm.h	/^    double  *data_ext; \/**< @brief data part, including diag_ext and offdiag_ext *\/$/;"	m	language:C++	struct:__anon24
data_ext	test/include/poisson_fdm.h	/^    double  *data_ext; \/**< @brief data part, including extended data *\/$/;"	m	language:C++	struct:__anon25
dcsr_output	test/src/FemAssemble.c	/^void dcsr_output ( dCSRmat *t, dCSRmat *s )$/;"	f	language:C	signature:( dCSRmat *t, dCSRmat *s )
dden_output	test/src/FemAssemble.c	/^void dden_output ( ddenmat *t, ddenmat *s )$/;"	f	language:C	signature:( ddenmat *t, ddenmat *s )
ddenmat	base/include/fasp.h	/^typedef struct ddenmat{$/;"	s	language:C++
ddenmat	base/include/fasp.h	/^} ddenmat; \/**< Dense matrix of REAL type *\/$/;"	t	language:C++	typeref:struct:ddenmat
ddenmat	include/fasp.h	/^typedef struct ddenmat{$/;"	s	language:C++
ddenmat	include/fasp.h	/^} ddenmat; \/**< Dense matrix of REAL type *\/$/;"	t	language:C++	typeref:struct:ddenmat
default_mflags	base/extra/dlmalloc/dlmalloc.c	/^  flag_t default_mflags;$/;"	m	language:C	struct:malloc_params	file:
default_mflags	base/extra/include/malloc.c.h	/^  flag_t default_mflags;$/;"	m	language:C++	struct:malloc_params
dense_aAtxpby	base/src/KryPgcr.c	/^static void dense_aAtxpby (INT   n,$/;"	f	language:C	file:	signature:(INT n, INT m, REAL *A, REAL alpha, REAL *x, REAL beta, REAL *y)
destroy_mspace	base/extra/dlmalloc/dlmalloc.c	/^size_t destroy_mspace(mspace msp) {$/;"	f	language:C	signature:(mspace msp)
destroy_mspace	base/extra/include/malloc.c.h	/^size_t destroy_mspace(mspace msp) {$/;"	f	language:C++	signature:(mspace msp)
dev_zero_fd	base/extra/dlmalloc/dlmalloc.c	/^static int dev_zero_fd = -1; \/* Cached file descriptor for \/dev\/zero. *\/$/;"	v	language:C	file:
dev_zero_fd	base/extra/include/malloc.c.h	/^static int dev_zero_fd = -1; \/* Cached file descriptor for \/dev\/zero. *\/$/;"	v	language:C++
diag	base/include/fasp.h	/^    REAL *diag;$/;"	m	language:C++	struct:dSTRmat
diag	base/include/fasp.h	/^    dvector diag;$/;"	m	language:C++	struct:__anon18
diag	base/include/fasp_block.h	/^    dvector diag;$/;"	m	language:C++	struct:__anon3
diag	include/fasp.h	/^    REAL *diag;$/;"	m	language:C++	struct:dSTRmat
diag	include/fasp.h	/^    dvector diag;$/;"	m	language:C++	struct:__anon42
diag	include/fasp_block.h	/^    dvector diag;$/;"	m	language:C++	struct:__anon27
diag	test/include/poisson_fdm.h	/^    double  *diag; \/**< @brief diagonal entries (length is n) *\/$/;"	m	language:C++	struct:__anon24
diaginv	base/include/fasp.h	/^    dvector *diaginv;$/;"	m	language:C++	struct:__anon17
diaginv	base/include/fasp_block.h	/^    dvector diaginv;$/;"	m	language:C++	struct:__anon2
diaginv	include/fasp.h	/^    dvector *diaginv;$/;"	m	language:C++	struct:__anon41
diaginv	include/fasp_block.h	/^    dvector diaginv;$/;"	m	language:C++	struct:__anon26
diaginvS	base/include/fasp.h	/^    dvector *diaginvS;$/;"	m	language:C++	struct:__anon17
diaginvS	include/fasp.h	/^    dvector *diaginvS;$/;"	m	language:C++	struct:__anon41
diaginv_SS	base/include/fasp_block.h	/^    dvector diaginv_SS;$/;"	m	language:C++	struct:__anon2
diaginv_SS	include/fasp_block.h	/^    dvector diaginv_SS;$/;"	m	language:C++	struct:__anon26
dif	base/include/fasp.h	/^    INT dif;$/;"	m	language:C++	struct:dCSRLmat
dif	include/fasp.h	/^    INT dif;$/;"	m	language:C++	struct:dCSRLmat
disable_contiguous	base/extra/dlmalloc/dlmalloc.c	2516;"	d	language:C	file:
disable_contiguous	base/extra/include/malloc.c.h	2617;"	d	language:C++
disable_lock	base/extra/dlmalloc/dlmalloc.c	2509;"	d	language:C	file:
disable_lock	base/extra/include/malloc.c.h	2610;"	d	language:C++
disable_mmap	base/extra/dlmalloc/dlmalloc.c	2513;"	d	language:C	file:
disable_mmap	base/extra/include/malloc.c.h	2614;"	d	language:C++
dispose_node	base/src/PreAMGUtil.inl	/^static void dispose_node (LinkList node_ptr)$/;"	f	language:C++	file:	signature:(LinkList node_ptr)
dlcalloc	base/extra/dlmalloc/dlmalloc.c	/^void* dlcalloc(size_t n_elements, size_t elem_size) {$/;"	f	language:C	signature:(size_t n_elements, size_t elem_size)
dlcalloc	base/extra/dlmalloc/dlmalloc.c	757;"	d	language:C	file:
dlcalloc	base/extra/include/dlmalloc.h	45;"	d	language:C++
dlcalloc	base/extra/include/malloc.c.h	/^void* dlcalloc(size_t n_elements, size_t elem_size) {$/;"	f	language:C++	signature:(size_t n_elements, size_t elem_size)
dlcalloc	base/extra/include/malloc.c.h	777;"	d	language:C++
dlength	base/src/BlaIO.c	/^INT   dlength; \/**< Length of REAL in byte *\/$/;"	v	language:C
dlfree	base/extra/dlmalloc/dlmalloc.c	/^void dlfree(void* mem) {$/;"	f	language:C	signature:(void* mem)
dlfree	base/extra/dlmalloc/dlmalloc.c	758;"	d	language:C	file:
dlfree	base/extra/include/dlmalloc.h	46;"	d	language:C++
dlfree	base/extra/include/malloc.c.h	/^void dlfree(void* mem) {$/;"	f	language:C++	signature:(void* mem)
dlfree	base/extra/include/malloc.c.h	778;"	d	language:C++
dlindependent_calloc	base/extra/dlmalloc/dlmalloc.c	/^void** dlindependent_calloc(size_t n_elements, size_t elem_size,$/;"	f	language:C	signature:(size_t n_elements, size_t elem_size, void* chunks[])
dlindependent_calloc	base/extra/dlmalloc/dlmalloc.c	771;"	d	language:C	file:
dlindependent_calloc	base/extra/include/dlmalloc.h	58;"	d	language:C++
dlindependent_calloc	base/extra/include/malloc.c.h	/^void** dlindependent_calloc(size_t n_elements, size_t elem_size,$/;"	f	language:C++	signature:(size_t n_elements, size_t elem_size, void* chunks[])
dlindependent_calloc	base/extra/include/malloc.c.h	791;"	d	language:C++
dlindependent_comalloc	base/extra/dlmalloc/dlmalloc.c	/^void** dlindependent_comalloc(size_t n_elements, size_t sizes[],$/;"	f	language:C	signature:(size_t n_elements, size_t sizes[], void* chunks[])
dlindependent_comalloc	base/extra/dlmalloc/dlmalloc.c	772;"	d	language:C	file:
dlindependent_comalloc	base/extra/include/dlmalloc.h	59;"	d	language:C++
dlindependent_comalloc	base/extra/include/malloc.c.h	/^void** dlindependent_comalloc(size_t n_elements, size_t sizes[],$/;"	f	language:C++	signature:(size_t n_elements, size_t sizes[], void* chunks[])
dlindependent_comalloc	base/extra/include/malloc.c.h	792;"	d	language:C++
dlmallinfo	base/extra/dlmalloc/dlmalloc.c	/^struct mallinfo dlmallinfo(void) {$/;"	f	language:C	signature:(void)
dlmallinfo	base/extra/dlmalloc/dlmalloc.c	764;"	d	language:C	file:
dlmallinfo	base/extra/include/dlmalloc.h	52;"	d	language:C++
dlmallinfo	base/extra/include/malloc.c.h	/^struct mallinfo dlmallinfo(void) {$/;"	f	language:C++	signature:(void)
dlmallinfo	base/extra/include/malloc.c.h	784;"	d	language:C++
dlmalloc	base/extra/dlmalloc/dlmalloc.c	/^void* dlmalloc(size_t bytes) {$/;"	f	language:C	signature:(size_t bytes)
dlmalloc	base/extra/dlmalloc/dlmalloc.c	759;"	d	language:C	file:
dlmalloc	base/extra/include/dlmalloc.h	47;"	d	language:C++
dlmalloc	base/extra/include/malloc.c.h	/^void* dlmalloc(size_t bytes) {$/;"	f	language:C++	signature:(size_t bytes)
dlmalloc	base/extra/include/malloc.c.h	779;"	d	language:C++
dlmalloc_footprint	base/extra/dlmalloc/dlmalloc.c	/^size_t dlmalloc_footprint(void) {$/;"	f	language:C	signature:(void)
dlmalloc_footprint	base/extra/dlmalloc/dlmalloc.c	769;"	d	language:C	file:
dlmalloc_footprint	base/extra/include/dlmalloc.h	57;"	d	language:C++
dlmalloc_footprint	base/extra/include/malloc.c.h	/^size_t dlmalloc_footprint(void) {$/;"	f	language:C++	signature:(void)
dlmalloc_footprint	base/extra/include/malloc.c.h	789;"	d	language:C++
dlmalloc_max_footprint	base/extra/dlmalloc/dlmalloc.c	/^size_t dlmalloc_max_footprint(void) {$/;"	f	language:C	signature:(void)
dlmalloc_max_footprint	base/extra/dlmalloc/dlmalloc.c	770;"	d	language:C	file:
dlmalloc_max_footprint	base/extra/include/malloc.c.h	/^size_t dlmalloc_max_footprint(void) {$/;"	f	language:C++	signature:(void)
dlmalloc_max_footprint	base/extra/include/malloc.c.h	790;"	d	language:C++
dlmalloc_stats	base/extra/dlmalloc/dlmalloc.c	/^void dlmalloc_stats() {$/;"	f	language:C
dlmalloc_stats	base/extra/dlmalloc/dlmalloc.c	767;"	d	language:C	file:
dlmalloc_stats	base/extra/include/dlmalloc.h	55;"	d	language:C++
dlmalloc_stats	base/extra/include/malloc.c.h	/^void dlmalloc_stats() {$/;"	f	language:C++	signature:()
dlmalloc_stats	base/extra/include/malloc.c.h	787;"	d	language:C++
dlmalloc_trim	base/extra/dlmalloc/dlmalloc.c	/^int dlmalloc_trim(size_t pad) {$/;"	f	language:C	signature:(size_t pad)
dlmalloc_trim	base/extra/dlmalloc/dlmalloc.c	766;"	d	language:C	file:
dlmalloc_trim	base/extra/include/dlmalloc.h	54;"	d	language:C++
dlmalloc_trim	base/extra/include/malloc.c.h	/^int dlmalloc_trim(size_t pad) {$/;"	f	language:C++	signature:(size_t pad)
dlmalloc_trim	base/extra/include/malloc.c.h	786;"	d	language:C++
dlmalloc_usable_size	base/extra/dlmalloc/dlmalloc.c	/^size_t dlmalloc_usable_size(void* mem) {$/;"	f	language:C	signature:(void* mem)
dlmalloc_usable_size	base/extra/dlmalloc/dlmalloc.c	768;"	d	language:C	file:
dlmalloc_usable_size	base/extra/include/dlmalloc.h	56;"	d	language:C++
dlmalloc_usable_size	base/extra/include/malloc.c.h	/^size_t dlmalloc_usable_size(void* mem) {$/;"	f	language:C++	signature:(void* mem)
dlmalloc_usable_size	base/extra/include/malloc.c.h	788;"	d	language:C++
dlmallopt	base/extra/dlmalloc/dlmalloc.c	/^int dlmallopt(int param_number, int value) {$/;"	f	language:C	signature:(int param_number, int value)
dlmallopt	base/extra/dlmalloc/dlmalloc.c	765;"	d	language:C	file:
dlmallopt	base/extra/include/dlmalloc.h	53;"	d	language:C++
dlmallopt	base/extra/include/malloc.c.h	/^int dlmallopt(int param_number, int value) {$/;"	f	language:C++	signature:(int param_number, int value)
dlmallopt	base/extra/include/malloc.c.h	785;"	d	language:C++
dlmemalign	base/extra/dlmalloc/dlmalloc.c	/^void* dlmemalign(size_t alignment, size_t bytes) {$/;"	f	language:C	signature:(size_t alignment, size_t bytes)
dlmemalign	base/extra/dlmalloc/dlmalloc.c	760;"	d	language:C	file:
dlmemalign	base/extra/include/dlmalloc.h	48;"	d	language:C++
dlmemalign	base/extra/include/malloc.c.h	/^void* dlmemalign(size_t alignment, size_t bytes) {$/;"	f	language:C++	signature:(size_t alignment, size_t bytes)
dlmemalign	base/extra/include/malloc.c.h	780;"	d	language:C++
dlpvalloc	base/extra/dlmalloc/dlmalloc.c	/^void* dlpvalloc(size_t bytes) {$/;"	f	language:C	signature:(size_t bytes)
dlpvalloc	base/extra/dlmalloc/dlmalloc.c	763;"	d	language:C	file:
dlpvalloc	base/extra/include/dlmalloc.h	51;"	d	language:C++
dlpvalloc	base/extra/include/malloc.c.h	/^void* dlpvalloc(size_t bytes) {$/;"	f	language:C++	signature:(size_t bytes)
dlpvalloc	base/extra/include/malloc.c.h	783;"	d	language:C++
dlrealloc	base/extra/dlmalloc/dlmalloc.c	/^void* dlrealloc(void* oldmem, size_t bytes) {$/;"	f	language:C	signature:(void* oldmem, size_t bytes)
dlrealloc	base/extra/dlmalloc/dlmalloc.c	761;"	d	language:C	file:
dlrealloc	base/extra/include/dlmalloc.h	49;"	d	language:C++
dlrealloc	base/extra/include/malloc.c.h	/^void* dlrealloc(void* oldmem, size_t bytes) {$/;"	f	language:C++	signature:(void* oldmem, size_t bytes)
dlrealloc	base/extra/include/malloc.c.h	781;"	d	language:C++
dlvalloc	base/extra/dlmalloc/dlmalloc.c	/^void* dlvalloc(size_t bytes) {$/;"	f	language:C	signature:(size_t bytes)
dlvalloc	base/extra/dlmalloc/dlmalloc.c	762;"	d	language:C	file:
dlvalloc	base/extra/include/dlmalloc.h	50;"	d	language:C++
dlvalloc	base/extra/include/malloc.c.h	/^void* dlvalloc(size_t bytes) {$/;"	f	language:C++	signature:(size_t bytes)
dlvalloc	base/extra/include/malloc.c.h	782;"	d	language:C++
do_check_any_chunk	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_any_chunk(mstate m, mchunkptr p) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr p)
do_check_any_chunk	base/extra/include/malloc.c.h	/^static void do_check_any_chunk(mstate m, mchunkptr p) {$/;"	f	language:C++	signature:(mstate m, mchunkptr p)
do_check_free_chunk	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_free_chunk(mstate m, mchunkptr p) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr p)
do_check_free_chunk	base/extra/include/malloc.c.h	/^static void do_check_free_chunk(mstate m, mchunkptr p) {$/;"	f	language:C++	signature:(mstate m, mchunkptr p)
do_check_inuse_chunk	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_inuse_chunk(mstate m, mchunkptr p) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr p)
do_check_inuse_chunk	base/extra/include/malloc.c.h	/^static void do_check_inuse_chunk(mstate m, mchunkptr p) {$/;"	f	language:C++	signature:(mstate m, mchunkptr p)
do_check_malloc_state	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_malloc_state(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
do_check_malloc_state	base/extra/include/malloc.c.h	/^static void do_check_malloc_state(mstate m) {$/;"	f	language:C++	signature:(mstate m)
do_check_malloced_chunk	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_malloced_chunk(mstate m, void* mem, size_t s) {$/;"	f	language:C	file:	signature:(mstate m, void* mem, size_t s)
do_check_malloced_chunk	base/extra/include/malloc.c.h	/^static void do_check_malloced_chunk(mstate m, void* mem, size_t s) {$/;"	f	language:C++	signature:(mstate m, void* mem, size_t s)
do_check_mmapped_chunk	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_mmapped_chunk(mstate m, mchunkptr p) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr p)
do_check_mmapped_chunk	base/extra/include/malloc.c.h	/^static void do_check_mmapped_chunk(mstate m, mchunkptr p) {$/;"	f	language:C++	signature:(mstate m, mchunkptr p)
do_check_smallbin	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_smallbin(mstate m, bindex_t i) {$/;"	f	language:C	file:	signature:(mstate m, bindex_t i)
do_check_smallbin	base/extra/include/malloc.c.h	/^static void do_check_smallbin(mstate m, bindex_t i) {$/;"	f	language:C++	signature:(mstate m, bindex_t i)
do_check_top_chunk	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_top_chunk(mstate m, mchunkptr p) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr p)
do_check_top_chunk	base/extra/include/malloc.c.h	/^static void do_check_top_chunk(mstate m, mchunkptr p) {$/;"	f	language:C++	signature:(mstate m, mchunkptr p)
do_check_tree	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_tree(mstate m, tchunkptr t) {$/;"	f	language:C	file:	signature:(mstate m, tchunkptr t)
do_check_tree	base/extra/include/malloc.c.h	/^static void do_check_tree(mstate m, tchunkptr t) {$/;"	f	language:C++	signature:(mstate m, tchunkptr t)
do_check_treebin	base/extra/dlmalloc/dlmalloc.c	/^static void do_check_treebin(mstate m, bindex_t i) {$/;"	f	language:C	file:	signature:(mstate m, bindex_t i)
do_check_treebin	base/extra/include/malloc.c.h	/^static void do_check_treebin(mstate m, bindex_t i) {$/;"	f	language:C++	signature:(mstate m, bindex_t i)
dof	test/include/heat_fem.h	/^    ivector dof, bd, idx;$/;"	m	language:C++	struct:Bd_apply_info
dv	base/extra/dlmalloc/dlmalloc.c	/^  mchunkptr  dv;$/;"	m	language:C	struct:malloc_state	file:
dv	base/extra/include/malloc.c.h	/^  mchunkptr  dv;$/;"	m	language:C++	struct:malloc_state
dvec_output	test/src/FemAssemble.c	/^void dvec_output ( dvector *t, dvector *s )$/;"	f	language:C	signature:( dvector *t, dvector *s )
dvector	base/include/fasp.h	/^typedef struct dvector{$/;"	s	language:C++
dvector	base/include/fasp.h	/^} dvector; \/**< Vector of REAL type *\/$/;"	t	language:C++	typeref:struct:dvector
dvector	include/fasp.h	/^typedef struct dvector{$/;"	s	language:C++
dvector	include/fasp.h	/^} dvector; \/**< Vector of REAL type *\/$/;"	t	language:C++	typeref:struct:dvector
dvector2SAMGInput	base/extra/interface/XtrSamg.c	/^void dvector2SAMGInput (dvector *vec,$/;"	f	language:C	signature:(dvector *vec, char *filename)
dvsize	base/extra/dlmalloc/dlmalloc.c	/^  size_t     dvsize;$/;"	m	language:C	struct:malloc_state	file:
dvsize	base/extra/include/malloc.c.h	/^  size_t     dvsize;$/;"	m	language:C++	struct:malloc_state
e	base/include/fasp_grid.h	/^    INT (*e)[2];   \/**< Vertices of edges *\/$/;"	m	language:C++	struct:grid2d
e	include/fasp_grid.h	/^    INT (*e)[2];   \/**< Vertices of edges *\/$/;"	m	language:C++	struct:grid2d
edge	test/include/mesh.h	/^    idenmat edge;$/;"	m	language:C++	struct:Mesh_aux
edge_bd	test/include/mesh.h	/^    ivector edge_bd;$/;"	m	language:C++	struct:Mesh_aux
edges	base/include/fasp_grid.h	/^    INT edges;     \/**< Number of edges *\/$/;"	m	language:C++	struct:grid2d
edges	include/fasp_grid.h	/^    INT edges;     \/**< Number of edges *\/$/;"	m	language:C++	struct:grid2d
ediri	base/include/fasp_grid.h	/^    INT *ediri;    \/**< Boundary flags (0 <=> interior edge) *\/$/;"	m	language:C++	struct:grid2d
ediri	include/fasp_grid.h	/^    INT *ediri;    \/**< Boundary flags (0 <=> interior edge) *\/$/;"	m	language:C++	struct:grid2d
efather	base/include/fasp_grid.h	/^    INT *efather;  \/**< Father edge or triangle *\/$/;"	m	language:C++	struct:grid2d
efather	include/fasp_grid.h	/^    INT *efather;  \/**< Father edge or triangle *\/$/;"	m	language:C++	struct:grid2d
elem	test/include/mesh.h	/^    idenmat elem;$/;"	m	language:C++	struct:Mesh
elem2edge	test/include/mesh.h	/^    idenmat elem2edge;$/;"	m	language:C++	struct:Mesh_aux
enable_lock	base/extra/dlmalloc/dlmalloc.c	2508;"	d	language:C	file:
enable_lock	base/extra/include/malloc.c.h	2609;"	d	language:C++
enable_mmap	base/extra/dlmalloc/dlmalloc.c	2512;"	d	language:C	file:
enable_mmap	base/extra/include/malloc.c.h	2613;"	d	language:C++
endian_convert_int	base/src/BlaIOUtil.inl	/^static inline INT endian_convert_int (const INT  inum,$/;"	f	language:C++	file:	signature:(const INT inum, const INT ilength, const INT EndianFlag)
endian_convert_real	base/src/BlaIOUtil.inl	/^static inline REAL endian_convert_real (const REAL  rnum,$/;"	f	language:C++	file:	signature:(const REAL rnum, const INT vlength, const INT EndianFlag)
ensure_initialization	base/extra/dlmalloc/dlmalloc.c	2490;"	d	language:C	file:
ensure_initialization	base/extra/include/malloc.c.h	1506;"	d	language:C++
enter_list	base/src/PreAMGUtil.inl	/^static void enter_list (LinkList *LoL_head_ptr,$/;"	f	language:C++	file:	signature:(LinkList *LoL_head_ptr, LinkList *LoL_tail_ptr, INT measure, INT index, INT *lists, INT *where)
examples	tutorial/Makefile	/^examples = poisson-amg-c.ex poisson-its-c.ex poisson-pcg-c.ex \\$/;"	m	language:Make
examples_c	tutorial/Makefile	/^examples_c = $(filter-out %-f.ex,$(examples))$/;"	m	language:Make
examples_f	tutorial/Makefile	/^examples_f = $(filter %-f.ex,$(examples))$/;"	m	language:Make
extp	base/extra/dlmalloc/dlmalloc.c	/^  void*      extp;      \/* Unused but available for extensions *\/$/;"	m	language:C	struct:malloc_state	file:
extp	base/extra/include/malloc.c.h	/^  void*      extp;      \/* Unused but available for extensions *\/$/;"	m	language:C++	struct:malloc_state
extractNondirichletMatrix	test/src/FemAssemble.c	/^void extractNondirichletMatrix (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dCSRmat *A11, dvector *b1, ivector *isInNode, ivector *dirichlet, ivector *nondirichlet, ivector *index, dvector *uh)
exts	base/extra/dlmalloc/dlmalloc.c	/^  size_t     exts;$/;"	m	language:C	struct:malloc_state	file:
exts	base/extra/include/malloc.c.h	/^  size_t     exts;$/;"	m	language:C++	struct:malloc_state
f	test/main/testfct_heat.inl	/^double f (double *p)$/;"	f	language:C++	signature:(double *p)
f	test/main/testfct_poisson.inl	/^double f (double *p)$/;"	f	language:C++	signature:(double *p)
f1d	test/main/testgmg.c	/^static REAL f1d (INT i,$/;"	f	language:C	file:	signature:(INT i, INT nx)
f2d	test/main/testgmg.c	/^static REAL f2d (INT i,$/;"	f	language:C	file:	signature:(INT i, INT j, INT nx, INT ny)
f2d	tutorial/main/poisson-gmg.c	/^static REAL f2d (INT i,$/;"	f	language:C	file:	signature:(INT i, INT j, INT nx, INT ny)
f3d	test/main/testgmg.c	/^static REAL f3d (INT i,$/;"	f	language:C	file:	signature:(INT i, INT j, INT k, INT nx, INT ny, INT nz)
fasp_amg_amli_coef	base/src/PreMGRecurAMLI.c	/^void fasp_amg_amli_coef (const REAL  lambda_max,$/;"	f	language:C	signature:(const REAL lambda_max, const REAL lambda_min, const INT degree, REAL *coef)
fasp_amg_coarsening_cr	base/src/PreAMGCoarsenCR.c	/^INT fasp_amg_coarsening_cr (const INT   i_0,$/;"	f	language:C	signature:(const INT i_0, const INT i_n, dCSRmat *A, ivector *vertices, AMG_param *param)
fasp_amg_coarsening_rs	base/src/PreAMGCoarsenRS.c	/^SHORT fasp_amg_coarsening_rs (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, ivector *vertices, dCSRmat *P, iCSRmat *S, AMG_param *param)
fasp_amg_data_bsr_create	base/src/PreDataInit.c	/^AMG_data_bsr * fasp_amg_data_bsr_create (SHORT max_levels)$/;"	f	language:C	signature:(SHORT max_levels)
fasp_amg_data_bsr_free	base/src/PreDataInit.c	/^void fasp_amg_data_bsr_free (AMG_data_bsr *mgl)$/;"	f	language:C	signature:(AMG_data_bsr *mgl)
fasp_amg_data_create	base/src/PreDataInit.c	/^AMG_data * fasp_amg_data_create (SHORT max_levels)$/;"	f	language:C	signature:(SHORT max_levels)
fasp_amg_data_free	base/src/PreDataInit.c	/^void fasp_amg_data_free (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_interp	base/src/PreAMGInterp.c	/^void fasp_amg_interp (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, ivector *vertices, dCSRmat *P, iCSRmat *S, AMG_param *param)
fasp_amg_interp_em	base/src/PreAMGInterpEM.c	/^void fasp_amg_interp_em (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, ivector *vertices, dCSRmat *P, AMG_param *param)
fasp_amg_setup_cr	base/src/PreAMGSetupCR.c	/^SHORT fasp_amg_setup_cr (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_setup_rs	base/src/PreAMGSetupRS.c	/^SHORT fasp_amg_setup_rs (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_setup_sa	base/src/PreAMGSetupSA.c	/^SHORT fasp_amg_setup_sa (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_setup_sa_bsr	base/src/PreAMGSetupSABSR.c	/^SHORT fasp_amg_setup_sa_bsr (AMG_data_bsr  *mgl,$/;"	f	language:C	signature:(AMG_data_bsr *mgl, AMG_param *param)
fasp_amg_setup_ua	base/src/PreAMGSetupUA.c	/^SHORT fasp_amg_setup_ua (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_setup_ua_bsr	base/src/PreAMGSetupUABSR.c	/^SHORT fasp_amg_setup_ua_bsr (AMG_data_bsr  *mgl,$/;"	f	language:C	signature:(AMG_data_bsr *mgl, AMG_param *param)
fasp_amg_solve	base/src/PreMGSolve.c	/^INT fasp_amg_solve (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_solve_amli	base/src/PreMGSolve.c	/^INT fasp_amg_solve_amli (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amg_solve_namli	base/src/PreMGSolve.c	/^INT fasp_amg_solve_namli (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_amgcomplexity	base/src/AuxMessage.c	/^void fasp_amgcomplexity (const AMG_data  *mgl,$/;"	f	language:C	signature:(const AMG_data *mgl, const SHORT prtlvl)
fasp_amgcomplexity_bsr	base/src/AuxMessage.c	/^void fasp_amgcomplexity_bsr (const AMG_data_bsr  *mgl,$/;"	f	language:C	signature:(const AMG_data_bsr *mgl, const SHORT prtlvl)
fasp_aux_BiSearch	base/src/AuxSort.c	/^INT fasp_aux_BiSearch (const INT   nlist,$/;"	f	language:C	signature:(const INT nlist, const INT *list, const INT value)
fasp_aux_auv_	base/src/ItrAuxiliary.inl	/^static void fasp_aux_auv_ (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *a, REAL *u, REAL *v, INT *nn, REAL *aauv)
fasp_aux_bbyteToldouble	base/src/AuxConvert.c	/^double fasp_aux_bbyteToldouble (const unsigned char bytes[])$/;"	f	language:C	signature:(const unsigned char bytes[])
fasp_aux_change_endian4	base/src/AuxConvert.c	/^unsigned long fasp_aux_change_endian4 (const unsigned long x)$/;"	f	language:C	signature:(const unsigned long x)
fasp_aux_change_endian8	base/src/AuxConvert.c	/^double fasp_aux_change_endian8 (const double x)$/;"	f	language:C	signature:(const double x)
fasp_aux_dQuickSort	base/src/AuxSort.c	/^void fasp_aux_dQuickSort (REAL  *a,$/;"	f	language:C	signature:(REAL *a, INT left, INT right)
fasp_aux_dQuickSortIndex	base/src/AuxSort.c	/^void fasp_aux_dQuickSortIndex (REAL  *a,$/;"	f	language:C	signature:(REAL *a, INT left, INT right, INT *index)
fasp_aux_givens	base/src/AuxGivens.c	/^void fasp_aux_givens (const REAL      beta,$/;"	f	language:C	signature:(const REAL beta, const dCSRmat *H, dvector *y, REAL *work)
fasp_aux_iQuickSort	base/src/AuxSort.c	/^void fasp_aux_iQuickSort (INT  *a,$/;"	f	language:C	signature:(INT *a, INT left, INT right)
fasp_aux_iQuickSortIndex	base/src/AuxSort.c	/^void fasp_aux_iQuickSortIndex (INT  *a,$/;"	f	language:C	signature:(INT *a, INT left, INT right, INT *index)
fasp_aux_ijvcrs	base/src/ItrAuxiliary.inl	/^static void fasp_aux_ijvcrs (INT   *nnzi,$/;"	f	language:C++	file:	signature:(INT *nnzi, INT *ia, INT *ja, REAL *a, INT *n, INT *nnz, INT *irow, INT *jcol, REAL *aval)
fasp_aux_merge	base/src/AuxSort.c	/^void fasp_aux_merge (INT  numbers[],$/;"	f	language:C	signature:(INT numbers[], INT work[], INT left, INT mid, INT right)
fasp_aux_msort	base/src/AuxSort.c	/^void fasp_aux_msort (INT  numbers[],$/;"	f	language:C	signature:(INT numbers[], INT work[], INT left, INT right)
fasp_aux_norm1_	base/src/ItrSmootherCSRpoly.c	/^static void fasp_aux_norm1_ (INT   *ia,$/;"	f	language:C	file:	signature:(INT *ia, INT *ja, REAL *a, INT *nn, REAL *a1norm)
fasp_aux_rvecd	base/src/ItrAuxiliary.inl	/^static void fasp_aux_rvecd (FILE  *inp,$/;"	f	language:C++	file:	signature:(FILE *inp, REAL *vec, INT *nn)
fasp_aux_rveci	base/src/ItrAuxiliary.inl	/^static void fasp_aux_rveci (FILE  *inp,$/;"	f	language:C++	file:	signature:(FILE *inp, INT *vec, INT *nn)
fasp_aux_sh00	base/src/ItrAuxiliary.inl	/^static void fasp_aux_sh00 (dCSRmat    *X,$/;"	f	language:C++	file:	signature:(dCSRmat *X, const INT ish)
fasp_aux_unique	base/src/AuxSort.c	/^INT fasp_aux_unique (INT        numbers[],$/;"	f	language:C	signature:(INT numbers[], const INT size)
fasp_aux_uuplv0_	base/src/ItrSmootherCSRpoly.c	/^static void fasp_aux_uuplv0_ (REAL *u,$/;"	f	language:C	file:	signature:(REAL *u, REAL *v, INT *n)
fasp_aux_wvecd	base/src/ItrAuxiliary.inl	/^static void fasp_aux_wvecd (FILE  *inp,$/;"	f	language:C++	file:	signature:(FILE *inp, REAL *vec, INT *nn)
fasp_aux_wveci	base/src/ItrAuxiliary.inl	/^static void fasp_aux_wveci (FILE  *inp,$/;"	f	language:C++	file:	signature:(FILE *inp, INT *vec, INT *nn)
fasp_blas_darray_ax	base/src/BlaArray.c	/^void fasp_blas_darray_ax (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL a, REAL *x)
fasp_blas_darray_axpby	base/src/BlaArray.c	/^void fasp_blas_darray_axpby (const INT   n,$/;"	f	language:C	signature:(const INT n, const REAL a, const REAL *x, const REAL b, REAL *y)
fasp_blas_darray_axpy	base/src/BlaArray.c	/^void fasp_blas_darray_axpy (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL a, const REAL *x, REAL *y)
fasp_blas_darray_axpy_nc2	base/src/BlaArray.c	/^void fasp_blas_darray_axpy_nc2 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, REAL *y)
fasp_blas_darray_axpy_nc3	base/src/BlaArray.c	/^void fasp_blas_darray_axpy_nc3 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, REAL *y)
fasp_blas_darray_axpy_nc5	base/src/BlaArray.c	/^void fasp_blas_darray_axpy_nc5 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, REAL *y)
fasp_blas_darray_axpy_nc7	base/src/BlaArray.c	/^void fasp_blas_darray_axpy_nc7 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, REAL *y)
fasp_blas_darray_axpyz	base/src/BlaArray.c	/^void fasp_blas_darray_axpyz (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL a, const REAL *x, const REAL *y, REAL *z)
fasp_blas_darray_axpyz_nc2	base/src/BlaArray.c	/^void fasp_blas_darray_axpyz_nc2 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, const REAL *y, REAL *z)
fasp_blas_darray_axpyz_nc3	base/src/BlaArray.c	/^void fasp_blas_darray_axpyz_nc3 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, const REAL *y, REAL *z)
fasp_blas_darray_axpyz_nc5	base/src/BlaArray.c	/^void fasp_blas_darray_axpyz_nc5 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, const REAL *y, REAL *z)
fasp_blas_darray_axpyz_nc7	base/src/BlaArray.c	/^void fasp_blas_darray_axpyz_nc7 (const REAL   a,$/;"	f	language:C	signature:(const REAL a, const REAL *x, const REAL *y, REAL *z)
fasp_blas_darray_dotprod	base/src/BlaArray.c	/^REAL fasp_blas_darray_dotprod (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL *x, const REAL *y)
fasp_blas_darray_norm1	base/src/BlaArray.c	/^REAL fasp_blas_darray_norm1 (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL *x)
fasp_blas_darray_norm2	base/src/BlaArray.c	/^REAL fasp_blas_darray_norm2 (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL *x)
fasp_blas_darray_norminf	base/src/BlaArray.c	/^REAL fasp_blas_darray_norminf (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL *x)
fasp_blas_dblc_aAxpy	base/src/BlaSpmvBLC.c	/^void fasp_blas_dblc_aAxpy (const REAL      alpha,$/;"	f	language:C	signature:(const REAL alpha, const dBLCmat *A, const REAL *x, REAL *y)
fasp_blas_dblc_mxv	base/src/BlaSpmvBLC.c	/^void fasp_blas_dblc_mxv (const dBLCmat  *A,$/;"	f	language:C	signature:(const dBLCmat *A, const REAL *x, REAL *y)
fasp_blas_dbsr_aAxpby	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_aAxpby (const REAL   alpha,$/;"	f	language:C	signature:(const REAL alpha, dBSRmat *A, REAL *x, const REAL beta, REAL *y )
fasp_blas_dbsr_aAxpy	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_aAxpy (const REAL      alpha,$/;"	f	language:C	signature:(const REAL alpha, const dBSRmat *A, const REAL *x, REAL *y)
fasp_blas_dbsr_aAxpy_agg	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_aAxpy_agg (const REAL      alpha,$/;"	f	language:C	signature:(const REAL alpha, const dBSRmat *A, const REAL *x, REAL *y)
fasp_blas_dbsr_axm	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_axm (dBSRmat     *A,$/;"	f	language:C	signature:(dBSRmat *A, const REAL alpha)
fasp_blas_dbsr_mxm	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_mxm (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const dBSRmat *B, dBSRmat *C)
fasp_blas_dbsr_mxv	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_mxv (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const REAL *x, REAL *y)
fasp_blas_dbsr_mxv_agg	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_mxv_agg (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const REAL *x, REAL *y)
fasp_blas_dbsr_rap	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_rap (const dBSRmat  *R,$/;"	f	language:C	signature:(const dBSRmat *R, const dBSRmat *A, const dBSRmat *P, dBSRmat *B)
fasp_blas_dbsr_rap1	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_rap1 (const dBSRmat  *R,$/;"	f	language:C	signature:(const dBSRmat *R, const dBSRmat *A, const dBSRmat *P, dBSRmat *B)
fasp_blas_dbsr_rap_agg	base/src/BlaSpmvBSR.c	/^void fasp_blas_dbsr_rap_agg (const dBSRmat  *R,$/;"	f	language:C	signature:(const dBSRmat *R, const dBSRmat *A, const dBSRmat *P, dBSRmat *B)
fasp_blas_dcsr_aAxpy	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_aAxpy (const REAL      alpha,$/;"	f	language:C	signature:(const REAL alpha, const dCSRmat *A, const REAL *x, REAL *y)
fasp_blas_dcsr_aAxpy_agg	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_aAxpy_agg (const REAL      alpha,$/;"	f	language:C	signature:(const REAL alpha, const dCSRmat *A, const REAL *x, REAL *y)
fasp_blas_dcsr_add	base/src/BlaSpmvCSR.c	/^SHORT fasp_blas_dcsr_add (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const REAL alpha, const dCSRmat *B, const REAL beta, dCSRmat *C)
fasp_blas_dcsr_axm	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_axm (dCSRmat     *A,$/;"	f	language:C	signature:(dCSRmat *A, const REAL alpha)
fasp_blas_dcsr_mxm	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_mxm (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dCSRmat *B, dCSRmat *C)
fasp_blas_dcsr_mxv	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_mxv (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const REAL *x, REAL *y)
fasp_blas_dcsr_mxv_agg	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_mxv_agg (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const REAL *x, REAL *y)
fasp_blas_dcsr_ptap	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_ptap (const dCSRmat  *Pt,$/;"	f	language:C	signature:(const dCSRmat *Pt, const dCSRmat *A, const dCSRmat *P, dCSRmat *Ac)
fasp_blas_dcsr_rap	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_rap (const dCSRmat  *R,$/;"	f	language:C	signature:(const dCSRmat *R, const dCSRmat *A, const dCSRmat *P, dCSRmat *RAP)
fasp_blas_dcsr_rap2	base/src/BlaSpmvCSR.c	/^dCSRmat fasp_blas_dcsr_rap2 (INT    *ir,$/;"	f	language:C	signature:(INT *ir, INT *jr, REAL *r, INT *ia, INT *ja, REAL *a, INT *ipt, INT *jpt, REAL *pt, INT n, INT nc, INT *maxrpout, INT *ipin, INT *jpin)
fasp_blas_dcsr_rap4	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_rap4 (dCSRmat   *R,$/;"	f	language:C	signature:(dCSRmat *R, dCSRmat *A, dCSRmat *P, dCSRmat *B, INT *icor_ysk)
fasp_blas_dcsr_rap_agg	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_rap_agg (const dCSRmat  *R,$/;"	f	language:C	signature:(const dCSRmat *R, const dCSRmat *A, const dCSRmat *P, dCSRmat *RAP)
fasp_blas_dcsr_rap_agg1	base/src/BlaSpmvCSR.c	/^void fasp_blas_dcsr_rap_agg1 (const dCSRmat  *R,$/;"	f	language:C	signature:(const dCSRmat *R, const dCSRmat *A, const dCSRmat *P, dCSRmat *B)
fasp_blas_dcsr_vmv	base/src/BlaSpmvCSR.c	/^REAL fasp_blas_dcsr_vmv (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const REAL *x, const REAL *y)
fasp_blas_dcsrl_mxv	base/src/BlaSpmvCSRL.c	/^void fasp_blas_dcsrl_mxv (const dCSRLmat  *A,$/;"	f	language:C	signature:(const dCSRLmat *A, const REAL *x, REAL *y)
fasp_blas_dstr_aAxpy	base/src/BlaSpmvSTR.c	/^void fasp_blas_dstr_aAxpy (const REAL      alpha,$/;"	f	language:C	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
fasp_blas_dstr_diagscale	base/src/BlaSpmvSTR.c	/^INT fasp_blas_dstr_diagscale (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, dSTRmat *B)
fasp_blas_dstr_mxv	base/src/BlaSpmvSTR.c	/^void fasp_blas_dstr_mxv (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, const REAL *x, REAL *y)
fasp_blas_dvec_axpy	base/src/BlaVector.c	/^void fasp_blas_dvec_axpy (const REAL     a,$/;"	f	language:C	signature:(const REAL a, const dvector *x, dvector *y)
fasp_blas_dvec_axpyz	base/src/BlaVector.c	/^void fasp_blas_dvec_axpyz (const REAL     a,$/;"	f	language:C	signature:(const REAL a, const dvector *x, const dvector *y, dvector *z)
fasp_blas_dvec_dotprod	base/src/BlaVector.c	/^REAL fasp_blas_dvec_dotprod (const dvector *x,$/;"	f	language:C	signature:(const dvector *x, const dvector *y)
fasp_blas_dvec_norm1	base/src/BlaVector.c	/^REAL fasp_blas_dvec_norm1 (const dvector *x)$/;"	f	language:C	signature:(const dvector *x)
fasp_blas_dvec_norm2	base/src/BlaVector.c	/^REAL fasp_blas_dvec_norm2 (const dvector *x)$/;"	f	language:C	signature:(const dvector *x)
fasp_blas_dvec_norminf	base/src/BlaVector.c	/^REAL fasp_blas_dvec_norminf (const dvector *x)$/;"	f	language:C	signature:(const dvector *x)
fasp_blas_dvec_relerr	base/src/BlaVector.c	/^REAL fasp_blas_dvec_relerr (const dvector *x,$/;"	f	language:C	signature:(const dvector *x, const dvector *y)
fasp_blas_mxv_blc	base/src/BlaSpmvMatFree.inl	/^static inline void fasp_blas_mxv_blc (const void *A,$/;"	f	language:C++	file:	signature:(const void *A, const REAL *x, REAL *y)
fasp_blas_mxv_bsr	base/src/BlaSpmvMatFree.inl	/^static inline void fasp_blas_mxv_bsr (const void *A,$/;"	f	language:C++	file:	signature:(const void *A, const REAL *x, REAL *y)
fasp_blas_mxv_csr	base/src/BlaSpmvMatFree.inl	/^static inline void fasp_blas_mxv_csr (const void *A,$/;"	f	language:C++	file:	signature:(const void *A, const REAL *x, REAL *y)
fasp_blas_mxv_csrl	base/src/BlaSpmvMatFree.inl	/^static inline void fasp_blas_mxv_csrl (const void *A,$/;"	f	language:C++	file:	signature:(const void *A, const REAL *x, REAL *y)
fasp_blas_mxv_str	base/src/BlaSpmvMatFree.inl	/^static inline void fasp_blas_mxv_str (const void *A,$/;"	f	language:C++	file:	signature:(const void *A, const REAL *x, REAL *y)
fasp_blas_smat_aAxpby	base/src/BlaSmallMat.c	/^void fasp_blas_smat_aAxpby (const REAL   alpha,$/;"	f	language:C	signature:(const REAL alpha, const REAL *A, const REAL *x, const REAL beta, REAL *y, const INT n)
fasp_blas_smat_add	base/src/BlaSmallMat.c	/^void fasp_blas_smat_add (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, const INT n, const REAL alpha, const REAL beta, REAL *c)
fasp_blas_smat_axm	base/src/BlaSmallMat.c	/^void fasp_blas_smat_axm (REAL       *a,$/;"	f	language:C	signature:(REAL *a, const INT n, const REAL alpha)
fasp_blas_smat_mul	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mul (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c, const INT n)
fasp_blas_smat_mul_nc2	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mul_nc2 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mul_nc3	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mul_nc3 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mul_nc5	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mul_nc5 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mul_nc7	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mul_nc7 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mxv	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mxv (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c, const INT n)
fasp_blas_smat_mxv_nc2	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mxv_nc2 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mxv_nc3	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mxv_nc3 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mxv_nc5	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mxv_nc5 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_mxv_nc7	base/src/BlaSmallMat.c	/^void fasp_blas_smat_mxv_nc7 (const REAL  *a,$/;"	f	language:C	signature:(const REAL *a, const REAL *b, REAL *c)
fasp_blas_smat_ymAx	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ymAx (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y, const INT n)
fasp_blas_smat_ymAx_nc2	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ymAx_nc2 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ymAx_nc3	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ymAx_nc3 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ymAx_nc5	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ymAx_nc5 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ymAx_nc7	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ymAx_nc7 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ypAx	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ypAx (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y, const INT n)
fasp_blas_smat_ypAx_nc2	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ypAx_nc2 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ypAx_nc3	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ypAx_nc3 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ypAx_nc5	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ypAx_nc5 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_blas_smat_ypAx_nc7	base/src/BlaSmallMat.c	/^void fasp_blas_smat_ypAx_nc7 (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const REAL *x, REAL *y)
fasp_check_col_index	base/src/BlaILU.c	/^static void fasp_check_col_index (INT row,$/;"	f	language:C	file:	signature:(INT row, INT num, INT *q)
fasp_check_dCSRmat	base/src/BlaSparseCheck.c	/^void fasp_check_dCSRmat (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_check_diagdom	base/src/BlaSparseCheck.c	/^INT fasp_check_diagdom (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_check_diagpos	base/src/BlaSparseCheck.c	/^INT fasp_check_diagpos (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_check_diagzero	base/src/BlaSparseCheck.c	/^SHORT fasp_check_diagzero (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_check_iCSRmat	base/src/BlaSparseCheck.c	/^SHORT fasp_check_iCSRmat (const iCSRmat *A)$/;"	f	language:C	signature:(const iCSRmat *A)
fasp_check_ordering	base/src/BlaSparseCheck.c	/^void fasp_check_ordering (dCSRmat *A)$/;"	f	language:C	signature:(dCSRmat *A)
fasp_check_symm	base/src/BlaSparseCheck.c	/^INT fasp_check_symm (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_chkerr	base/src/AuxMessage.c	/^void fasp_chkerr (const SHORT  status,$/;"	f	language:C	signature:(const SHORT status, const char *fctname)
fasp_coarse_itsolver	base/src/PreMGUtil.inl	/^static inline void fasp_coarse_itsolver (const dCSRmat  *A,$/;"	f	language:C++	file:	signature:(const dCSRmat *A, const dvector *b, dvector *x, const REAL ctol, const SHORT PrtLvl)
fasp_cputime	base/src/AuxMessage.c	/^void fasp_cputime (const char  *message,$/;"	f	language:C	signature:(const char *message, const REAL cputime)
fasp_darray_cp	base/src/AuxArray.c	/^void fasp_darray_cp (const INT    n,$/;"	f	language:C	signature:(const INT n, const REAL *x, REAL *y)
fasp_darray_cp_nc3	base/src/PreSTR.c	/^static inline void fasp_darray_cp_nc3 (const REAL  *x,$/;"	f	language:C	file:	signature:(const REAL *x, REAL *y)
fasp_darray_cp_nc5	base/src/PreSTR.c	/^static inline void fasp_darray_cp_nc5 (const REAL  *x,$/;"	f	language:C	file:	signature:(const REAL *x, REAL *y)
fasp_darray_cp_nc7	base/src/PreSTR.c	/^static inline void fasp_darray_cp_nc7 (const REAL  *x,$/;"	f	language:C	file:	signature:(const REAL *x, REAL *y)
fasp_darray_set	base/src/AuxArray.c	/^void fasp_darray_set (const INT   n,$/;"	f	language:C	signature:(const INT n, REAL *x, const REAL val)
fasp_dblc_free	base/src/BlaSparseBLC.c	/^void fasp_dblc_free (dBLCmat *A)$/;"	f	language:C	signature:(dBLCmat *A)
fasp_dbsr_alloc	base/src/BlaSparseBSR.c	/^void fasp_dbsr_alloc (const INT  ROW,$/;"	f	language:C	signature:(const INT ROW, const INT COL, const INT NNZ, const INT nb, const INT storage_manner, dBSRmat *A)
fasp_dbsr_cp	base/src/BlaSparseBSR.c	/^void fasp_dbsr_cp (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, dBSRmat *B)
fasp_dbsr_create	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_create (const INT  ROW,$/;"	f	language:C	signature:(const INT ROW, const INT COL, const INT NNZ, const INT nb, const INT storage_manner)
fasp_dbsr_diagLU	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_diagLU (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, REAL *DL, REAL *DU)
fasp_dbsr_diagLU2	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_diagLU2 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, REAL *DL, REAL *DU)
fasp_dbsr_diaginv	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_diaginv (const dBSRmat *A)$/;"	f	language:C	signature:(const dBSRmat *A)
fasp_dbsr_diaginv2	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_diaginv2 (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, REAL *diaginv)
fasp_dbsr_diaginv3	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_diaginv3 (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, REAL *diaginv)
fasp_dbsr_diaginv4	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_diaginv4 (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, REAL *diaginv)
fasp_dbsr_diagpref	base/src/BlaSparseBSR.c	/^SHORT fasp_dbsr_diagpref (dBSRmat *A)$/;"	f	language:C	signature:(dBSRmat *A)
fasp_dbsr_free	base/src/BlaSparseBSR.c	/^void fasp_dbsr_free (dBSRmat *A)$/;"	f	language:C	signature:(dBSRmat *A)
fasp_dbsr_getblk	base/src/BlaSparseBSR.c	/^SHORT fasp_dbsr_getblk (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const INT *Is, const INT *Js, const INT m, const INT n, dBSRmat *B)
fasp_dbsr_getdiag	base/src/BlaSparseBSR.c	/^void fasp_dbsr_getdiag (INT            n,$/;"	f	language:C	signature:(INT n, const dBSRmat *A, REAL *diag )
fasp_dbsr_getdiaginv	base/src/BlaSparseBSR.c	/^dvector fasp_dbsr_getdiaginv (const dBSRmat *A)$/;"	f	language:C	signature:(const dBSRmat *A)
fasp_dbsr_merge_col	base/src/BlaSparseBSR.c	/^INT fasp_dbsr_merge_col (dBSRmat *A)$/;"	f	language:C	signature:(dBSRmat *A)
fasp_dbsr_perm	base/src/BlaSparseBSR.c	/^dBSRmat fasp_dbsr_perm (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, const INT *P)
fasp_dbsr_plot	base/src/AuxGraphics.c	/^void fasp_dbsr_plot (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const char *fname)
fasp_dbsr_print	base/src/BlaIO.c	/^void fasp_dbsr_print (const dBSRmat *A)$/;"	f	language:C	signature:(const dBSRmat *A)
fasp_dbsr_read	base/src/BlaIO.c	/^void fasp_dbsr_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dBSRmat *A)
fasp_dbsr_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dbsr_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dBSRmat *A, const SHORT EndianFlag)
fasp_dbsr_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dbsr_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dBSRmat *A)
fasp_dbsr_subplot	base/src/AuxGraphics.c	/^void fasp_dbsr_subplot (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const char *filename, INT size)
fasp_dbsr_trans	base/src/BlaSparseBSR.c	/^INT fasp_dbsr_trans (const dBSRmat *A,$/;"	f	language:C	signature:(const dBSRmat *A, dBSRmat *AT)
fasp_dbsr_write	base/src/BlaIO.c	/^void fasp_dbsr_write (const char *filename,$/;"	f	language:C	signature:(const char *filename, dBSRmat *A)
fasp_dbsr_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dbsr_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dBSRmat *A)
fasp_dbsr_write_coo	base/src/BlaIO.c	/^void fasp_dbsr_write_coo (const char    *filename,$/;"	f	language:C	signature:(const char *filename, const dBSRmat *A)
fasp_dbsr_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dbsr_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dBSRmat *A)
fasp_dcoo_alloc	base/src/BlaSparseCOO.c	/^void fasp_dcoo_alloc (const INT  m,$/;"	f	language:C	signature:(const INT m, const INT n, const INT nnz, dCOOmat *A)
fasp_dcoo_create	base/src/BlaSparseCOO.c	/^dCOOmat fasp_dcoo_create (const INT  m,$/;"	f	language:C	signature:(const INT m, const INT n, const INT nnz)
fasp_dcoo_free	base/src/BlaSparseCOO.c	/^void fasp_dcoo_free (dCOOmat *A)$/;"	f	language:C	signature:(dCOOmat *A)
fasp_dcoo_print	base/src/BlaIO.c	/^void fasp_dcoo_print (const dCOOmat *A)$/;"	f	language:C	signature:(const dCOOmat *A)
fasp_dcoo_read	base/src/BlaIO.c	/^void fasp_dcoo_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dcoo_read1	base/src/BlaIO.c	/^void fasp_dcoo_read1 (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dcoo_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dcoo_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A, const SHORT EndianFlag)
fasp_dcoo_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dcoo_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A)
fasp_dcoo_shift	base/src/BlaSparseCOO.c	/^void fasp_dcoo_shift (dCOOmat   *A,$/;"	f	language:C	signature:(dCOOmat *A, const INT offset)
fasp_dcoo_shift_read	base/src/BlaIO.c	/^void fasp_dcoo_shift_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dcoo_write	base/src/BlaIO.c	/^void fasp_dcoo_write (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dcsr_CMK_order	base/src/BlaOrderingCSR.c	/^void fasp_dcsr_CMK_order (const dCSRmat *A,$/;"	f	language:C	signature:(const dCSRmat *A, INT *order, INT *oindex)
fasp_dcsr_RCMK_order	base/src/BlaOrderingCSR.c	/^void fasp_dcsr_RCMK_order (const dCSRmat *A,$/;"	f	language:C	signature:(const dCSRmat *A, INT *order, INT *oindex, INT *rorder)
fasp_dcsr_alloc	base/src/BlaSparseCSR.c	/^void fasp_dcsr_alloc (const INT  m,$/;"	f	language:C	signature:(const INT m, const INT n, const INT nnz, dCSRmat *A)
fasp_dcsr_bandwidth	base/src/BlaSparseCSR.c	/^INT fasp_dcsr_bandwidth (const dCSRmat  *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_dcsr_compress	base/src/BlaSparseCSR.c	/^void fasp_dcsr_compress (const dCSRmat *A,$/;"	f	language:C	signature:(const dCSRmat *A, dCSRmat *B, const REAL dtol)
fasp_dcsr_compress_inplace	base/src/BlaSparseCSR.c	/^SHORT fasp_dcsr_compress_inplace (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, const REAL dtol)
fasp_dcsr_cp	base/src/BlaSparseCSR.c	/^void fasp_dcsr_cp (const dCSRmat *A,$/;"	f	language:C	signature:(const dCSRmat *A, dCSRmat *B)
fasp_dcsr_create	base/src/BlaSparseCSR.c	/^dCSRmat fasp_dcsr_create (const INT  m,$/;"	f	language:C	signature:(const INT m, const INT n, const INT nnz)
fasp_dcsr_diagpref	base/src/BlaSparseCSR.c	/^void fasp_dcsr_diagpref (dCSRmat *A)$/;"	f	language:C	signature:(dCSRmat *A)
fasp_dcsr_free	base/src/BlaSparseCSR.c	/^void fasp_dcsr_free (dCSRmat *A)$/;"	f	language:C	signature:(dCSRmat *A)
fasp_dcsr_getblk	base/src/BlaSparseCSR.c	/^SHORT fasp_dcsr_getblk (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const INT *Is, const INT *Js, const INT m, const INT n, dCSRmat *B)
fasp_dcsr_getcol	base/src/BlaSparseCSR.c	/^void fasp_dcsr_getcol (const INT      n,$/;"	f	language:C	signature:(const INT n, const dCSRmat *A, REAL *col)
fasp_dcsr_getdiag	base/src/BlaSparseCSR.c	/^void fasp_dcsr_getdiag (INT            n,$/;"	f	language:C	signature:(INT n, const dCSRmat *A, dvector *diag)
fasp_dcsr_maxeig	base/src/BlaEigen.c	/^REAL fasp_dcsr_maxeig (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const REAL tol, const INT maxit)
fasp_dcsr_multicoloring	base/src/BlaSparseCSR.c	/^void fasp_dcsr_multicoloring (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, INT *flags, INT *groups)
fasp_dcsr_perm	base/src/BlaSparseCSR.c	/^dCSRmat fasp_dcsr_perm (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, INT *P)
fasp_dcsr_permz	base/src/BlaSparseCSR.c	/^dCSRmat fasp_dcsr_permz (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, INT *p)
fasp_dcsr_plot	base/src/AuxGraphics.c	/^void fasp_dcsr_plot (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const char *fname)
fasp_dcsr_postsmoothing	base/src/PreMGSmoother.inl	/^static void fasp_dcsr_postsmoothing (const SHORT  smoother,$/;"	f	language:C++	file:	signature:(const SHORT smoother, dCSRmat *A, dvector *b, dvector *x, const INT nsweeps, const INT istart, const INT iend, const INT istep, const REAL relax, const SHORT ndeg, const SHORT order, INT *ordering)
fasp_dcsr_presmoothing	base/src/PreMGSmoother.inl	/^static void fasp_dcsr_presmoothing (const SHORT  smoother,$/;"	f	language:C++	file:	signature:(const SHORT smoother, dCSRmat *A, dvector *b, dvector *x, const INT nsweeps, const INT istart, const INT iend, const INT istep, const REAL relax, const SHORT ndeg, const SHORT order, INT *ordering)
fasp_dcsr_print	base/src/BlaIO.c	/^void fasp_dcsr_print (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_dcsr_read	base/src/BlaIO.c	/^void fasp_dcsr_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dcsr_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dcsr_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A, const SHORT EndianFlag)
fasp_dcsr_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dcsr_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A)
fasp_dcsr_regdiag	base/src/BlaSparseCSR.c	/^SHORT fasp_dcsr_regdiag (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, const REAL value)
fasp_dcsr_shift	base/src/BlaSparseCSR.c	/^void fasp_dcsr_shift (dCSRmat   *A,$/;"	f	language:C	signature:(dCSRmat *A, const INT offset)
fasp_dcsr_sort	base/src/BlaSparseCSR.c	/^void fasp_dcsr_sort (dCSRmat *A)$/;"	f	language:C	signature:(dCSRmat *A)
fasp_dcsr_sortz	base/src/BlaSparseCSR.c	/^void fasp_dcsr_sortz (dCSRmat      *A,$/;"	f	language:C	signature:(dCSRmat *A, const SHORT isym)
fasp_dcsr_subplot	base/src/AuxGraphics.c	/^void fasp_dcsr_subplot (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const char *filename, INT size)
fasp_dcsr_swz_backward_smoother	base/src/BlaSchwarzSetup.c	/^void fasp_dcsr_swz_backward_smoother (SWZ_data   *swzdata,$/;"	f	language:C	signature:(SWZ_data *swzdata, SWZ_param *swzparam, dvector *x, dvector *b)
fasp_dcsr_swz_forward_smoother	base/src/BlaSchwarzSetup.c	/^void fasp_dcsr_swz_forward_smoother (SWZ_data   *swzdata,$/;"	f	language:C	signature:(SWZ_data *swzdata, SWZ_param *swzparam, dvector *x, dvector *b)
fasp_dcsr_symdiagscale	base/src/BlaSparseCSR.c	/^void fasp_dcsr_symdiagscale (dCSRmat       *A,$/;"	f	language:C	signature:(dCSRmat *A, const dvector *diag)
fasp_dcsr_sympart	base/src/BlaSparseCSR.c	/^dCSRmat fasp_dcsr_sympart (dCSRmat *A)$/;"	f	language:C	signature:(dCSRmat *A)
fasp_dcsr_trans	base/src/BlaSparseCSR.c	/^INT fasp_dcsr_trans (const dCSRmat *A,$/;"	f	language:C	signature:(const dCSRmat *A, dCSRmat *AT)
fasp_dcsr_transpose	base/src/BlaSparseCSR.c	/^void fasp_dcsr_transpose (INT   *row[2],$/;"	f	language:C	signature:(INT *row[2], INT *col[2], REAL *val[2], INT *nn, INT *tniz)
fasp_dcsr_transz	base/src/BlaSparseCSR.c	/^void fasp_dcsr_transz (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, INT *p, dCSRmat *AT)
fasp_dcsr_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dcsr_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A)
fasp_dcsr_write_coo	base/src/BlaIO.c	/^void fasp_dcsr_write_coo (const char    *filename,$/;"	f	language:C	signature:(const char *filename, const dCSRmat *A)
fasp_dcsr_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dcsr_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A)
fasp_dcsrl_create	base/src/BlaSparseCSRL.c	/^dCSRLmat * fasp_dcsrl_create (const INT num_rows,$/;"	f	language:C	signature:(const INT num_rows, const INT num_cols, const INT num_nonzeros)
fasp_dcsrl_free	base/src/BlaSparseCSRL.c	/^void fasp_dcsrl_free (dCSRLmat *A)$/;"	f	language:C	signature:(dCSRLmat *A)
fasp_dcsrvec_read1	base/src/BlaIO.c	/^void fasp_dcsrvec_read1 (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A, dvector *b)
fasp_dcsrvec_read2	base/src/BlaIO.c	/^void fasp_dcsrvec_read2 (const char  *filemat,$/;"	f	language:C	signature:(const char *filemat, const char *filerhs, dCSRmat *A, dvector *b)
fasp_dcsrvec_write1	base/src/BlaIO.c	/^void fasp_dcsrvec_write1 (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A, dvector *b)
fasp_dcsrvec_write2	base/src/BlaIO.c	/^void fasp_dcsrvec_write2 (const char  *filemat,$/;"	f	language:C	signature:(const char *filemat, const char *filerhs, dCSRmat *A, dvector *b)
fasp_dmtx_read	base/src/BlaIO.c	/^void fasp_dmtx_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dmtx_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dmtx_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A, const SHORT EndianFlag)
fasp_dmtx_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dmtx_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A)
fasp_dmtxsym_read	base/src/BlaIO.c	/^void fasp_dmtxsym_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dCSRmat *A)
fasp_dmtxsym_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dmtxsym_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A, const SHORT EndianFlag)
fasp_dmtxsym_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dmtxsym_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dCSRmat *A)
fasp_dstr_alloc	base/src/BlaSparseSTR.c	/^void fasp_dstr_alloc (const INT  nx,$/;"	f	language:C	signature:(const INT nx, const INT ny, const INT nz, const INT nxy, const INT ngrid, const INT nband, const INT nc, INT *offsets, dSTRmat *A)
fasp_dstr_cp	base/src/BlaSparseSTR.c	/^void fasp_dstr_cp (const dSTRmat *A,$/;"	f	language:C	signature:(const dSTRmat *A, dSTRmat *B)
fasp_dstr_create	base/src/BlaSparseSTR.c	/^dSTRmat fasp_dstr_create (const INT  nx,$/;"	f	language:C	signature:(const INT nx, const INT ny, const INT nz, const INT nc, const INT nband, INT *offsets)
fasp_dstr_free	base/src/BlaSparseSTR.c	/^void fasp_dstr_free (dSTRmat *A)$/;"	f	language:C	signature:(dSTRmat *A)
fasp_dstr_print	base/src/BlaIO.c	/^void fasp_dstr_print (const dSTRmat *A)$/;"	f	language:C	signature:(const dSTRmat *A)
fasp_dstr_read	base/src/BlaIO.c	/^void fasp_dstr_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dSTRmat *A)
fasp_dstr_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dstr_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dSTRmat *A, const SHORT EndianFlag)
fasp_dstr_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dstr_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dSTRmat *A)
fasp_dstr_write	base/src/BlaIO.c	/^void fasp_dstr_write (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dSTRmat *A)
fasp_dstr_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dstr_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dSTRmat *A)
fasp_dstr_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dstr_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dSTRmat *A)
fasp_dvec_alloc	base/src/AuxVector.c	/^void fasp_dvec_alloc (const INT  m,$/;"	f	language:C	signature:(const INT m, dvector *u)
fasp_dvec_cp	base/src/AuxVector.c	/^void fasp_dvec_cp (const dvector  *x,$/;"	f	language:C	signature:(const dvector *x, dvector *y)
fasp_dvec_create	base/src/AuxVector.c	/^dvector fasp_dvec_create (const INT m)$/;"	f	language:C	signature:(const INT m)
fasp_dvec_free	base/src/AuxVector.c	/^void fasp_dvec_free (dvector *u)$/;"	f	language:C	signature:(dvector *u)
fasp_dvec_isnan	base/src/AuxVector.c	/^SHORT fasp_dvec_isnan (const dvector *u)$/;"	f	language:C	signature:(const dvector *u)
fasp_dvec_maxdiff	base/src/AuxVector.c	/^REAL fasp_dvec_maxdiff (const dvector *x,$/;"	f	language:C	signature:(const dvector *x, const dvector *y)
fasp_dvec_print	base/src/BlaIO.c	/^void fasp_dvec_print (const INT  n,$/;"	f	language:C	signature:(const INT n, dvector *u)
fasp_dvec_rand	base/src/AuxVector.c	/^void fasp_dvec_rand (const INT  n,$/;"	f	language:C	signature:(const INT n, dvector *x)
fasp_dvec_read	base/src/BlaIO.c	/^void fasp_dvec_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dvector *b)
fasp_dvec_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dvec_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *b, const SHORT EndianFlag)
fasp_dvec_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dvec_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *b)
fasp_dvec_set	base/src/AuxVector.c	/^void fasp_dvec_set (INT         n,$/;"	f	language:C	signature:(INT n, dvector *x, const REAL val)
fasp_dvec_symdiagscale	base/src/AuxVector.c	/^void fasp_dvec_symdiagscale (dvector        *b,$/;"	f	language:C	signature:(dvector *b, const dvector *diag)
fasp_dvec_write	base/src/BlaIO.c	/^void fasp_dvec_write (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dvector *vec)
fasp_dvec_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dvec_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *vec)
fasp_dvec_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dvec_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *vec)
fasp_dvecind_read	base/src/BlaIO.c	/^void fasp_dvecind_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dvector *b)
fasp_dvecind_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dvecind_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *b, const SHORT EndianFlag)
fasp_dvecind_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dvecind_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *b)
fasp_dvecind_write	base/src/BlaIO.c	/^void fasp_dvecind_write (const char  *filename,$/;"	f	language:C	signature:(const char *filename, dvector *vec)
fasp_dvecind_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_dvecind_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *vec)
fasp_dvecind_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_dvecind_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, dvector *vec)
fasp_famg_solve	base/src/PreMGSolve.c	/^void fasp_famg_solve (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_format_dblc_dcsr	base/src/BlaFormat.c	/^dCSRmat fasp_format_dblc_dcsr (const dBLCmat *Ab)$/;"	f	language:C	signature:(const dBLCmat *Ab)
fasp_format_dbsr_dcoo	base/src/BlaFormat.c	/^dCOOmat * fasp_format_dbsr_dcoo (const dBSRmat *B)$/;"	f	language:C	signature:(const dBSRmat *B)
fasp_format_dbsr_dcsr	base/src/BlaFormat.c	/^dCSRmat fasp_format_dbsr_dcsr (const dBSRmat *B)$/;"	f	language:C	signature:(const dBSRmat *B)
fasp_format_dcoo_dcsr	base/src/BlaFormat.c	/^SHORT fasp_format_dcoo_dcsr (const dCOOmat  *A,$/;"	f	language:C	signature:(const dCOOmat *A, dCSRmat *B)
fasp_format_dcsr_dbsr	base/src/BlaFormat.c	/^dBSRmat fasp_format_dcsr_dbsr (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const INT nb)
fasp_format_dcsr_dcoo	base/src/BlaFormat.c	/^SHORT fasp_format_dcsr_dcoo (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, dCOOmat *B)
fasp_format_dcsrl_dcsr	base/src/BlaFormat.c	/^dCSRLmat * fasp_format_dcsrl_dcsr (const dCSRmat *A)$/;"	f	language:C	signature:(const dCSRmat *A)
fasp_format_dstr_dbsr	base/src/BlaFormat.c	/^dBSRmat fasp_format_dstr_dbsr (const dSTRmat *B)$/;"	f	language:C	signature:(const dSTRmat *B)
fasp_format_dstr_dcsr	base/src/BlaFormat.c	/^SHORT fasp_format_dstr_dcsr (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, dCSRmat *B)
fasp_fwrapper_dbsr_krylov_amg_	base/src/SolWrapper.c	/^void fasp_fwrapper_dbsr_krylov_amg_ (INT  *n,$/;"	f	language:C	signature:(INT *n, INT *nnz, INT *nb, INT *ia, INT *ja, REAL *a, REAL *b, REAL *u, REAL *tol, INT *maxit, INT *ptrlvl)
fasp_fwrapper_dbsr_krylov_ilu_	base/src/SolWrapper.c	/^void fasp_fwrapper_dbsr_krylov_ilu_ (INT  *n,$/;"	f	language:C	signature:(INT *n, INT *nnz, INT *nb, INT *ia, INT *ja, REAL *a, REAL *b, REAL *u, REAL *tol, INT *maxit, INT *ptrlvl)
fasp_fwrapper_dcsr_amg_	base/src/SolWrapper.c	/^void fasp_fwrapper_dcsr_amg_ (INT  *n,$/;"	f	language:C	signature:(INT *n, INT *nnz, INT *ia, INT *ja, REAL *a, REAL *b, REAL *u, REAL *tol, INT *maxit, INT *ptrlvl)
fasp_fwrapper_dcsr_krylov_amg_	base/src/SolWrapper.c	/^void fasp_fwrapper_dcsr_krylov_amg_ (INT  *n,$/;"	f	language:C	signature:(INT *n, INT *nnz, INT *ia, INT *ja, REAL *a, REAL *b, REAL *u, REAL *tol, INT *maxit, INT *ptrlvl)
fasp_fwrapper_dcsr_krylov_ilu_	base/src/SolWrapper.c	/^void fasp_fwrapper_dcsr_krylov_ilu_ (INT  *n,$/;"	f	language:C	signature:(INT *n, INT *nnz, INT *ia, INT *ja, REAL *a, REAL *b, REAL *u, REAL *tol, INT *maxit, INT *ptrlvl)
fasp_gauss2d	test/src/FemQuadrature.c	/^void fasp_gauss2d (const INT   num_qp,$/;"	f	language:C	signature:(const INT num_qp, const INT ncoor, REAL (*gauss)[3])
fasp_generate_diaginv_block	base/src/ItrSmootherSTR.c	/^void fasp_generate_diaginv_block (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, ivector *neigh, dvector *diaginv, ivector *pivot)
fasp_get_num_threads	base/src/AuxThreads.c	/^INT fasp_get_num_threads ( void )$/;"	f	language:C	signature:( void )
fasp_get_start_end	base/src/AuxThreads.c	/^void fasp_get_start_end (const INT  procid,$/;"	f	language:C	signature:(const INT procid, const INT nprocs, const INT n, INT *start, INT *end)
fasp_gettime	base/src/AuxTiming.c	/^void fasp_gettime (REAL *time)$/;"	f	language:C	signature:(REAL *time)
fasp_grid2d_plot	base/src/AuxGraphics.c	/^void fasp_grid2d_plot (pgrid2d  pg,$/;"	f	language:C	signature:(pgrid2d pg, INT level)
fasp_hb_read	base/src/BlaIO.c	/^void fasp_hb_read (const char *input_file,$/;"	f	language:C	signature:(const char *input_file, dCSRmat *A, dvector *b)
fasp_iarray_cp	base/src/AuxArray.c	/^void fasp_iarray_cp (const INT    n,$/;"	f	language:C	signature:(const INT n, const INT *x, INT *y)
fasp_iarray_set	base/src/AuxArray.c	/^void fasp_iarray_set (const INT   n,$/;"	f	language:C	signature:(const INT n, INT *x, const INT val)
fasp_icsr_cp	base/src/BlaSparseCSR.c	/^void fasp_icsr_cp (const iCSRmat *A,$/;"	f	language:C	signature:(const iCSRmat *A, iCSRmat *B)
fasp_icsr_create	base/src/BlaSparseCSR.c	/^iCSRmat fasp_icsr_create (const INT  m,$/;"	f	language:C	signature:(const INT m, const INT n, const INT nnz)
fasp_icsr_free	base/src/BlaSparseCSR.c	/^void fasp_icsr_free (iCSRmat *A)$/;"	f	language:C	signature:(iCSRmat *A)
fasp_icsr_trans	base/src/BlaSparseCSR.c	/^void fasp_icsr_trans (const iCSRmat *A,$/;"	f	language:C	signature:(const iCSRmat *A, iCSRmat *AT)
fasp_ilu_data_create	base/src/PreDataInit.c	/^void fasp_ilu_data_create (const INT   iwk,$/;"	f	language:C	signature:(const INT iwk, const INT nwork, ILU_data *iludata)
fasp_ilu_data_free	base/src/PreDataInit.c	/^void fasp_ilu_data_free (ILU_data *iludata)$/;"	f	language:C	signature:(ILU_data *iludata)
fasp_ilu_dbsr_setup	base/src/BlaILUSetupBSR.c	/^SHORT fasp_ilu_dbsr_setup (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, ILU_data *iludata, ILU_param *iluparam)
fasp_ilu_dbsr_setup_levsch_omp	base/src/BlaILUSetupBSR.c	/^SHORT fasp_ilu_dbsr_setup_levsch_omp (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, ILU_data *iludata, ILU_param *iluparam)
fasp_ilu_dbsr_setup_mc_omp	base/src/BlaILUSetupBSR.c	/^SHORT fasp_ilu_dbsr_setup_mc_omp (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dCSRmat *Ap, ILU_data *iludata, ILU_param *iluparam)
fasp_ilu_dbsr_setup_omp	base/src/BlaILUSetupBSR.c	/^SHORT fasp_ilu_dbsr_setup_omp (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, ILU_data *iludata, ILU_param *iluparam)
fasp_ilu_dbsr_setup_step	base/src/BlaILUSetupBSR.c	/^SHORT fasp_ilu_dbsr_setup_step (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, ILU_data *iludata, ILU_param *iluparam, INT step)
fasp_ilu_dcsr_setup	base/src/BlaILUSetupCSR.c	/^SHORT fasp_ilu_dcsr_setup (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, ILU_data *iludata, ILU_param *iluparam)
fasp_ilu_dstr_setup0	base/src/BlaILUSetupSTR.c	/^void fasp_ilu_dstr_setup0 (dSTRmat  *A,$/;"	f	language:C	signature:(dSTRmat *A, dSTRmat *LU)
fasp_ilu_dstr_setup1	base/src/BlaILUSetupSTR.c	/^void fasp_ilu_dstr_setup1 (dSTRmat  *A,$/;"	f	language:C	signature:(dSTRmat *A, dSTRmat *LU)
fasp_iluk	base/src/BlaILU.c	/^void fasp_iluk (INT    n,$/;"	f	language:C	signature:(INT n, REAL *a, INT *ja, INT *ia, INT lfil, REAL *alu, INT *jlu, INT iwk, INT *ierr, INT *nzlu)
fasp_ilut	base/src/BlaILU.c	/^void fasp_ilut (INT    n,$/;"	f	language:C	signature:(INT n, REAL *a, INT *ja, INT *ia, INT lfil, REAL droptol, REAL *alu, INT *jlu, INT iwk, INT *ierr, INT *nz)
fasp_ilutp	base/src/BlaILU.c	/^void fasp_ilutp (INT    n,$/;"	f	language:C	signature:(INT n, REAL *a, INT *ja, INT *ia, INT lfil, REAL droptol, REAL permtol, INT mbloc, REAL *alu, INT *jlu, INT *iperm, INT iwk, INT *ierr, INT *nz)
fasp_itinfo	base/src/AuxMessage.c	/^void fasp_itinfo (const INT   ptrlvl,$/;"	f	language:C	signature:(const INT ptrlvl, const INT stop_type, const INT iter, const REAL relres, const REAL absres, const REAL factor)
fasp_ivec_alloc	base/src/AuxVector.c	/^void fasp_ivec_alloc (const INT  m,$/;"	f	language:C	signature:(const INT m, ivector *u)
fasp_ivec_create	base/src/AuxVector.c	/^ivector fasp_ivec_create (const INT m)$/;"	f	language:C	signature:(const INT m)
fasp_ivec_free	base/src/AuxVector.c	/^void fasp_ivec_free (ivector *u)$/;"	f	language:C	signature:(ivector *u)
fasp_ivec_print	base/src/BlaIO.c	/^void fasp_ivec_print (const INT  n,$/;"	f	language:C	signature:(const INT n, ivector *u)
fasp_ivec_read	base/src/BlaIO.c	/^void fasp_ivec_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, ivector *b)
fasp_ivec_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_ivec_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *b, const SHORT EndianFlag)
fasp_ivec_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_ivec_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *b)
fasp_ivec_set	base/src/AuxVector.c	/^void fasp_ivec_set (INT        n,$/;"	f	language:C	signature:(INT n, ivector *u, const INT m)
fasp_ivec_write	base/src/BlaIO.c	/^void fasp_ivec_write (const char  *filename,$/;"	f	language:C	signature:(const char *filename, ivector *vec)
fasp_ivec_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_ivec_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *vec)
fasp_ivec_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_ivec_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *vec)
fasp_ivecind_read	base/src/BlaIO.c	/^void fasp_ivecind_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, ivector *b)
fasp_ivecind_read_b	base/src/BlaIOUtil.inl	/^static inline void fasp_ivecind_read_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *b, const SHORT EndianFlag)
fasp_ivecind_read_s	base/src/BlaIOUtil.inl	/^static inline void fasp_ivecind_read_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *b)
fasp_ivecind_write_b	base/src/BlaIOUtil.inl	/^static inline void fasp_ivecind_write_b (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *vec)
fasp_ivecind_write_s	base/src/BlaIOUtil.inl	/^static inline void fasp_ivecind_write_s (FILE        *fp,$/;"	f	language:C++	file:	signature:(FILE *fp, ivector *vec)
fasp_lib_file	test/Makefile	/^fasp_lib_file=$(fasp_prefix)\/lib\/$(fasp_library) $/;"	m	language:Make
fasp_lib_file	tutorial/Makefile	/^fasp_lib_file=$(fasp_prefix)\/lib\/$(fasp_library) $/;"	m	language:Make
fasp_library	test/Makefile	/^    fasp_library = libfasp.a$/;"	m	language:Make
fasp_library	test/Makefile	/^fasp_library = not-defined-yet$/;"	m	language:Make
fasp_library	tutorial/Makefile	/^    fasp_library = libfasp.a$/;"	m	language:Make
fasp_library	tutorial/Makefile	/^fasp_library = not-defined-yet$/;"	m	language:Make
fasp_matrix_read	base/src/BlaIO.c	/^void fasp_matrix_read (const char  *filename,$/;"	f	language:C	signature:(const char *filename, void *A)
fasp_matrix_read_bin	base/src/BlaIO.c	/^void fasp_matrix_read_bin (const char *filename,$/;"	f	language:C	signature:(const char *filename, void *A)
fasp_matrix_write	base/src/BlaIO.c	/^void fasp_matrix_write (const char *filename,$/;"	f	language:C	signature:(const char *filename, void *A, const INT flag)
fasp_mem_calloc	base/src/AuxMemory.c	/^void * fasp_mem_calloc (const LONGLONG  size,$/;"	f	language:C	signature:(const LONGLONG size, const INT type)
fasp_mem_free	base/src/AuxMemory.c	/^void fasp_mem_free (void *mem)$/;"	f	language:C	signature:(void *mem)
fasp_mem_iludata_check	base/src/AuxMemory.c	/^SHORT fasp_mem_iludata_check (const ILU_data *iludata)$/;"	f	language:C	signature:(const ILU_data *iludata)
fasp_mem_realloc	base/src/AuxMemory.c	/^void * fasp_mem_realloc (void           *oldmem,$/;"	f	language:C	signature:(void *oldmem, const LONGLONG tsize)
fasp_mem_usage	base/src/AuxMemory.c	/^void fasp_mem_usage ( void )$/;"	f	language:C	signature:( void )
fasp_message	base/src/AuxMessage.c	/^void fasp_message (const INT    ptrlvl,$/;"	f	language:C	signature:(const INT ptrlvl, const char *message)
fasp_mumps_factorize	base/extra/interface/XtrMumps.c	/^Mumps_data fasp_mumps_factorize (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, const SHORT prtlvl)
fasp_mumps_free	base/extra/interface/XtrMumps.c	/^void fasp_mumps_free (Mumps_data *mumps)$/;"	f	language:C	signature:(Mumps_data *mumps)
fasp_mumps_solve	base/extra/interface/XtrMumps.c	/^void fasp_mumps_solve (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, Mumps_data mumps, const SHORT prtlvl)
fasp_param_amg_init	base/src/AuxParam.c	/^void fasp_param_amg_init (AMG_param *amgparam)$/;"	f	language:C	signature:(AMG_param *amgparam)
fasp_param_amg_print	base/src/AuxParam.c	/^void fasp_param_amg_print (const AMG_param *param)$/;"	f	language:C	signature:(const AMG_param *param)
fasp_param_amg_set	base/src/AuxParam.c	/^void fasp_param_amg_set (AMG_param          *param,$/;"	f	language:C	signature:(AMG_param *param, const input_param *iniparam)
fasp_param_amg_to_prec	base/src/AuxParam.c	/^void fasp_param_amg_to_prec (precond_data     *pcdata,$/;"	f	language:C	signature:(precond_data *pcdata, const AMG_param *amgparam)
fasp_param_amg_to_precbsr	base/src/AuxParam.c	/^void fasp_param_amg_to_precbsr (precond_data_bsr  *pcdata,$/;"	f	language:C	signature:(precond_data_bsr *pcdata, const AMG_param *amgparam)
fasp_param_check	base/src/AuxInput.c	/^SHORT fasp_param_check (input_param  *inparam)$/;"	f	language:C	signature:(input_param *inparam)
fasp_param_ilu_init	base/src/AuxParam.c	/^void fasp_param_ilu_init (ILU_param *iluparam)$/;"	f	language:C	signature:(ILU_param *iluparam)
fasp_param_ilu_print	base/src/AuxParam.c	/^void fasp_param_ilu_print (const ILU_param *param)$/;"	f	language:C	signature:(const ILU_param *param)
fasp_param_ilu_set	base/src/AuxParam.c	/^void fasp_param_ilu_set (ILU_param          *iluparam,$/;"	f	language:C	signature:(ILU_param *iluparam, const input_param *iniparam)
fasp_param_init	base/src/AuxParam.c	/^void fasp_param_init (const input_param  *iniparam,$/;"	f	language:C	signature:(const input_param *iniparam, ITS_param *itsparam, AMG_param *amgparam, ILU_param *iluparam, SWZ_param *swzparam)
fasp_param_input	base/src/AuxInput.c	/^void fasp_param_input (const char   *fname,$/;"	f	language:C	signature:(const char *fname, input_param *inparam)
fasp_param_input_init	base/src/AuxParam.c	/^void fasp_param_input_init (input_param *iniparam)$/;"	f	language:C	signature:(input_param *iniparam)
fasp_param_prec_to_amg	base/src/AuxParam.c	/^void fasp_param_prec_to_amg (AMG_param           *amgparam,$/;"	f	language:C	signature:(AMG_param *amgparam, const precond_data *pcdata)
fasp_param_precbsr_to_amg	base/src/AuxParam.c	/^void fasp_param_precbsr_to_amg (AMG_param               *amgparam,$/;"	f	language:C	signature:(AMG_param *amgparam, const precond_data_bsr *pcdata)
fasp_param_set	base/src/AuxParam.c	/^void fasp_param_set (const int     argc,$/;"	f	language:C	signature:(const int argc, const char *argv[], input_param *iniparam)
fasp_param_solver_init	base/src/AuxParam.c	/^void fasp_param_solver_init (ITS_param *itsparam)$/;"	f	language:C	signature:(ITS_param *itsparam)
fasp_param_solver_print	base/src/AuxParam.c	/^void fasp_param_solver_print (const ITS_param *param)$/;"	f	language:C	signature:(const ITS_param *param)
fasp_param_solver_set	base/src/AuxParam.c	/^void fasp_param_solver_set (ITS_param          *itsparam,$/;"	f	language:C	signature:(ITS_param *itsparam, const input_param *iniparam)
fasp_param_swz_init	base/src/AuxParam.c	/^void fasp_param_swz_init (SWZ_param *swzparam)$/;"	f	language:C	signature:(SWZ_param *swzparam)
fasp_param_swz_print	base/src/AuxParam.c	/^void fasp_param_swz_print (const SWZ_param *param)$/;"	f	language:C	signature:(const SWZ_param *param)
fasp_param_swz_set	base/src/AuxParam.c	/^void fasp_param_swz_set (SWZ_param          *swzparam,$/;"	f	language:C	signature:(SWZ_param *swzparam, const input_param *iniparam)
fasp_pardiso_factorize	base/extra/interface/XtrPardiso.c	/^INT fasp_pardiso_factorize (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, Pardiso_data *pdata, const SHORT prtlvl)
fasp_pardiso_free_internal_mem	base/extra/interface/XtrPardiso.c	/^INT fasp_pardiso_free_internal_mem (Pardiso_data *pdata)$/;"	f	language:C	signature:(Pardiso_data *pdata)
fasp_pardiso_solve	base/extra/interface/XtrPardiso.c	/^INT fasp_pardiso_solve (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, Pardiso_data *pdata, const SHORT prtlvl)
fasp_poisson_fgmg1d	base/src/SolGMGPoisson.c	/^void fasp_poisson_fgmg1d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_fgmg2d	base/src/SolGMGPoisson.c	/^void fasp_poisson_fgmg2d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT ny, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_fgmg3d	base/src/SolGMGPoisson.c	/^void fasp_poisson_fgmg3d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT ny, const INT nz, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_gmg1d	base/src/SolGMGPoisson.c	/^INT fasp_poisson_gmg1d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_gmg2d	base/src/SolGMGPoisson.c	/^INT fasp_poisson_gmg2d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT ny, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_gmg3d	base/src/SolGMGPoisson.c	/^INT fasp_poisson_gmg3d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT ny, const INT nz, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_gmgcg1d	base/src/SolGMGPoisson.c	/^INT fasp_poisson_gmgcg1d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_gmgcg2d	base/src/SolGMGPoisson.c	/^INT fasp_poisson_gmgcg2d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT ny, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_poisson_gmgcg3d	base/src/SolGMGPoisson.c	/^INT fasp_poisson_gmgcg3d (REAL         *u,$/;"	f	language:C	signature:(REAL *u, REAL *b, const INT nx, const INT ny, const INT nz, const INT maxlevel, const REAL rtol, const SHORT prtlvl)
fasp_precond_amg	base/src/PreCSR.c	/^void fasp_precond_amg (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_amg_nk	base/src/PreCSR.c	/^void fasp_precond_amg_nk (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_amli	base/src/PreCSR.c	/^void fasp_precond_amli (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_data_init	base/src/PreDataInit.c	/^void fasp_precond_data_init (precond_data *pcdata)$/;"	f	language:C	signature:(precond_data *pcdata)
fasp_precond_dblc_SGS_3	base/src/PreBLC.c	/^void fasp_precond_dblc_SGS_3 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_SGS_3_amg	base/src/PreBLC.c	/^void fasp_precond_dblc_SGS_3_amg (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_diag_3	base/src/PreBLC.c	/^void fasp_precond_dblc_diag_3 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_diag_3_amg	base/src/PreBLC.c	/^void fasp_precond_dblc_diag_3_amg (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_diag_4	base/src/PreBLC.c	/^void fasp_precond_dblc_diag_4 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_lower_3	base/src/PreBLC.c	/^void fasp_precond_dblc_lower_3 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_lower_3_amg	base/src/PreBLC.c	/^void fasp_precond_dblc_lower_3_amg (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_lower_4	base/src/PreBLC.c	/^void fasp_precond_dblc_lower_4 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_sweeping	base/src/PreBLC.c	/^void fasp_precond_dblc_sweeping (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_upper_3	base/src/PreBLC.c	/^void fasp_precond_dblc_upper_3 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dblc_upper_3_amg	base/src/PreBLC.c	/^void fasp_precond_dblc_upper_3_amg (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_amg	base/src/PreBSR.c	/^void fasp_precond_dbsr_amg (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_amg_nk	base/src/PreBSR.c	/^void fasp_precond_dbsr_amg_nk (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_diag	base/src/PreBSR.c	/^void fasp_precond_dbsr_diag (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_diag_nc2	base/src/PreBSR.c	/^void fasp_precond_dbsr_diag_nc2 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_diag_nc3	base/src/PreBSR.c	/^void fasp_precond_dbsr_diag_nc3 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_diag_nc5	base/src/PreBSR.c	/^void fasp_precond_dbsr_diag_nc5 (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_diag_nc7	base/src/PreBSR.c	/^void fasp_precond_dbsr_diag_nc7 (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_ilu	base/src/PreBSR.c	/^void fasp_precond_dbsr_ilu (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_ilu_ls_omp	base/src/PreBSR.c	/^void fasp_precond_dbsr_ilu_ls_omp (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_ilu_mc_omp	base/src/PreBSR.c	/^void fasp_precond_dbsr_ilu_mc_omp (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dbsr_namli	base/src/PreBSR.c	/^void fasp_precond_dbsr_namli (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_diag	base/src/PreCSR.c	/^void fasp_precond_diag (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_blockgs	base/src/PreSTR.c	/^void fasp_precond_dstr_blockgs (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_diag	base/src/PreSTR.c	/^void fasp_precond_dstr_diag (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_ilu0	base/src/PreSTR.c	/^void fasp_precond_dstr_ilu0 (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_ilu0_backward	base/src/PreSTR.c	/^void fasp_precond_dstr_ilu0_backward (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_ilu0_forward	base/src/PreSTR.c	/^void fasp_precond_dstr_ilu0_forward (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_ilu1	base/src/PreSTR.c	/^void fasp_precond_dstr_ilu1 (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_ilu1_backward	base/src/PreSTR.c	/^void fasp_precond_dstr_ilu1_backward (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_dstr_ilu1_forward	base/src/PreSTR.c	/^void fasp_precond_dstr_ilu1_forward (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_famg	base/src/PreCSR.c	/^void fasp_precond_famg (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_ilu	base/src/PreCSR.c	/^void fasp_precond_ilu (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_ilu_backward	base/src/PreCSR.c	/^void fasp_precond_ilu_backward (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_ilu_forward	base/src/PreCSR.c	/^void fasp_precond_ilu_forward (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_namli	base/src/PreCSR.c	/^void fasp_precond_namli (REAL *r, $/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_precond_setup	base/src/PreCSR.c	/^precond *fasp_precond_setup (const SHORT   precond_type,$/;"	f	language:C	signature:(const SHORT precond_type, AMG_param *amgparam, ILU_param *iluparam, dCSRmat *A)
fasp_precond_swz	base/src/PreCSR.c	/^void fasp_precond_swz (REAL *r,$/;"	f	language:C	signature:(REAL *r, REAL *z, void *data)
fasp_prefix	test/Makefile	/^    fasp_prefix = ..$/;"	m	language:Make
fasp_prefix	test/Makefile	/^fasp_prefix = not-defined-yet$/;"	m	language:Make
fasp_prefix	tutorial/Makefile	/^    fasp_prefix = ..$/;"	m	language:Make
fasp_prefix	tutorial/Makefile	/^fasp_prefix = not-defined-yet$/;"	m	language:Make
fasp_qsplit	base/src/BlaILU.c	/^static void fasp_qsplit (REAL   *a,$/;"	f	language:C	file:	signature:(REAL *a, INT *ind, INT n, INT ncut)
fasp_quad2d	test/src/FemQuadrature.c	/^void fasp_quad2d (const INT   num_qp,$/;"	f	language:C	signature:(const INT num_qp, const INT ncoor, REAL (*quad)[3])
fasp_set_gs_threads	base/src/AuxThreads.c	/^void fasp_set_gs_threads (const INT mythreads,$/;"	f	language:C	signature:(const INT mythreads, const INT its)
fasp_set_num_threads	base/src/AuxThreads.c	/^INT fasp_set_num_threads (const INT nthreads)$/;"	f	language:C	signature:(const INT nthreads)
fasp_smat_Linf	base/src/BlaSmallMatInv.c	/^REAL fasp_smat_Linf (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, const INT n)
fasp_smat_identity	base/src/BlaSmallMatInv.c	/^void fasp_smat_identity (REAL      *a,$/;"	f	language:C	signature:(REAL *a, const INT n, const INT n2)
fasp_smat_identity_nc2	base/src/BlaSmallMatInv.c	/^void fasp_smat_identity_nc2 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_identity_nc3	base/src/BlaSmallMatInv.c	/^void fasp_smat_identity_nc3 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_identity_nc5	base/src/BlaSmallMatInv.c	/^void fasp_smat_identity_nc5 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_identity_nc7	base/src/BlaSmallMatInv.c	/^void fasp_smat_identity_nc7 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_inv	base/src/BlaSmallMatInv.c	/^INT fasp_smat_inv (REAL      *a,$/;"	f	language:C	signature:(REAL *a, const INT n)
fasp_smat_inv_nc	base/src/BlaSmallMatInv.c	/^void fasp_smat_inv_nc (REAL      *a,$/;"	f	language:C	signature:(REAL *a, const INT n)
fasp_smat_inv_nc2	base/src/BlaSmallMatInv.c	/^void fasp_smat_inv_nc2 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_inv_nc3	base/src/BlaSmallMatInv.c	/^void fasp_smat_inv_nc3 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_inv_nc4	base/src/BlaSmallMatInv.c	/^void fasp_smat_inv_nc4 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_inv_nc5	base/src/BlaSmallMatInv.c	/^void fasp_smat_inv_nc5 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_inv_nc7	base/src/BlaSmallMatInv.c	/^void fasp_smat_inv_nc7 (REAL *a)$/;"	f	language:C	signature:(REAL *a)
fasp_smat_invp_nc	base/src/BlaSmallMatInv.c	/^void fasp_smat_invp_nc (REAL      *a,$/;"	f	language:C	signature:(REAL *a, const INT n)
fasp_smat_lu_decomp	base/src/BlaSmallMatLU.c	/^SHORT fasp_smat_lu_decomp (REAL       *A,$/;"	f	language:C	signature:(REAL *A, INT pivot[], const INT n)
fasp_smat_lu_solve	base/src/BlaSmallMatLU.c	/^SHORT fasp_smat_lu_solve (const REAL  *A,$/;"	f	language:C	signature:(const REAL *A, REAL b[], const INT pivot[], REAL x[], const INT n)
fasp_smoother_dbsr_gs	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, INT order, INT *mark )
fasp_smoother_dbsr_gs1	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs1 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, INT order, INT *mark, REAL *diaginv)
fasp_smoother_dbsr_gs_ascend	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs_ascend (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv)
fasp_smoother_dbsr_gs_ascend1	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs_ascend1 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u)
fasp_smoother_dbsr_gs_descend	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs_descend (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv )
fasp_smoother_dbsr_gs_descend1	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs_descend1 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u)
fasp_smoother_dbsr_gs_order1	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs_order1 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv, INT *mark)
fasp_smoother_dbsr_gs_order2	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_gs_order2 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, INT *mark, REAL *work)
fasp_smoother_dbsr_ilu	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_ilu (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, void *data)
fasp_smoother_dbsr_jacobi	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_jacobi (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u)
fasp_smoother_dbsr_jacobi1	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_jacobi1 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv)
fasp_smoother_dbsr_jacobi_setup	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_jacobi_setup (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, REAL *diaginv)
fasp_smoother_dbsr_sor	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_sor (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, INT order, INT *mark, REAL weight)
fasp_smoother_dbsr_sor1	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_sor1 (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, INT order, INT *mark, REAL *diaginv, REAL weight)
fasp_smoother_dbsr_sor_ascend	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_sor_ascend (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv, REAL weight)
fasp_smoother_dbsr_sor_descend	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_sor_descend (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv, REAL weight)
fasp_smoother_dbsr_sor_order	base/src/ItrSmootherBSR.c	/^void fasp_smoother_dbsr_sor_order (dBSRmat *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, REAL *diaginv, INT *mark, REAL weight)
fasp_smoother_dcsr_L1diag	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_L1diag (dvector    *u,$/;"	f	language:C	signature:(dvector *u, const INT i_1, const INT i_n, const INT s, dCSRmat *A, dvector *b, INT L)
fasp_smoother_dcsr_gs	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_gs (dvector    *u,$/;"	f	language:C	signature:(dvector *u, const INT i_1, const INT i_n, const INT s, dCSRmat *A, dvector *b, INT L)
fasp_smoother_dcsr_gs_cf	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_gs_cf (dvector   *u,$/;"	f	language:C	signature:(dvector *u, dCSRmat *A, dvector *b, INT L, INT *mark, const INT order)
fasp_smoother_dcsr_gscr	base/src/ItrSmootherCSRcr.c	/^void fasp_smoother_dcsr_gscr (INT   pt,$/;"	f	language:C	signature:(INT pt, INT n, REAL *u, INT *ia, INT *ja, REAL *a, REAL *b, INT L, INT *CF)
fasp_smoother_dcsr_ilu	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_ilu (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, void *data)
fasp_smoother_dcsr_jacobi	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_jacobi (dvector    *u,$/;"	f	language:C	signature:(dvector *u, const INT i_1, const INT i_n, const INT s, dCSRmat *A, dvector *b, INT L, const REAL w)
fasp_smoother_dcsr_kaczmarz	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_kaczmarz (dvector    *u,$/;"	f	language:C	signature:(dvector *u, const INT i_1, const INT i_n, const INT s, dCSRmat *A, dvector *b, INT L, const REAL w)
fasp_smoother_dcsr_poly	base/src/ItrSmootherCSRpoly.c	/^void fasp_smoother_dcsr_poly (dCSRmat *Amat, $/;"	f	language:C	signature:(dCSRmat *Amat, dvector *brhs, dvector *usol, INT n, INT ndeg, INT L)
fasp_smoother_dcsr_poly_old	base/src/ItrSmootherCSRpoly.c	/^void fasp_smoother_dcsr_poly_old (dCSRmat *Amat, $/;"	f	language:C	signature:(dCSRmat *Amat, dvector *brhs, dvector *usol, INT n, INT ndeg, INT L)
fasp_smoother_dcsr_rbgs3d	base/src/ItrSmootherRBGS.inl	/^void fasp_smoother_dcsr_rbgs3d (dvector    *u,$/;"	f	language:C++	signature:(dvector *u, dCSRmat *A, dvector *b, INT L, const INT order, INT *mark, const INT maximap, const INT nx, const INT ny, const INT nz)
fasp_smoother_dcsr_sgs	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_sgs (dvector *u,$/;"	f	language:C	signature:(dvector *u, dCSRmat *A, dvector *b, INT L)
fasp_smoother_dcsr_sor	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_sor (dvector    *u,$/;"	f	language:C	signature:(dvector *u, const INT i_1, const INT i_n, const INT s, dCSRmat *A, dvector *b, INT L, const REAL w)
fasp_smoother_dcsr_sor_cf	base/src/ItrSmootherCSR.c	/^void fasp_smoother_dcsr_sor_cf (dvector    *u,$/;"	f	language:C	signature:(dvector *u, dCSRmat *A, dvector *b, INT L, const REAL w, INT *mark, const INT order )
fasp_smoother_dstr_gs	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_gs (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, const INT order, INT *mark)
fasp_smoother_dstr_gs1	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_gs1 (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, const INT order, INT *mark, REAL *diaginv)
fasp_smoother_dstr_gs_ascend	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_gs_ascend (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv)
fasp_smoother_dstr_gs_cf	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_gs_cf (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv, INT *mark, const INT order)
fasp_smoother_dstr_gs_descend	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_gs_descend (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv)
fasp_smoother_dstr_gs_order	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_gs_order (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv, INT *mark)
fasp_smoother_dstr_jacobi	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_jacobi (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u)
fasp_smoother_dstr_jacobi1	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_jacobi1 (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv)
fasp_smoother_dstr_sor	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_sor (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, const INT order, INT *mark, const REAL weight)
fasp_smoother_dstr_sor1	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_sor1 (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, const INT order, INT *mark, REAL *diaginv, const REAL weight)
fasp_smoother_dstr_sor_ascend	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_sor_ascend (dSTRmat *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv, REAL weight)
fasp_smoother_dstr_sor_cf	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_sor_cf (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv, INT *mark, const INT order, const REAL weight)
fasp_smoother_dstr_sor_descend	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_sor_descend (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv, REAL weight)
fasp_smoother_dstr_sor_order	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_sor_order (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, REAL *diaginv, INT *mark, REAL weight)
fasp_smoother_dstr_swz	base/src/ItrSmootherSTR.c	/^void fasp_smoother_dstr_swz (dSTRmat *A, $/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, dvector *diaginv, ivector *pivot, ivector *neigh, ivector *order)
fasp_solver_amg	base/src/SolAMG.c	/^void fasp_solver_amg (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *x, AMG_param *param)
fasp_solver_amli	base/src/PreMGRecurAMLI.c	/^void fasp_solver_amli (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param, INT level)
fasp_solver_dblc_itsolver	base/src/SolBLC.c	/^INT fasp_solver_dblc_itsolver (dBLCmat    *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, precond *pc, ITS_param *itparam)
fasp_solver_dblc_krylov	base/src/SolBLC.c	/^INT fasp_solver_dblc_krylov (dBLCmat    *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dblc_krylov_block3	base/src/SolBLC.c	/^INT fasp_solver_dblc_krylov_block3 (dBLCmat    *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam, dCSRmat *A_diag)
fasp_solver_dblc_krylov_block4	base/src/SolBLC.c	/^INT fasp_solver_dblc_krylov_block4 (dBLCmat    *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam, dCSRmat *A_diag)
fasp_solver_dblc_krylov_sweeping	base/src/SolBLC.c	/^INT fasp_solver_dblc_krylov_sweeping (dBLCmat    *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, ITS_param *itparam, INT NumLayers, dBLCmat *Ai, dCSRmat *local_A, ivector *local_index)
fasp_solver_dblc_pbcgs	base/src/KryPbcgs.c	/^INT fasp_solver_dblc_pbcgs (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_pcg	base/src/KryPcg.c	/^INT fasp_solver_dblc_pcg (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_pgcr	base/src/KryPgcr.c	/^INT fasp_solver_dblc_pgcr (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_pgmres	base/src/KryPgmres.c	/^INT fasp_solver_dblc_pgmres (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_pminres	base/src/KryPminres.c	/^INT fasp_solver_dblc_pminres (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_pvfgmres	base/src/KryPvfgmres.c	/^INT fasp_solver_dblc_pvfgmres (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_pvgmres	base/src/KryPvgmres.c	/^INT fasp_solver_dblc_pvgmres (dBLCmat     *A,$/;"	f	language:C	signature:(dBLCmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_spbcgs	base/src/KrySPbcgs.c	/^INT fasp_solver_dblc_spbcgs (const dBLCmat  *A,$/;"	f	language:C	signature:(const dBLCmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_spcg	base/src/KrySPcg.c	/^INT fasp_solver_dblc_spcg (const dBLCmat  *A,$/;"	f	language:C	signature:(const dBLCmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_spgmres	base/src/KrySPgmres.c	/^INT fasp_solver_dblc_spgmres (const dBLCmat  *A,$/;"	f	language:C	signature:(const dBLCmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_spminres	base/src/KrySPminres.c	/^INT fasp_solver_dblc_spminres (const dBLCmat  *A,$/;"	f	language:C	signature:(const dBLCmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dblc_spvgmres	base/src/KrySPvgmres.c	/^INT fasp_solver_dblc_spvgmres (const dBLCmat  *A,$/;"	f	language:C	signature:(const dBLCmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_itsolver	base/src/SolBSR.c	/^INT fasp_solver_dbsr_itsolver (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, precond *pc, ITS_param *itparam)
fasp_solver_dbsr_krylov	base/src/SolBSR.c	/^INT fasp_solver_dbsr_krylov (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dbsr_krylov_amg	base/src/SolBSR.c	/^INT fasp_solver_dbsr_krylov_amg (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam)
fasp_solver_dbsr_krylov_amg_nk	base/src/SolBSR.c	/^INT fasp_solver_dbsr_krylov_amg_nk (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam, dCSRmat *A_nk, dCSRmat *P_nk, dCSRmat *R_nk)
fasp_solver_dbsr_krylov_diag	base/src/SolBSR.c	/^INT fasp_solver_dbsr_krylov_diag (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dbsr_krylov_ilu	base/src/SolBSR.c	/^INT fasp_solver_dbsr_krylov_ilu (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, ITS_param *itparam, ILU_param *iluparam)
fasp_solver_dbsr_krylov_nk_amg	base/src/SolBSR.c	/^INT fasp_solver_dbsr_krylov_nk_amg (dBSRmat    *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam, const INT nk_dim, dvector *nk)
fasp_solver_dbsr_pbcgs	base/src/KryPbcgs.c	/^INT fasp_solver_dbsr_pbcgs (dBSRmat     *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_pcg	base/src/KryPcg.c	/^INT fasp_solver_dbsr_pcg (dBSRmat     *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_pgmres	base/src/KryPgmres.c	/^INT fasp_solver_dbsr_pgmres (dBSRmat     *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_pvfgmres	base/src/KryPvfgmres.c	/^INT fasp_solver_dbsr_pvfgmres (dBSRmat      *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_pvgmres	base/src/KryPvgmres.c	/^INT fasp_solver_dbsr_pvgmres (dBSRmat      *A,$/;"	f	language:C	signature:(dBSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_spbcgs	base/src/KrySPbcgs.c	/^INT fasp_solver_dbsr_spbcgs (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_spgmres	base/src/KrySPgmres.c	/^INT fasp_solver_dbsr_spgmres (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dbsr_spvgmres	base/src/KrySPvgmres.c	/^INT fasp_solver_dbsr_spvgmres (const dBSRmat  *A,$/;"	f	language:C	signature:(const dBSRmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_itsolver	base/src/SolCSR.c	/^INT fasp_solver_dcsr_itsolver (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, precond *pc, ITS_param *itparam)
fasp_solver_dcsr_itsolver_s	base/src/SolCSR.c	/^INT fasp_solver_dcsr_itsolver_s (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, precond *pc, ITS_param *itparam)
fasp_solver_dcsr_krylov	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dcsr_krylov_amg	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_amg (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam)
fasp_solver_dcsr_krylov_amg_nk	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_amg_nk (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam, AMG_param *amgparam, dCSRmat *A_nk, dCSRmat *P_nk, dCSRmat *R_nk)
fasp_solver_dcsr_krylov_diag	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_diag (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dcsr_krylov_ilu	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_ilu (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam, ILU_param *iluparam)
fasp_solver_dcsr_krylov_ilu_M	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_ilu_M (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam, ILU_param *iluparam, dCSRmat *M)
fasp_solver_dcsr_krylov_s	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_s (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dcsr_krylov_swz	base/src/SolCSR.c	/^INT fasp_solver_dcsr_krylov_swz (dCSRmat    *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, ITS_param *itparam, SWZ_param *schparam)
fasp_solver_dcsr_pbcgs	base/src/KryPbcgs.c	/^INT fasp_solver_dcsr_pbcgs (dCSRmat     *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pcg	base/src/KryPcg.c	/^INT fasp_solver_dcsr_pcg (dCSRmat     *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pgcg	base/src/KryPgcg.c	/^INT fasp_solver_dcsr_pgcg (dCSRmat     *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pgcr	base/src/KryPgcr.c	/^INT fasp_solver_dcsr_pgcr (dCSRmat     *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pgmres	base/src/KryPgmres.c	/^INT fasp_solver_dcsr_pgmres (dCSRmat     *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pminres	base/src/KryPminres.c	/^INT fasp_solver_dcsr_pminres (dCSRmat      *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pvfgmres	base/src/KryPvfgmres.c	/^INT fasp_solver_dcsr_pvfgmres (dCSRmat      *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_pvgmres	base/src/KryPvgmres.c	/^INT fasp_solver_dcsr_pvgmres (dCSRmat      *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_spbcgs	base/src/KrySPbcgs.c	/^INT fasp_solver_dcsr_spbcgs (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_spcg	base/src/KrySPcg.c	/^INT fasp_solver_dcsr_spcg (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_spgmres	base/src/KrySPgmres.c	/^INT fasp_solver_dcsr_spgmres (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_spminres	base/src/KrySPminres.c	/^INT fasp_solver_dcsr_spminres (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dcsr_spvgmres	base/src/KrySPvgmres.c	/^INT fasp_solver_dcsr_spvgmres (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_itsolver	base/src/SolSTR.c	/^INT fasp_solver_dstr_itsolver (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, precond *pc, ITS_param *itparam)
fasp_solver_dstr_krylov	base/src/SolSTR.c	/^INT fasp_solver_dstr_krylov (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dstr_krylov_blockgs	base/src/SolSTR.c	/^INT fasp_solver_dstr_krylov_blockgs (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, ITS_param *itparam, ivector *neigh, ivector *order)
fasp_solver_dstr_krylov_diag	base/src/SolSTR.c	/^INT fasp_solver_dstr_krylov_diag (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_dstr_krylov_ilu	base/src/SolSTR.c	/^INT fasp_solver_dstr_krylov_ilu (dSTRmat    *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, ITS_param *itparam, ILU_param *iluparam)
fasp_solver_dstr_pbcgs	base/src/KryPbcgs.c	/^INT fasp_solver_dstr_pbcgs (dSTRmat     *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_pcg	base/src/KryPcg.c	/^INT fasp_solver_dstr_pcg (dSTRmat     *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_pgmres	base/src/KryPgmres.c	/^INT fasp_solver_dstr_pgmres (dSTRmat     *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_pminres	base/src/KryPminres.c	/^INT fasp_solver_dstr_pminres (dSTRmat      *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_pvgmres	base/src/KryPvgmres.c	/^INT fasp_solver_dstr_pvgmres (dSTRmat      *A,$/;"	f	language:C	signature:(dSTRmat *A, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_spbcgs	base/src/KrySPbcgs.c	/^INT fasp_solver_dstr_spbcgs (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_spcg	base/src/KrySPcg.c	/^INT fasp_solver_dstr_spcg (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_spgmres	base/src/KrySPgmres.c	/^INT fasp_solver_dstr_spgmres (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_spminres	base/src/KrySPminres.c	/^INT fasp_solver_dstr_spminres (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, const dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_dstr_spvgmres	base/src/KrySPvgmres.c	/^INT fasp_solver_dstr_spvgmres (const dSTRmat  *A,$/;"	f	language:C	signature:(const dSTRmat *A, const dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_famg	base/src/SolFAMG.c	/^void fasp_solver_famg (const dCSRmat  *A,$/;"	f	language:C	signature:(const dCSRmat *A, const dvector *b, dvector *x, AMG_param *param)
fasp_solver_fmgcycle	base/src/PreMGCycleFull.c	/^void fasp_solver_fmgcycle (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_solver_itsolver	base/src/SolMatFree.c	/^INT fasp_solver_itsolver (mxv_matfree  *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *x, precond *pc, ITS_param *itparam)
fasp_solver_krylov	base/src/SolMatFree.c	/^INT fasp_solver_krylov (mxv_matfree  *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *x, ITS_param *itparam)
fasp_solver_matfree_init	base/src/SolMatFree.c	/^void fasp_solver_matfree_init (INT           matrix_format,$/;"	f	language:C	signature:(INT matrix_format, mxv_matfree *mf, void *A)
fasp_solver_mgcycle	base/src/PreMGCycle.c	/^void fasp_solver_mgcycle (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param)
fasp_solver_mgcycle_bsr	base/src/PreMGCycle.c	/^void fasp_solver_mgcycle_bsr (AMG_data_bsr  *mgl,$/;"	f	language:C	signature:(AMG_data_bsr *mgl, AMG_param *param)
fasp_solver_mgrecur	base/src/PreMGRecur.c	/^void fasp_solver_mgrecur (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param, INT level)
fasp_solver_mumps	base/extra/interface/XtrMumps.c	/^int fasp_solver_mumps (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, const SHORT prtlvl)
fasp_solver_mumps_steps	base/extra/interface/XtrMumps.c	/^int fasp_solver_mumps_steps (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, Mumps_data *mumps)
fasp_solver_namli	base/src/PreMGRecurAMLI.c	/^void fasp_solver_namli (AMG_data   *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, AMG_param *param, INT level, INT num_levels)
fasp_solver_namli_bsr	base/src/PreMGRecurAMLI.c	/^void fasp_solver_namli_bsr (AMG_data_bsr  *mgl,$/;"	f	language:C	signature:(AMG_data_bsr *mgl, AMG_param *param, INT level, INT num_levels)
fasp_solver_pardiso	base/extra/interface/XtrPardiso.c	/^INT fasp_solver_pardiso (dCSRmat * ptrA,$/;"	f	language:C	signature:(dCSRmat * ptrA, dvector *b, dvector *u, const SHORT prtlvl)
fasp_solver_pbcgs	base/src/KryPbcgs.c	/^INT fasp_solver_pbcgs (mxv_matfree *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_pcg	base/src/KryPcg.c	/^INT fasp_solver_pcg (mxv_matfree *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_pgcg	base/src/KryPgcg.c	/^INT fasp_solver_pgcg (mxv_matfree *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_pgmres	base/src/KryPgmres.c	/^INT fasp_solver_pgmres (mxv_matfree  *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_pminres	base/src/KryPminres.c	/^INT fasp_solver_pminres (mxv_matfree  *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *u, precond *pc, const REAL tol, const INT MaxIt, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_pvfgmres	base/src/KryPvfgmres.c	/^INT fasp_solver_pvfgmres (mxv_matfree  *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, const SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_pvgmres	base/src/KryPvgmres.c	/^INT fasp_solver_pvgmres (mxv_matfree  *mf,$/;"	f	language:C	signature:(mxv_matfree *mf, dvector *b, dvector *x, precond *pc, const REAL tol, const INT MaxIt, SHORT restart, const SHORT StopType, const SHORT PrtLvl)
fasp_solver_superlu	base/extra/interface/XtrSuperlu.c	/^int fasp_solver_superlu (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, const SHORT prtlvl)
fasp_solver_umfpack	base/extra/interface/XtrUmfpack.c	/^INT fasp_solver_umfpack (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, const SHORT prtlvl)
fasp_sortrow	base/src/BlaILU.c	/^static void fasp_sortrow (INT   num,$/;"	f	language:C	file:	signature:(INT num, INT *q)
fasp_sparse_aat_	base/src/BlaSparseUtil.c	/^void fasp_sparse_aat_ (INT  *ia,$/;"	f	language:C	signature:(INT *ia, INT *ja, REAL *a, INT *na, INT *ma, INT *iat, INT *jat, REAL *at)
fasp_sparse_abyb_	base/src/BlaSparseUtil.c	/^void fasp_sparse_abyb_ (INT  *ia,$/;"	f	language:C	signature:(INT *ia, INT *ja, REAL *a, INT *ib, INT *jb, REAL *b, INT *nap, INT *map, INT *mbp, INT *ic, INT *jc, REAL *c)
fasp_sparse_abybms_	base/src/BlaSparseUtil.c	/^void fasp_sparse_abybms_ (INT *ia,$/;"	f	language:C	signature:(INT *ia, INT *ja, INT *ib, INT *jb, INT *nap, INT *map, INT *mbp, INT *ic, INT *jc)
fasp_sparse_aplbms_	base/src/BlaSparseUtil.c	/^void fasp_sparse_aplbms_ (INT *ia,$/;"	f	language:C	signature:(INT *ia, INT *ja, INT *ib, INT *jb, INT *nab, INT *mab, INT *ic, INT *jc)
fasp_sparse_aplusb_	base/src/BlaSparseUtil.c	/^void fasp_sparse_aplusb_ (INT  *ia,$/;"	f	language:C	signature:(INT *ia, INT *ja, REAL *a, INT *ib, INT *jb, REAL *b, INT *nab, INT *mab, INT *ic, INT *jc, REAL *c)
fasp_sparse_iit_	base/src/BlaSparseUtil.c	/^void fasp_sparse_iit_ (INT *ia,$/;"	f	language:C	signature:(INT *ia, INT *ja, INT *na, INT *ma, INT *iat, INT *jat)
fasp_sparse_mis	base/src/BlaSparseUtil.c	/^ivector fasp_sparse_mis (dCSRmat *A)$/;"	f	language:C	signature:(dCSRmat *A)
fasp_sparse_rapcmp_	base/src/BlaSparseUtil.c	/^void fasp_sparse_rapcmp_ (INT  *ir,$/;"	f	language:C	signature:(INT *ir, INT *jr, REAL *r, INT *ia, INT *ja, REAL *a, INT *ipt, INT *jpt, REAL *pt, INT *nin, INT *ncin, INT *iac, INT *jac, REAL *ac, INT *idummy)
fasp_sparse_rapms_	base/src/BlaSparseUtil.c	/^void fasp_sparse_rapms_ (INT *ir,$/;"	f	language:C	signature:(INT *ir, INT *jr, INT *ia, INT *ja, INT *ip, INT *jp, INT *nin, INT *ncin, INT *iac, INT *jac, INT *maxrout)
fasp_sparse_wta_	base/src/BlaSparseUtil.c	/^void fasp_sparse_wta_ (INT  *jw,$/;"	f	language:C	signature:(INT *jw, REAL *w, INT *ia, INT *ja, REAL *a, INT *nwp, INT *map, INT *jv, REAL *v, INT *nvp)
fasp_sparse_wtams_	base/src/BlaSparseUtil.c	/^void fasp_sparse_wtams_ (INT *jw,$/;"	f	language:C	signature:(INT *jw, INT *ia, INT *ja, INT *nwp, INT *map, INT *jv, INT *nvp, INT *icp)
fasp_sparse_ytx_	base/src/BlaSparseUtil.c	/^void fasp_sparse_ytx_ (INT  *jy,$/;"	f	language:C	signature:(INT *jy, REAL *y, INT *jx, REAL *x, INT *nyp, INT *nxp, INT *icp, REAL *s)
fasp_sparse_ytxbig_	base/src/BlaSparseUtil.c	/^void fasp_sparse_ytxbig_ (INT  *jy,$/;"	f	language:C	signature:(INT *jy, REAL *y, INT *nyp, REAL *x, REAL *s)
fasp_swz_data_free	base/src/PreDataInit.c	/^void fasp_swz_data_free (SWZ_data *swzdata)$/;"	f	language:C	signature:(SWZ_data *swzdata)
fasp_swz_dcsr_setup	base/src/BlaSchwarzSetup.c	/^INT fasp_swz_dcsr_setup (SWZ_data   *swzdata,$/;"	f	language:C	signature:(SWZ_data *swzdata, SWZ_param *swzparam)
fasp_symbfactor	base/src/BlaILU.c	/^void fasp_symbfactor (INT   n,$/;"	f	language:C	signature:(INT n, INT *colind, INT *rwptr, INT levfill, INT nzmax, INT *nzlu, INT *ijlu, INT *uptr, INT *ierr)
fasp_umfpack_factorize	base/extra/interface/XtrUmfpack.c	/^void* fasp_umfpack_factorize (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, const SHORT prtlvl)
fasp_umfpack_free_numeric	base/extra/interface/XtrUmfpack.c	/^INT fasp_umfpack_free_numeric (void *Numeric)$/;"	f	language:C	signature:(void *Numeric)
fasp_umfpack_solve	base/extra/interface/XtrUmfpack.c	/^INT fasp_umfpack_solve (dCSRmat *ptrA,$/;"	f	language:C	signature:(dCSRmat *ptrA, dvector *b, dvector *u, void *Numeric, const SHORT prtlvl)
fasp_vector_read	base/src/BlaIO.c	/^void fasp_vector_read (const char *filerhs,$/;"	f	language:C	signature:(const char *filerhs, void *b)
fasp_vector_write	base/src/BlaIO.c	/^void fasp_vector_write (const char *filerhs,$/;"	f	language:C	signature:(const char *filerhs, void *b, const INT flag)
fct	base/include/fasp.h	/^    void (*fct)(REAL *, REAL *, void *);$/;"	m	language:C++	struct:__anon19
fct	base/include/fasp.h	/^    void (*fct)(const void *, const REAL *, REAL *);$/;"	m	language:C++	struct:__anon20
fct	include/fasp.h	/^    void (*fct)(REAL *, REAL *, void *);$/;"	m	language:C++	struct:__anon43
fct	include/fasp.h	/^    void (*fct)(const void *, const REAL *, REAL *);$/;"	m	language:C++	struct:__anon44
fd	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_chunk* fd;         \/* double links -- used only if free. *\/$/;"	m	language:C	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
fd	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_tree_chunk* fd;$/;"	m	language:C	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
fd	base/extra/include/malloc.c.h	/^  struct malloc_chunk* fd;         \/* double links -- used only if free. *\/$/;"	m	language:C++	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk
fd	base/extra/include/malloc.c.h	/^  struct malloc_tree_chunk* fd;$/;"	m	language:C++	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk
fflags	Makefile	/^		fflags="-Wall -g -DDEBUG_MODE=3 -DCHMEM_MODE=1"$/;"	m	language:Make
fflags	Makefile	/^	fflags="-Wall -g -DDEBUG_MODE=1"$/;"	m	language:Make
fflags	Makefile	/^	fflags="-Wall -g"$/;"	m	language:Make
flag_t	base/extra/dlmalloc/dlmalloc.c	/^typedef unsigned int flag_t;           \/* The type of various bit flag sets *\/$/;"	t	language:C	file:
flag_t	base/extra/include/malloc.c.h	/^typedef unsigned int flag_t;$/;"	t	language:C++
fm	base/extra/dlmalloc/dlmalloc.c	4830;"	d	language:C	file:
fm	base/extra/include/malloc.c.h	4949;"	d	language:C++
fmg1d	base/src/PreGMG.inl	/^static void fmg1d (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, REAL *b, const INT *level, const INT maxlevel, const INT nx)
fmg2d	base/src/PreGMG.inl	/^static void fmg2d (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, REAL *b, const INT *level, const INT maxlevel, const INT *nxk, const INT *nyk)
fmg3d	base/src/PreGMG.inl	/^static void fmg3d (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, REAL *b, const INT *level, const INT maxlevel, const INT *nxk, const INT *nyk, const INT *nzk)
footprint	base/extra/dlmalloc/dlmalloc.c	/^  size_t     footprint;$/;"	m	language:C	struct:malloc_state	file:
footprint	base/extra/include/malloc.c.h	/^  size_t     footprint;$/;"	m	language:C++	struct:malloc_state
fordblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	language:C	struct:mallinfo	file:
fordblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	language:C++	struct:mallinfo
fordblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	language:C++	struct:mallinfo
fordblks	base/extra/include/nedmalloc.h	/^  size_t fordblks; \/* total free space *\/$/;"	m	language:C++	struct:nedmallinfo
form_P_pattern_dir	base/src/PreAMGCoarsenRS.c	/^static void form_P_pattern_dir (dCSRmat   *P,$/;"	f	language:C	file:	signature:(dCSRmat *P, iCSRmat *S, ivector *vertices, INT row, INT col)
form_P_pattern_std	base/src/PreAMGCoarsenRS.c	/^static void form_P_pattern_std (dCSRmat   *P,$/;"	f	language:C	file:	signature:(dCSRmat *P, iCSRmat *S, ivector *vertices, INT row, INT col)
form_boolean_p	base/src/PreAMGAggregationUA.inl	/^static void form_boolean_p (const ivector  *vertices,$/;"	f	language:C++	file:	signature:(const ivector *vertices, dCSRmat *tentp, const INT NumAggregates)
form_boolean_p_bsr	base/src/PreAMGAggregationBSR.inl	/^static void form_boolean_p_bsr (const ivector       *vertices,$/;"	f	language:C++	file:	signature:(const ivector *vertices, dBSRmat *tentp, const AMG_data_bsr *mgl, const INT NumAggregates)
form_pairwise	base/src/PreAMGAggregationUA.inl	/^static void form_pairwise (const dCSRmat  *A,$/;"	f	language:C++	file:	signature:(const dCSRmat *A, const INT pair, const REAL k_tg, ivector *vertices, INT *NumAggregates)
form_tentative_p	base/src/PreAMGAggregationCSR.inl	/^static void form_tentative_p (ivector  *vertices,$/;"	f	language:C++	file:	signature:(ivector *vertices, dCSRmat *tentp, REAL **basis, INT NumAggregates)
form_tentative_p_bsr1	base/src/PreAMGAggregationBSR.inl	/^static void form_tentative_p_bsr1 (const ivector       *vertices,$/;"	f	language:C++	file:	signature:(const ivector *vertices, dBSRmat *tentp, const AMG_data_bsr *mgl, const INT NumAggregates, const INT dim, REAL **basis)
fsls_Band2CSRMatrix	test/src/FdmPoisson.c	/^fsls_Band2CSRMatrix (fsls_BandMatrix *B,$/;"	f	language:C	signature:(fsls_BandMatrix *B, fsls_CSRMatrix **A_ptr)
fsls_BandMatrix	test/include/poisson_fdm.h	/^} fsls_BandMatrix;$/;"	t	language:C++	typeref:struct:__anon24
fsls_BandMatrixCreate	test/src/FdmPoisson.c	/^fsls_BandMatrixCreate ( int n, int nband )$/;"	f	language:C	signature:( int n, int nband )
fsls_BandMatrixDataExt	test/include/poisson_fdm.h	102;"	d	language:C++
fsls_BandMatrixDestroy	test/src/FdmPoisson.c	/^fsls_BandMatrixDestroy (fsls_BandMatrix *matrix)$/;"	f	language:C	signature:(fsls_BandMatrix *matrix)
fsls_BandMatrixDiag	test/include/poisson_fdm.h	100;"	d	language:C++
fsls_BandMatrixInitialize	test/src/FdmPoisson.c	/^fsls_BandMatrixInitialize ( fsls_BandMatrix *matrix )$/;"	f	language:C	signature:( fsls_BandMatrix *matrix )
fsls_BandMatrixN	test/include/poisson_fdm.h	94;"	d	language:C++
fsls_BandMatrixNband	test/include/poisson_fdm.h	98;"	d	language:C++
fsls_BandMatrixNx	test/include/poisson_fdm.h	95;"	d	language:C++
fsls_BandMatrixNy	test/include/poisson_fdm.h	96;"	d	language:C++
fsls_BandMatrixNz	test/include/poisson_fdm.h	97;"	d	language:C++
fsls_BandMatrixOffdiag	test/include/poisson_fdm.h	101;"	d	language:C++
fsls_BandMatrixOffsets	test/include/poisson_fdm.h	99;"	d	language:C++
fsls_BuildLinearSystem_5pt2d	test/src/FdmPoisson.c	/^fsls_BuildLinearSystem_5pt2d (int               nt,$/;"	f	language:C	signature:(int nt, int nx, int ny, fsls_BandMatrix **A_ptr, fsls_XVector **f_ptr, fsls_XVector **u_ptr )
fsls_BuildLinearSystem_5pt2d_rb	test/src/FdmPoisson.c	/^fsls_BuildLinearSystem_5pt2d_rb (int               nt,$/;"	f	language:C	signature:(int nt, int nx, int ny, fsls_BandMatrix **A_ptr, fsls_XVector **f_ptr, fsls_XVector **u_ptr )
fsls_BuildLinearSystem_7pt3d	test/src/FdmPoisson.c	/^fsls_BuildLinearSystem_7pt3d (int               nt,$/;"	f	language:C	signature:(int nt, int nx, int ny, int nz, fsls_BandMatrix **A_ptr, fsls_XVector **f_ptr, fsls_XVector **u_ptr )
fsls_CAlloc	test/src/FdmPoisson.c	/^fsls_CAlloc ( size_t count, size_t elt_size )$/;"	f	language:C	signature:( size_t count, size_t elt_size )
fsls_COOMatrixPrint	test/src/FdmPoisson.c	/^fsls_COOMatrixPrint (fsls_CSRMatrix *matrix,$/;"	f	language:C	signature:(fsls_CSRMatrix *matrix, char *file_name )
fsls_CSR2FullMatrix	test/src/FdmPoisson.c	/^fsls_CSR2FullMatrix (fsls_CSRMatrix *A,$/;"	f	language:C	signature:(fsls_CSRMatrix *A, double **full_ptr)
fsls_CSRMatrix	test/include/poisson_fdm.h	/^} fsls_CSRMatrix;$/;"	t	language:C++	typeref:struct:__anon22
fsls_CSRMatrixCreate	test/src/FdmPoisson.c	/^fsls_CSRMatrixCreate (int num_rows,$/;"	f	language:C	signature:(int num_rows, int num_cols, int num_nonzeros)
fsls_CSRMatrixData	test/include/poisson_fdm.h	39;"	d	language:C++
fsls_CSRMatrixDeleteZeros	test/src/FdmPoisson.c	/^fsls_CSRMatrixDeleteZeros (fsls_CSRMatrix *A,$/;"	f	language:C	signature:(fsls_CSRMatrix *A, double tol)
fsls_CSRMatrixDestroy	test/src/FdmPoisson.c	/^fsls_CSRMatrixDestroy ( fsls_CSRMatrix *matrix )$/;"	f	language:C	signature:( fsls_CSRMatrix *matrix )
fsls_CSRMatrixI	test/include/poisson_fdm.h	40;"	d	language:C++
fsls_CSRMatrixInitialize	test/src/FdmPoisson.c	/^fsls_CSRMatrixInitialize ( fsls_CSRMatrix *matrix )$/;"	f	language:C	signature:( fsls_CSRMatrix *matrix )
fsls_CSRMatrixJ	test/include/poisson_fdm.h	41;"	d	language:C++
fsls_CSRMatrixNumCols	test/include/poisson_fdm.h	43;"	d	language:C++
fsls_CSRMatrixNumNonzeros	test/include/poisson_fdm.h	44;"	d	language:C++
fsls_CSRMatrixNumRownnz	test/include/poisson_fdm.h	46;"	d	language:C++
fsls_CSRMatrixNumRows	test/include/poisson_fdm.h	42;"	d	language:C++
fsls_CSRMatrixOwnsData	test/include/poisson_fdm.h	47;"	d	language:C++
fsls_CSRMatrixPrint	test/src/FdmPoisson.c	/^fsls_CSRMatrixPrint (fsls_CSRMatrix *matrix,$/;"	f	language:C	signature:(fsls_CSRMatrix *matrix, char *file_name )
fsls_CSRMatrixRownnz	test/include/poisson_fdm.h	45;"	d	language:C++
fsls_CTAlloc	test/include/poisson_fdm.h	20;"	d	language:C++
fsls_Free	test/src/FdmPoisson.c	/^fsls_Free ( char *ptr )$/;"	f	language:C	signature:( char *ptr )
fsls_MatrixSPGnuplot	test/src/FdmPoisson.c	/^fsls_MatrixSPGnuplot (fsls_CSRMatrix *matrix,$/;"	f	language:C	signature:(fsls_CSRMatrix *matrix, char *file_name )
fsls_OutOfMemory	test/src/FdmPoisson.c	/^fsls_OutOfMemory ( size_t size )$/;"	f	language:C	signature:( size_t size )
fsls_TFree	test/include/poisson_fdm.h	19;"	d	language:C++
fsls_Vector	test/include/poisson_fdm.h	/^} fsls_Vector;$/;"	t	language:C++	typeref:struct:__anon23
fsls_VectorData	test/include/poisson_fdm.h	60;"	d	language:C++
fsls_VectorIndexStride	test/include/poisson_fdm.h	66;"	d	language:C++
fsls_VectorMultiVecStorageMethod	test/include/poisson_fdm.h	64;"	d	language:C++
fsls_VectorNumVectors	test/include/poisson_fdm.h	63;"	d	language:C++
fsls_VectorOwnsData	test/include/poisson_fdm.h	62;"	d	language:C++
fsls_VectorSize	test/include/poisson_fdm.h	61;"	d	language:C++
fsls_VectorVectorStride	test/include/poisson_fdm.h	65;"	d	language:C++
fsls_WriteSAMGData	test/src/FdmPoisson.c	/^fsls_WriteSAMGData (fsls_CSRMatrix *A,$/;"	f	language:C	signature:(fsls_CSRMatrix *A, fsls_XVector *b, fsls_XVector *u)
fsls_XVector	test/include/poisson_fdm.h	/^} fsls_XVector;$/;"	t	language:C++	typeref:struct:__anon25
fsls_XVectorCreate	test/src/FdmPoisson.c	/^fsls_XVectorCreate (int size)$/;"	f	language:C	signature:(int size)
fsls_XVectorData	test/include/poisson_fdm.h	113;"	d	language:C++
fsls_XVectorDataExt	test/include/poisson_fdm.h	114;"	d	language:C++
fsls_XVectorDestroy	test/src/FdmPoisson.c	/^fsls_XVectorDestroy (fsls_XVector *vector)$/;"	f	language:C	signature:(fsls_XVector *vector)
fsls_XVectorInitialize	test/src/FdmPoisson.c	/^fsls_XVectorInitialize (fsls_XVector *vector)$/;"	f	language:C	signature:(fsls_XVector *vector)
fsls_XVectorPrint	test/src/FdmPoisson.c	/^fsls_XVectorPrint (fsls_XVector *vector,$/;"	f	language:C	signature:(fsls_XVector *vector, char *file_name)
fsls_XVectorSize	test/include/poisson_fdm.h	112;"	d	language:C++
fsls_dtMatrix	test/src/FdmPoisson.c	/^fsls_dtMatrix (double dt,$/;"	f	language:C	signature:(double dt, int n_rows, int n_cols, double *A_full)
fsls_max	test/include/poisson_fdm.h	17;"	d	language:C++
fsls_min	test/include/poisson_fdm.h	18;"	d	language:C++
fsmblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	language:C	struct:mallinfo	file:
fsmblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	language:C++	struct:mallinfo
fsmblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	language:C++	struct:mallinfo
fsmblks	base/extra/include/nedmalloc.h	/^  size_t fsmblks;  \/* always 0 *\/$/;"	m	language:C++	struct:nedmallinfo
generate_S_theta	base/src/BlaILUSetupBSR.c	/^static void generate_S_theta (dCSRmat *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, REAL theta)
generate_S_theta	base/src/multi_color.c	/^void generate_S_theta ( dCSRmat *A, $/;"	f	language:C	signature:( dCSRmat *A, iCSRmat *S, REAL theta )
genintval	base/src/PreAMGInterpEM.c	/^static SHORT genintval (dCSRmat  *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, INT **itmat, REAL **itmatval, INT ittniz, INT *isol, INT numiso, INT nf, INT nc)
gentisquare_nomass	base/src/PreAMGInterpEM.c	/^static SHORT gentisquare_nomass (dCSRmat  *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, INT mm, INT *Ii, REAL *ima, INT *mask)
get_block	base/src/PreAMGInterpEM.c	/^static SHORT get_block (dCSRmat  *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, INT m, INT n, INT *rows, INT *cols, REAL *Aloc, INT *mask)
get_foot	base/extra/dlmalloc/dlmalloc.c	2147;"	d	language:C	file:
get_foot	base/extra/include/malloc.c.h	2269;"	d	language:C++
get_l2_error_heat	test/src/FemHeatEqn.c	/^double get_l2_error_heat (ddenmat *node,$/;"	f	language:C	signature:(ddenmat *node, idenmat *elem, dvector *uh, int num_qp, double t)
get_l2_error_poisson	test/src/FemPoisson.c	/^double get_l2_error_poisson (ddenmat *node,$/;"	f	language:C	signature:(ddenmat *node, idenmat *elem, dvector *uh, int num_qp)
get_mstate_for	base/extra/dlmalloc/dlmalloc.c	2927;"	d	language:C	file:
get_mstate_for	base/extra/include/malloc.c.h	3028;"	d	language:C++
getinonefull	base/src/PreAMGInterpEM.c	/^static SHORT getinonefull (INT   **mat,$/;"	f	language:C	file:	signature:(INT **mat, REAL **matval, INT *lengths, INT mm, INT *Ii, REAL *ima)
getiteval	base/src/PreAMGInterpEM.c	/^static SHORT getiteval (dCSRmat  *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, dCSRmat *it)
gm	base/extra/dlmalloc/dlmalloc.c	2496;"	d	language:C	file:
gm	base/extra/include/malloc.c.h	2597;"	d	language:C++
gradBasisP1	test/src/FemBasis.inl	/^static void gradBasisP1 (double nodes[3][2], $/;"	f	language:C++	file:	signature:(double nodes[3][2], double s, int index, double phi[2])
granularity	base/extra/dlmalloc/dlmalloc.c	/^  size_t granularity;$/;"	m	language:C	struct:malloc_params	file:
granularity	base/extra/include/malloc.c.h	/^  size_t granularity;$/;"	m	language:C++	struct:malloc_params
granularity_align	base/extra/dlmalloc/dlmalloc.c	2528;"	d	language:C	file:
granularity_align	base/extra/include/malloc.c.h	2629;"	d	language:C++
grid2d	base/include/fasp_grid.h	/^typedef struct grid2d {$/;"	s	language:C++
grid2d	base/include/fasp_grid.h	/^} grid2d; \/**< 2D grid type for plotting *\/$/;"	t	language:C++	typeref:struct:grid2d
grid2d	include/fasp_grid.h	/^typedef struct grid2d {$/;"	s	language:C++
grid2d	include/fasp_grid.h	/^} grid2d; \/**< 2D grid type for plotting *\/$/;"	t	language:C++	typeref:struct:grid2d
gs2d_2color	base/src/PreGMG.inl	/^static void gs2d_2color (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, const REAL *b, const INT *level, const INT k, const INT maxlevel, const INT *nxk, const INT *nyk)
gs3d_2color	base/src/PreGMG.inl	/^static void gs3d_2color (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, const REAL *b, const INT *level, const INT k, const INT maxlevel, const INT *nxk, const INT *nyk, const INT *nzk)
has_segment_link	base/extra/dlmalloc/dlmalloc.c	/^static int has_segment_link(mstate m, msegmentptr ss) {$/;"	f	language:C	file:	signature:(mstate m, msegmentptr ss)
has_segment_link	base/extra/include/malloc.c.h	/^static int has_segment_link(mstate m, msegmentptr ss) {$/;"	f	language:C++	signature:(mstate m, msegmentptr ss)
hb_exact_read	base/extra/hb_io/XtrHBIO.c	/^void hb_exact_read ( FILE *input, int nrow, int nrhs, int rhscrd, $/;"	f	language:C	signature:( FILE *input, int nrow, int nrhs, int rhscrd, char *rhsfmt, char *rhstyp, double exact[] )
hb_exact_write	base/extra/hb_io/XtrHBIO.c	/^void hb_exact_write ( FILE *output, int nrow, int nrhs, int rhscrd, $/;"	f	language:C	signature:( FILE *output, int nrow, int nrhs, int rhscrd, char *rhsfmt, char *rhstyp, double exact[] )
hb_file_read	base/extra/hb_io/XtrHBIO.c	/^void hb_file_read ( FILE *input, char **title, char **key, int *totcrd, $/;"	f	language:C	signature:( FILE *input, char **title, char **key, int *totcrd, int *ptrcrd, int *indcrd, int *valcrd, int *rhscrd, char **mxtype, int *nrow, int *ncol, int *nnzero, int *neltvl, char **ptrfmt, char **indfmt, char **valfmt, char **rhsfmt, char **rhstyp, int *nrhs, int *nrhsix, int **colptr, int **rowind, double **values, double **rhsval, int **rhsptr, int **rhsind, double **rhsvec, double **guess, double **exact )
hb_file_write	base/extra/hb_io/XtrHBIO.c	/^void hb_file_write ( FILE *output, char *title, char *key, int totcrd, $/;"	f	language:C	signature:( FILE *output, char *title, char *key, int totcrd, int ptrcrd, int indcrd, int valcrd, int rhscrd, char *mxtype, int nrow, int ncol, int nnzero, int neltvl, char *ptrfmt, char *indfmt, char *valfmt, char *rhsfmt, char *rhstyp, int nrhs, int nrhsix, int colptr[], int rowind[], double values[], double rhsval[], int rhsptr[], int rhsind[], double rhsvec[], double guess[], double exact[] )
hb_guess_read	base/extra/hb_io/XtrHBIO.c	/^void hb_guess_read ( FILE *input, int nrow, int nrhs, int rhscrd, $/;"	f	language:C	signature:( FILE *input, int nrow, int nrhs, int rhscrd, char *rhsfmt, char *rhstyp, double guess[] )
hb_guess_write	base/extra/hb_io/XtrHBIO.c	/^void hb_guess_write ( FILE *output, int nrow, int nrhs, int rhscrd, $/;"	f	language:C	signature:( FILE *output, int nrow, int nrhs, int rhscrd, char *rhsfmt, char *rhstyp, double guess[] )
hb_header_print	base/extra/hb_io/XtrHBIO.c	/^void hb_header_print ( char *title, char *key, int totcrd, int ptrcrd, $/;"	f	language:C	signature:( char *title, char *key, int totcrd, int ptrcrd, int indcrd, int valcrd, int rhscrd, char *mxtype, int nrow, int ncol, int nnzero, int neltvl, char *ptrfmt, char *indfmt, char *valfmt, char *rhsfmt, char *rhstyp, int nrhs, int nrhsix )
hb_header_read	base/extra/hb_io/XtrHBIO.c	/^void hb_header_read ( FILE *input, char **title, char **key, int *totcrd, $/;"	f	language:C	signature:( FILE *input, char **title, char **key, int *totcrd, int *ptrcrd, int *indcrd, int *valcrd, int *rhscrd, char **mxtype, int *nrow, int *ncol, int *nnzero, int *neltvl, char **ptrfmt, char **indfmt, char **valfmt, char **rhsfmt, char **rhstyp, int *nrhs, int *nrhsix )
hb_header_write	base/extra/hb_io/XtrHBIO.c	/^void hb_header_write ( FILE *output, char *title, char *key, int totcrd, $/;"	f	language:C	signature:( FILE *output, char *title, char *key, int totcrd, int ptrcrd, int indcrd, int valcrd, int rhscrd, char *mxtype, int nrow, int ncol, int nnzero, int neltvl, char *ptrfmt, char *indfmt, char *valfmt, char *rhsfmt, char *rhstyp, int nrhs, int nrhsix )
hb_matvec_a_mem	base/extra/hb_io/XtrHBIO.c	/^double *hb_matvec_a_mem ( int nrow, int ncol, int nnzero, int nrhs, $/;"	f	language:C	signature:( int nrow, int ncol, int nnzero, int nrhs, int colptr[], int rowind[], double values[], double exact[] )
hb_rhs_read	base/extra/hb_io/XtrHBIO.c	/^void hb_rhs_read ( FILE *input, int nrow, int nnzero, int nrhs, int nrhsix, $/;"	f	language:C	signature:( FILE *input, int nrow, int nnzero, int nrhs, int nrhsix, int rhscrd, char *ptrfmt, char *indfmt, char *rhsfmt, char *mxtype, char *rhstyp, double rhsval[], int rhsind[], int rhsptr[], double rhsvec[] )
hb_rhs_write	base/extra/hb_io/XtrHBIO.c	/^void hb_rhs_write ( FILE *output, int nrow, int nnzero, int nrhs, int nrhsix, $/;"	f	language:C	signature:( FILE *output, int nrow, int nnzero, int nrhs, int nrhsix, int rhscrd, char *ptrfmt, char *indfmt, char *rhsfmt, char *mxtype, char *rhstyp, double rhsval[], int rhsind[], int rhsptr[], double rhsvec[] )
hb_structure_print	base/extra/hb_io/XtrHBIO.c	/^void hb_structure_print ( int ncol, char *mxtype, int nnzero, int neltvl, $/;"	f	language:C	signature:( int ncol, char *mxtype, int nnzero, int neltvl, int colptr[], int rowind[] )
hb_structure_read	base/extra/hb_io/XtrHBIO.c	/^void hb_structure_read ( FILE *input, int ncol, char *mxtype, int nnzero, $/;"	f	language:C	signature:( FILE *input, int ncol, char *mxtype, int nnzero, int neltvl, int ptrcrd, char *ptrfmt, int indcrd, char *indfmt, int colptr[], int rowind[] )
hb_structure_write	base/extra/hb_io/XtrHBIO.c	/^void hb_structure_write ( FILE *output, int ncol, char *mxtype, $/;"	f	language:C	signature:( FILE *output, int ncol, char *mxtype, int nnzero, int neltvl, char *ptrfmt, char *indfmt, int colptr[], int rowind[] )
hb_ua_colind	base/extra/hb_io/XtrHBIO.c	/^int *hb_ua_colind ( int ncol, int colptr[], int nnzero )$/;"	f	language:C	signature:( int ncol, int colptr[], int nnzero )
hb_values_print	base/extra/hb_io/XtrHBIO.c	/^void hb_values_print ( int ncol, int colptr[], char *mxtype, int nnzero, $/;"	f	language:C	signature:( int ncol, int colptr[], char *mxtype, int nnzero, int neltvl, double values[] )
hb_values_read	base/extra/hb_io/XtrHBIO.c	/^void hb_values_read ( FILE *input, int valcrd, char *mxtype, int nnzero,$/;"	f	language:C	signature:( FILE *input, int valcrd, char *mxtype, int nnzero, int neltvl, char *valfmt, double values[] )
hb_values_write	base/extra/hb_io/XtrHBIO.c	/^void hb_values_write ( FILE *output, int valcrd, char *mxtype, $/;"	f	language:C	signature:( FILE *output, int valcrd, char *mxtype, int nnzero, int neltvl, char *valfmt, double values[] )
hb_vecmat_a_mem	base/extra/hb_io/XtrHBIO.c	/^double *hb_vecmat_a_mem ( int nrow, int ncol, int nnzero, int nrhs, $/;"	f	language:C	signature:( int nrow, int ncol, int nnzero, int nrhs, int colptr[], int rowind[], double values[], double exact[] )
hblkhd	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	language:C	struct:mallinfo	file:
hblkhd	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	language:C++	struct:mallinfo
hblkhd	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	language:C++	struct:mallinfo
hblkhd	base/extra/include/nedmalloc.h	/^  size_t hblkhd;   \/* space in mmapped regions *\/$/;"	m	language:C++	struct:nedmallinfo
hblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	language:C	struct:mallinfo	file:
hblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	language:C++	struct:mallinfo
hblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	language:C++	struct:mallinfo
hblks	base/extra/include/nedmalloc.h	/^  size_t hblks;    \/* always 0 *\/$/;"	m	language:C++	struct:nedmallinfo
head	base/extra/dlmalloc/dlmalloc.c	/^  size_t                    head;$/;"	m	language:C	struct:malloc_tree_chunk	file:
head	base/extra/dlmalloc/dlmalloc.c	/^  size_t               head;       \/* Size and inuse bits. *\/$/;"	m	language:C	struct:malloc_chunk	file:
head	base/extra/include/malloc.c.h	/^  size_t                    head;$/;"	m	language:C++	struct:malloc_tree_chunk
head	base/extra/include/malloc.c.h	/^  size_t               head;       \/* Size and inuse bits. *\/$/;"	m	language:C++	struct:malloc_chunk
head	base/src/PreAMGUtil.inl	/^    INT head;$/;"	m	language:C++	struct:linked_list	file:
i	test/include/poisson_fdm.h	/^    int     *i;$/;"	m	language:C++	struct:__anon22
i	test/main/testf.f90	/^  in/;"	v	language:Fortran	program:test
i	tutorial/main/poisson-amg.f90	/^  in/;"	v	language:Fortran	program:test
i	tutorial/main/poisson-pcg.f90	/^  in/;"	v	language:Fortran	program:test
i4_max	base/extra/hb_io/XtrHBIO.c	/^int i4_max ( int i1, int i2 )$/;"	f	language:C	signature:( int i1, int i2 )
i4_min	base/extra/hb_io/XtrHBIO.c	/^int i4_min ( int i1, int i2 )$/;"	f	language:C	signature:( int i1, int i2 )
i4vec_print	base/extra/hb_io/XtrHBIO.c	/^void i4vec_print ( int n, int a[], char *title )$/;"	f	language:C	signature:( int n, int a[], char *title )
i4vec_print_part	base/extra/hb_io/XtrHBIO.c	/^void i4vec_print_part ( int n, int a[], int max_print, char *title )$/;"	f	language:C	signature:( int n, int a[], int max_print, char *title )
iBLCmat	base/include/fasp_block.h	/^typedef struct iBLCmat {$/;"	s	language:C++
iBLCmat	base/include/fasp_block.h	/^} iBLCmat; \/**< Matrix of INT type in Block CSR format *\/$/;"	t	language:C++	typeref:struct:iBLCmat
iBLCmat	include/fasp_block.h	/^typedef struct iBLCmat {$/;"	s	language:C++
iBLCmat	include/fasp_block.h	/^} iBLCmat; \/**< Matrix of INT type in Block CSR format *\/$/;"	t	language:C++	typeref:struct:iBLCmat
iCOOmat	base/include/fasp.h	/^typedef struct iCOOmat{$/;"	s	language:C++
iCOOmat	base/include/fasp.h	/^} iCOOmat; \/**< Sparse matrix of INT type in COO format *\/$/;"	t	language:C++	typeref:struct:iCOOmat
iCOOmat	include/fasp.h	/^typedef struct iCOOmat{$/;"	s	language:C++
iCOOmat	include/fasp.h	/^} iCOOmat; \/**< Sparse matrix of INT type in COO format *\/$/;"	t	language:C++	typeref:struct:iCOOmat
iCSRmat	base/include/fasp.h	/^typedef struct iCSRmat{$/;"	s	language:C++
iCSRmat	base/include/fasp.h	/^} iCSRmat; \/**< Sparse matrix of INT type in CSR format *\/$/;"	t	language:C++	typeref:struct:iCSRmat
iCSRmat	include/fasp.h	/^typedef struct iCSRmat{$/;"	s	language:C++
iCSRmat	include/fasp.h	/^} iCSRmat; \/**< Sparse matrix of INT type in CSR format *\/$/;"	t	language:C++	typeref:struct:iCSRmat
iSwapping	base/src/AuxSort.c	/^static void iSwapping (INT       *w,$/;"	f	language:C	file:	signature:(INT *w, const INT i, const INT j)
ia	test/main/testf.f90	/^  integer,          dimension(:), allocatable :: ia,/;"	v	language:Fortran	program:test
ia	tutorial/main/poisson-amg.f90	/^  integer,          dimension(:), allocatable :: ia,/;"	v	language:Fortran	program:test
ia	tutorial/main/poisson-pcg.f90	/^  integer,          dimension(:), allocatable :: ia,/;"	v	language:Fortran	program:test
ialloc	base/extra/dlmalloc/dlmalloc.c	/^static void** ialloc(mstate m,$/;"	f	language:C	file:	signature:(mstate m, size_t n_elements, size_t* sizes, int opts, void* chunks[])
ialloc	base/extra/include/malloc.c.h	/^static void** ialloc(mstate m,$/;"	f	language:C++	signature:(mstate m, size_t n_elements, size_t* sizes, int opts, void* chunks[])
iblock	base/include/fasp.h	/^    INT *iblock;$/;"	m	language:C++	struct:__anon14
iblock	include/fasp.h	/^    INT *iblock;$/;"	m	language:C++	struct:__anon38
ic	base/include/fasp.h	/^    INT *ic;$/;"	m	language:C++	struct:__anon13
ic	base/include/fasp.h	/^    INT *ic;$/;"	m	language:C++	struct:__anon15
ic	include/fasp.h	/^    INT *ic;$/;"	m	language:C++	struct:__anon37
ic	include/fasp.h	/^    INT *ic;$/;"	m	language:C++	struct:__anon39
icmap	base/include/fasp.h	/^    INT *icmap;$/;"	m	language:C++	struct:__anon13
icmap	base/include/fasp.h	/^    INT *icmap;$/;"	m	language:C++	struct:__anon15
icmap	include/fasp.h	/^    INT *icmap;$/;"	m	language:C++	struct:__anon37
icmap	include/fasp.h	/^    INT *icmap;$/;"	m	language:C++	struct:__anon39
icsr_output	test/src/FemAssemble.c	/^void icsr_output ( iCSRmat *t, iCSRmat *s )$/;"	f	language:C	signature:( iCSRmat *t, iCSRmat *s )
id	base/include/fasp.h	/^    DMUMPS_STRUC_C *id;$/;"	m	language:C++	struct:__anon14
id	base/include/fasp.h	/^    DMUMPS_STRUC_C id;$/;"	m	language:C++	struct:__anon11
id	include/fasp.h	/^    DMUMPS_STRUC_C *id;$/;"	m	language:C++	struct:__anon38
id	include/fasp.h	/^    DMUMPS_STRUC_C id;$/;"	m	language:C++	struct:__anon35
idenmat	base/include/fasp.h	/^typedef struct idenmat{$/;"	s	language:C++
idenmat	base/include/fasp.h	/^} idenmat; \/**< Dense matrix of INT type *\/$/;"	t	language:C++	typeref:struct:idenmat
idenmat	include/fasp.h	/^typedef struct idenmat{$/;"	s	language:C++
idenmat	include/fasp.h	/^} idenmat; \/**< Dense matrix of INT type *\/$/;"	t	language:C++	typeref:struct:idenmat
idx	test/include/heat_fem.h	/^    ivector dof, bd, idx;$/;"	m	language:C++	struct:Bd_apply_info
idx2bit	base/extra/dlmalloc/dlmalloc.c	2771;"	d	language:C	file:
idx2bit	base/extra/include/malloc.c.h	2872;"	d	language:C++
idxstride	test/include/poisson_fdm.h	/^    int      vecstride, idxstride;$/;"	m	language:C++	struct:__anon23
ijlu	base/include/fasp.h	/^    INT *ijlu;$/;"	m	language:C++	struct:__anon13
ijlu	include/fasp.h	/^    INT *ijlu;$/;"	m	language:C++	struct:__anon37
ilength	base/src/BlaIO.c	/^INT   ilength; \/**< Length of INT in byte *\/$/;"	v	language:C
ilevL	base/include/fasp.h	/^    INT *ilevL;$/;"	m	language:C++	struct:__anon13
ilevL	include/fasp.h	/^    INT *ilevL;$/;"	m	language:C++	struct:__anon37
ilevU	base/include/fasp.h	/^    INT *ilevU;$/;"	m	language:C++	struct:__anon13
ilevU	include/fasp.h	/^    INT *ilevU;$/;"	m	language:C++	struct:__anon37
ilu_solve_time	base/src/ItrSmootherBSR.c	/^REAL ilu_solve_time = 0.0; \/**< ILU time for the SOLVE phase *\/$/;"	v	language:C
index	base/extra/dlmalloc/dlmalloc.c	/^  bindex_t                  index;$/;"	m	language:C	struct:malloc_tree_chunk	file:
index	base/extra/include/malloc.c.h	/^  bindex_t                  index;$/;"	m	language:C++	struct:malloc_tree_chunk
index	base/include/fasp.h	/^    INT *index;$/;"	m	language:C++	struct:dCSRLmat
index	include/fasp.h	/^    INT *index;$/;"	m	language:C++	struct:dCSRLmat
indset	base/src/PreAMGCoarsenCR.c	/^static INT indset (INT   cand,$/;"	f	language:C	file:	signature:(INT cand, INT cpt, INT fpt, INT *ia, INT *ja, INT n, INT *cf, REAL *ma)
inifile	base/include/fasp.h	/^    char inifile[256];   \/**< ini file name *\/$/;"	m	language:C++	struct:__anon21
inifile	include/fasp.h	/^    char inifile[256];   \/**< ini file name *\/$/;"	m	language:C++	struct:__anon45
init_bins	base/extra/dlmalloc/dlmalloc.c	/^static void init_bins(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
init_bins	base/extra/include/malloc.c.h	/^static void init_bins(mstate m) {$/;"	f	language:C++	signature:(mstate m)
init_malloc_global_mutex	base/extra/dlmalloc/dlmalloc.c	/^static void init_malloc_global_mutex() {$/;"	f	language:C	file:
init_malloc_global_mutex	base/extra/include/malloc.c.h	/^static void init_malloc_global_mutex() {$/;"	f	language:C++	signature:()
init_mparams	base/extra/dlmalloc/dlmalloc.c	/^static int init_mparams(void) {$/;"	f	language:C	file:	signature:(void)
init_mparams	base/extra/include/malloc.c.h	/^static int init_mparams(void) {$/;"	f	language:C++	signature:(void)
init_top	base/extra/dlmalloc/dlmalloc.c	/^static void init_top(mstate m, mchunkptr p, size_t psize) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr p, size_t psize)
init_top	base/extra/include/malloc.c.h	/^static void init_top(mstate m, mchunkptr p, size_t psize) {$/;"	f	language:C++	signature:(mstate m, mchunkptr p, size_t psize)
init_user_mstate	base/extra/dlmalloc/dlmalloc.c	/^static mstate init_user_mstate(char* tbase, size_t tsize) {$/;"	f	language:C	file:	signature:(char* tbase, size_t tsize)
init_user_mstate	base/extra/include/malloc.c.h	/^static mstate init_user_mstate(char* tbase, size_t tsize) {$/;"	f	language:C++	signature:(char* tbase, size_t tsize)
innerproductxy	base/src/PreGMG.inl	/^static REAL innerproductxy (const REAL *x,$/;"	f	language:C++	file:	signature:(const REAL *x, const REAL *y, const INT *level, const INT k)
input_param	base/include/fasp.h	/^} input_param; \/**< Input parameters *\/$/;"	t	language:C++	typeref:struct:__anon21
input_param	include/fasp.h	/^} input_param; \/**< Input parameters *\/$/;"	t	language:C++	typeref:struct:__anon45
insert_chunk	base/extra/dlmalloc/dlmalloc.c	3626;"	d	language:C	file:
insert_chunk	base/extra/include/malloc.c.h	3745;"	d	language:C++
insert_large_chunk	base/extra/dlmalloc/dlmalloc.c	3485;"	d	language:C	file:
insert_large_chunk	base/extra/include/malloc.c.h	3604;"	d	language:C++
insert_small_chunk	base/extra/dlmalloc/dlmalloc.c	3412;"	d	language:C	file:
insert_small_chunk	base/extra/include/malloc.c.h	3531;"	d	language:C++
interlockedcompareexchange	base/extra/dlmalloc/dlmalloc.c	1362;"	d	language:C	file:
interlockedcompareexchange	base/extra/include/malloc.c.h	1382;"	d	language:C++
interlockedcompareexchange	base/extra/include/malloc.c.h	1386;"	d	language:C++
interlockedexchange	base/extra/dlmalloc/dlmalloc.c	1363;"	d	language:C	file:
interlockedexchange	base/extra/include/malloc.c.h	1383;"	d	language:C++
interlockedexchange	base/extra/include/malloc.c.h	1387;"	d	language:C++
internal_free	base/extra/dlmalloc/dlmalloc.c	3639;"	d	language:C	file:
internal_free	base/extra/dlmalloc/dlmalloc.c	3644;"	d	language:C	file:
internal_free	base/extra/dlmalloc/dlmalloc.c	3648;"	d	language:C	file:
internal_free	base/extra/include/malloc.c.h	3758;"	d	language:C++
internal_free	base/extra/include/malloc.c.h	3763;"	d	language:C++
internal_free	base/extra/include/malloc.c.h	3767;"	d	language:C++
internal_mallinfo	base/extra/dlmalloc/dlmalloc.c	/^static struct mallinfo internal_mallinfo(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
internal_mallinfo	base/extra/include/malloc.c.h	/^static struct mallinfo internal_mallinfo(mstate m) {$/;"	f	language:C++	signature:(mstate m)
internal_malloc	base/extra/dlmalloc/dlmalloc.c	3638;"	d	language:C	file:
internal_malloc	base/extra/dlmalloc/dlmalloc.c	3642;"	d	language:C	file:
internal_malloc	base/extra/dlmalloc/dlmalloc.c	3647;"	d	language:C	file:
internal_malloc	base/extra/include/malloc.c.h	3757;"	d	language:C++
internal_malloc	base/extra/include/malloc.c.h	3761;"	d	language:C++
internal_malloc	base/extra/include/malloc.c.h	3766;"	d	language:C++
internal_malloc_stats	base/extra/dlmalloc/dlmalloc.c	/^static void internal_malloc_stats(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
internal_malloc_stats	base/extra/include/malloc.c.h	/^static void internal_malloc_stats(mstate m) {$/;"	f	language:C++	signature:(mstate m)
internal_memalign	base/extra/dlmalloc/dlmalloc.c	/^static void* internal_memalign(mstate m, size_t alignment, size_t bytes) {$/;"	f	language:C	file:	signature:(mstate m, size_t alignment, size_t bytes)
internal_memalign	base/extra/include/malloc.c.h	/^static void* internal_memalign(mstate m, size_t alignment, size_t bytes) {$/;"	f	language:C++	signature:(mstate m, size_t alignment, size_t bytes)
internal_realloc	base/extra/dlmalloc/dlmalloc.c	/^static void* internal_realloc(mstate m, void* oldmem, size_t bytes) {$/;"	f	language:C	file:	signature:(mstate m, void* oldmem, size_t bytes)
internal_realloc	base/extra/include/malloc.c.h	/^static void* internal_realloc(mstate m, void* oldmem, size_t bytes) {$/;"	f	language:C++	signature:(mstate m, void* oldmem, size_t bytes)
interp_DIR	base/src/PreAMGInterp.c	/^static void interp_DIR (dCSRmat    *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, ivector *vertices, dCSRmat *P, AMG_param *param )
interp_EXT	base/src/PreAMGInterp.c	/^static void interp_EXT (dCSRmat    *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, ivector *vertices, dCSRmat *P, iCSRmat *S, AMG_param *param)
interp_STD	base/src/PreAMGInterp.c	/^static void interp_STD (dCSRmat    *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, ivector *vertices, dCSRmat *P, iCSRmat *S, AMG_param *param)
interpolation2d5pt	base/src/PreGMG.inl	/^static void interpolation2d5pt (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, const INT *level, const INT k, const INT *nxk, const INT *nyk)
interpolation3d7pt	base/src/PreGMG.inl	/^static void interpolation3d7pt (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, const INT *level, const INT k, const INT *nxk, const INT *nyk, const INT *nzk)
interpolation_type	base/include/fasp.h	/^    SHORT interpolation_type;$/;"	m	language:C++	struct:__anon10
interpolation_type	include/fasp.h	/^    SHORT interpolation_type;$/;"	m	language:C++	struct:__anon34
invden	base/src/PreAMGInterpEM.c	/^static SHORT invden (INT    nn,$/;"	f	language:C	file:	signature:(INT nn, REAL *mat, REAL *invmat)
invperm	base/src/ItrSmootherBSR.c	/^static inline void invperm (const INT    n,$/;"	f	language:C	file:	signature:(const INT n, const INT nb, const REAL *x, const INT *p, REAL *y)
iparm	base/include/fasp.h	/^    MKL_INT iparm[64];$/;"	m	language:C++	struct:__anon12
iparm	include/fasp.h	/^    MKL_INT iparm[64];$/;"	m	language:C++	struct:__anon36
iperm	base/include/fasp.h	/^    INT *iperm;$/;"	m	language:C++	struct:__anon13
iperm	include/fasp.h	/^    INT *iperm;$/;"	m	language:C++	struct:__anon37
is_aligned	base/extra/dlmalloc/dlmalloc.c	1456;"	d	language:C	file:
is_aligned	base/extra/include/malloc.c.h	1480;"	d	language:C++
is_extern_segment	base/extra/dlmalloc/dlmalloc.c	2344;"	d	language:C	file:
is_extern_segment	base/extra/include/malloc.c.h	2466;"	d	language:C++
is_global	base/extra/dlmalloc/dlmalloc.c	2497;"	d	language:C	file:
is_global	base/extra/include/malloc.c.h	2598;"	d	language:C++
is_granularity_aligned	base/extra/dlmalloc/dlmalloc.c	2545;"	d	language:C	file:
is_granularity_aligned	base/extra/include/malloc.c.h	2646;"	d	language:C++
is_initialized	base/extra/dlmalloc/dlmalloc.c	2501;"	d	language:C	file:
is_initialized	base/extra/include/malloc.c.h	2602;"	d	language:C++
is_inuse	base/extra/dlmalloc/dlmalloc.c	2128;"	d	language:C	file:
is_inuse	base/extra/include/malloc.c.h	2250;"	d	language:C++
is_mmapped	base/extra/dlmalloc/dlmalloc.c	2129;"	d	language:C	file:
is_mmapped	base/extra/include/malloc.c.h	2251;"	d	language:C++
is_mmapped_segment	base/extra/dlmalloc/dlmalloc.c	2343;"	d	language:C	file:
is_mmapped_segment	base/extra/include/malloc.c.h	2465;"	d	language:C++
is_page_aligned	base/extra/dlmalloc/dlmalloc.c	2543;"	d	language:C	file:
is_page_aligned	base/extra/include/malloc.c.h	2644;"	d	language:C++
is_small	base/extra/dlmalloc/dlmalloc.c	2679;"	d	language:C	file:
is_small	base/extra/include/malloc.c.h	2780;"	d	language:C++
itsolver_maxit	base/include/fasp.h	/^    INT itsolver_maxit;  \/**< maximal number of iterations for iterative solvers *\/$/;"	m	language:C++	struct:__anon21
itsolver_maxit	include/fasp.h	/^    INT itsolver_maxit;  \/**< maximal number of iterations for iterative solvers *\/$/;"	m	language:C++	struct:__anon45
itsolver_tol	base/include/fasp.h	/^    REAL itsolver_tol;   \/**< tolerance for iterative linear solver *\/$/;"	m	language:C++	struct:__anon21
itsolver_tol	include/fasp.h	/^    REAL itsolver_tol;   \/**< tolerance for iterative linear solver *\/$/;"	m	language:C++	struct:__anon45
itsolver_type	base/include/fasp.h	/^    SHORT itsolver_type; \/**< solver type: see fasp_const.h *\/$/;"	m	language:C++	struct:__anon7
itsolver_type	include/fasp.h	/^    SHORT itsolver_type; \/**< solver type: see fasp_const.h *\/$/;"	m	language:C++	struct:__anon31
iufile	test/main/testf.f90	/^  integer          :: iufile,/;"	v	language:Fortran	program:test
iufile	tutorial/main/poisson-amg.f90	/^  integer          :: iufile,/;"	v	language:Fortran	program:test
iufile	tutorial/main/poisson-pcg.f90	/^  integer          :: iufile,/;"	v	language:Fortran	program:test
ivec_output	test/src/FemAssemble.c	/^void ivec_output ( ivector *t, ivector *s )$/;"	f	language:C	signature:( ivector *t, ivector *s )
ivector	base/include/fasp.h	/^typedef struct ivector{$/;"	s	language:C++
ivector	base/include/fasp.h	/^} ivector; \/**< Vector of INT type *\/$/;"	t	language:C++	typeref:struct:ivector
ivector	include/fasp.h	/^typedef struct ivector{$/;"	s	language:C++
ivector	include/fasp.h	/^} ivector; \/**< Vector of INT type *\/$/;"	t	language:C++	typeref:struct:ivector
j	test/include/poisson_fdm.h	/^    int     *j;$/;"	m	language:C++	struct:__anon22
ja	base/include/fasp.h	/^    INT *ja;$/;"	m	language:C++	struct:dCSRLmat
ja	include/fasp.h	/^    INT *ja;$/;"	m	language:C++	struct:dCSRLmat
ja	test/main/testf.f90	/^  integer,          dimension(:), allocatable :: ia,ja$/;"	v	language:Fortran	program:test
ja	tutorial/main/poisson-amg.f90	/^  integer,          dimension(:), allocatable :: ia, ja$/;"	v	language:Fortran	program:test
ja	tutorial/main/poisson-pcg.f90	/^  integer,          dimension(:), allocatable :: ia,ja$/;"	v	language:Fortran	program:test
jblock	base/include/fasp.h	/^    INT *jblock;$/;"	m	language:C++	struct:__anon14
jblock	include/fasp.h	/^    INT *jblock;$/;"	m	language:C++	struct:__anon38
jlevL	base/include/fasp.h	/^    INT *jlevL;$/;"	m	language:C++	struct:__anon13
jlevL	include/fasp.h	/^    INT *jlevL;$/;"	m	language:C++	struct:__anon37
jlevU	base/include/fasp.h	/^    INT *jlevU;$/;"	m	language:C++	struct:__anon13
jlevU	include/fasp.h	/^    INT *jlevU;$/;"	m	language:C++	struct:__anon37
job	base/include/fasp.h	/^    INT job;$/;"	m	language:C++	struct:__anon11
job	include/fasp.h	/^    INT job;$/;"	m	language:C++	struct:__anon35
keepcost	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	language:C	struct:mallinfo	file:
keepcost	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	language:C++	struct:mallinfo
keepcost	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	language:C++	struct:mallinfo
keepcost	base/extra/include/nedmalloc.h	/^  size_t keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	language:C++	struct:nedmallinfo
l	base/extra/dlmalloc/dlmalloc.c	/^  volatile long l;$/;"	m	language:C	struct:win32_mlock_t	file:
l	base/extra/dlmalloc/dlmalloc.c	/^  volatile unsigned int l;$/;"	m	language:C	struct:pthread_mlock_t	file:
l	base/extra/include/malloc.c.h	/^  volatile long l;$/;"	m	language:C++	struct:win32_mlock_t
l	base/extra/include/malloc.c.h	/^  volatile unsigned int l;$/;"	m	language:C++	struct:pthread_mlock_t
l2norm	base/src/PreGMG.inl	/^static REAL l2norm (const REAL *r,$/;"	f	language:C++	file:	signature:(const REAL *r, const INT *level, const INT k)
largepagesavailable	base/extra/include/malloc.c.h	/^static int largepagesavailable = 1;$/;"	v	language:C++
lastAlignedmmap	base/extra/include/malloc.c.h	/^static void* lastAlignedmmap; \/* Used as a hint *\/$/;"	v	language:C++
lastWin32mmap	base/extra/include/malloc.c.h	/^static void* lastWin32mmap; \/* Used as a hint *\/$/;"	v	language:C++
least_addr	base/extra/dlmalloc/dlmalloc.c	/^  char*      least_addr;$/;"	m	language:C	struct:malloc_state	file:
least_addr	base/extra/include/malloc.c.h	/^  char*      least_addr;$/;"	m	language:C++	struct:malloc_state
least_bit	base/extra/dlmalloc/dlmalloc.c	2783;"	d	language:C	file:
least_bit	base/extra/include/malloc.c.h	2884;"	d	language:C++
left_bits	base/extra/dlmalloc/dlmalloc.c	2786;"	d	language:C	file:
left_bits	base/extra/include/malloc.c.h	2887;"	d	language:C++
leftmost_child	base/extra/dlmalloc/dlmalloc.c	2277;"	d	language:C	file:
leftmost_child	base/extra/include/malloc.c.h	2399;"	d	language:C++
leftshift_for_tree_index	base/extra/dlmalloc/dlmalloc.c	2758;"	d	language:C	file:
leftshift_for_tree_index	base/extra/include/malloc.c.h	2859;"	d	language:C++
linked_list	base/src/PreAMGUtil.inl	/^typedef struct linked_list$/;"	s	language:C++	file:
local_A	base/include/fasp_block.h	/^    dCSRmat *local_A;   \/**< local stiffness matrix for each layer *\/$/;"	m	language:C++	struct:__anon6
local_A	include/fasp_block.h	/^    dCSRmat *local_A;   \/**< local stiffness matrix for each layer *\/$/;"	m	language:C++	struct:__anon30
local_LU	base/include/fasp_block.h	/^    void **local_LU;    \/**< lcoal LU decomposition (for UMFpack) *\/$/;"	m	language:C++	struct:__anon6
local_LU	include/fasp_block.h	/^    void **local_LU;    \/**< lcoal LU decomposition (for UMFpack) *\/$/;"	m	language:C++	struct:__anon30
local_index	base/include/fasp_block.h	/^    ivector *local_index;  \/**< local index for each layer *\/$/;"	m	language:C++	struct:__anon6
local_index	include/fasp_block.h	/^    ivector *local_index;  \/**< local index for each layer *\/$/;"	m	language:C++	struct:__anon30
localb	test/src/FemHeatEqn.c	/^static void localb (double (*node)[2],$/;"	f	language:C	file:	signature:(double (*node)[2], double *b, int num_qp, int nt, double dt)
localb	test/src/FemPoisson.c	/^static void localb (double (*node)[DIM],$/;"	f	language:C	file:	signature:(double (*node)[DIM], double *b, int num_qp)
luval	base/include/fasp.h	/^    REAL *luval;$/;"	m	language:C++	struct:__anon13
luval	include/fasp.h	/^    REAL *luval;$/;"	m	language:C++	struct:__anon37
magic	base/extra/dlmalloc/dlmalloc.c	/^  size_t     magic;$/;"	m	language:C	struct:malloc_state	file:
magic	base/extra/dlmalloc/dlmalloc.c	/^  volatile size_t magic;$/;"	m	language:C	struct:malloc_params	file:
magic	base/extra/include/malloc.c.h	/^  size_t     magic;$/;"	m	language:C++	struct:malloc_state
magic	base/extra/include/malloc.c.h	/^  volatile size_t magic;$/;"	m	language:C++	struct:malloc_params
main	test/main/regression.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/regression_mf.c	/^int main (int argc, const char * argv[])$/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/regression_mm.c	/^int main (int argc, const char * argv[])$/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/test.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testbamg.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testblc.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testbsr.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testfdm2d.cpp	/^main( int argc, char *argv[])$/;"	f	language:C++	signature:( int argc, char *argv[])
main	test/main/testfdm3d.cpp	/^main( int argc, char *argv[])$/;"	f	language:C++	signature:( int argc, char *argv[])
main	test/main/testfem.c	/^int main (int argc, const char * argv[])$/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testgmg.c	/^int main (int argc, const char *argv[])$/;"	f	language:C	signature:(int argc, const char *argv[])
main	test/main/testgs.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testheat.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testmat.c	/^int main(int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testrap.c	/^int main(int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	test/main/testsmat.c	/^int main(int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	tutorial/main/poisson-amg.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	tutorial/main/poisson-gmg.c	/^int main (int argc, const char *argv[])$/;"	f	language:C	signature:(int argc, const char *argv[])
main	tutorial/main/poisson-its.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	tutorial/main/poisson-pcg.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
main	tutorial/main/spe01-its.c	/^int main (int argc, const char * argv[]) $/;"	f	language:C	signature:(int argc, const char * argv[])
mallinfo	base/extra/dlmalloc/dlmalloc.c	/^struct mallinfo {$/;"	s	language:C	file:
mallinfo	base/extra/include/dlmalloc.h	/^struct mallinfo {$/;"	s	language:C++
mallinfo	base/extra/include/malloc.c.h	/^struct mallinfo {$/;"	s	language:C++
malloc_chunk	base/extra/dlmalloc/dlmalloc.c	/^struct malloc_chunk {$/;"	s	language:C	file:
malloc_chunk	base/extra/include/malloc.c.h	/^struct malloc_chunk {$/;"	s	language:C++
malloc_corruption_error_count	base/extra/dlmalloc/dlmalloc.c	/^int malloc_corruption_error_count;$/;"	v	language:C
malloc_corruption_error_count	base/extra/include/malloc.c.h	/^int malloc_corruption_error_count;$/;"	v	language:C++
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1394;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1398;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1401;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1407;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1411;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1413;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1417;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1420;"	d	language:C	file:
malloc_getpagesize	base/extra/dlmalloc/dlmalloc.c	1422;"	d	language:C	file:
malloc_getpagesize	base/extra/include/malloc.c.h	1418;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1422;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1425;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1431;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1435;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1437;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1441;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1444;"	d	language:C++
malloc_getpagesize	base/extra/include/malloc.c.h	1446;"	d	language:C++
malloc_global_mutex	base/extra/dlmalloc/dlmalloc.c	/^static MLOCK_T malloc_global_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	language:C	file:
malloc_global_mutex	base/extra/dlmalloc/dlmalloc.c	/^static MLOCK_T malloc_global_mutex = { 0, 0, 0};$/;"	v	language:C	file:
malloc_global_mutex	base/extra/dlmalloc/dlmalloc.c	/^static MLOCK_T malloc_global_mutex;$/;"	v	language:C	file:
malloc_global_mutex	base/extra/include/malloc.c.h	/^static MLOCK_T malloc_global_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	language:C++
malloc_global_mutex	base/extra/include/malloc.c.h	/^static MLOCK_T malloc_global_mutex = { 0, "", 0, 0};$/;"	v	language:C++
malloc_global_mutex	base/extra/include/malloc.c.h	/^static MLOCK_T malloc_global_mutex = {0, "", 0, 0};$/;"	v	language:C++
malloc_global_mutex	base/extra/include/malloc.c.h	/^static MLOCK_T malloc_global_mutex;$/;"	v	language:C++
malloc_global_mutex_status	base/extra/dlmalloc/dlmalloc.c	/^static volatile long malloc_global_mutex_status;$/;"	v	language:C	file:
malloc_global_mutex_status	base/extra/include/malloc.c.h	/^static volatile long malloc_global_mutex_status;$/;"	v	language:C++
malloc_params	base/extra/dlmalloc/dlmalloc.c	/^struct malloc_params {$/;"	s	language:C	file:
malloc_params	base/extra/include/malloc.c.h	/^struct malloc_params {$/;"	s	language:C++
malloc_segment	base/extra/dlmalloc/dlmalloc.c	/^struct malloc_segment {$/;"	s	language:C	file:
malloc_segment	base/extra/include/malloc.c.h	/^struct malloc_segment {$/;"	s	language:C++
malloc_state	base/extra/dlmalloc/dlmalloc.c	/^struct malloc_state {$/;"	s	language:C	file:
malloc_state	base/extra/include/malloc.c.h	/^struct malloc_state {$/;"	s	language:C++
malloc_tree_chunk	base/extra/dlmalloc/dlmalloc.c	/^struct malloc_tree_chunk {$/;"	s	language:C	file:
malloc_tree_chunk	base/extra/include/malloc.c.h	/^struct malloc_tree_chunk {$/;"	s	language:C++
mark_inuse_foot	base/extra/dlmalloc/dlmalloc.c	2903;"	d	language:C	file:
mark_inuse_foot	base/extra/dlmalloc/dlmalloc.c	2924;"	d	language:C	file:
mark_inuse_foot	base/extra/include/malloc.c.h	3004;"	d	language:C++
mark_inuse_foot	base/extra/include/malloc.c.h	3025;"	d	language:C++
mark_smallmap	base/extra/dlmalloc/dlmalloc.c	2774;"	d	language:C	file:
mark_smallmap	base/extra/include/malloc.c.h	2875;"	d	language:C++
mark_treemap	base/extra/dlmalloc/dlmalloc.c	2778;"	d	language:C	file:
mark_treemap	base/extra/include/malloc.c.h	2879;"	d	language:C++
mask	base/include/fasp.h	/^    INT *mask;$/;"	m	language:C++	struct:__anon14
mask	include/fasp.h	/^    INT *mask;$/;"	m	language:C++	struct:__anon38
mat2coo	util/mat2coo.m	/^function mat2coo()$/;"	f	language:MatLab
max_aggregation	base/include/fasp.h	/^    INT max_aggregation;$/;"	m	language:C++	struct:__anon10
max_aggregation	include/fasp.h	/^    INT max_aggregation;$/;"	m	language:C++	struct:__anon34
max_footprint	base/extra/dlmalloc/dlmalloc.c	/^  size_t     max_footprint;$/;"	m	language:C	struct:malloc_state	file:
max_footprint	base/extra/include/malloc.c.h	/^  size_t     max_footprint;$/;"	m	language:C++	struct:malloc_state
max_levels	base/include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon10
max_levels	base/include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon15
max_levels	base/include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon16
max_levels	base/include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon17
max_levels	base/include/fasp_block.h	/^    INT max_levels;$/;"	m	language:C++	struct:__anon2
max_levels	base/include/fasp_block.h	/^    INT max_levels;$/;"	m	language:C++	struct:__anon4
max_levels	include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon34
max_levels	include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon39
max_levels	include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon40
max_levels	include/fasp.h	/^    SHORT max_levels;$/;"	m	language:C++	struct:__anon41
max_levels	include/fasp_block.h	/^    INT max_levels;$/;"	m	language:C++	struct:__anon26
max_levels	include/fasp_block.h	/^    INT max_levels;$/;"	m	language:C++	struct:__anon28
max_row_sum	base/include/fasp.h	/^    REAL max_row_sum;$/;"	m	language:C++	struct:__anon10
max_row_sum	include/fasp.h	/^    REAL max_row_sum;$/;"	m	language:C++	struct:__anon34
maxa	base/include/fasp.h	/^    INT *maxa;$/;"	m	language:C++	struct:__anon14
maxa	include/fasp.h	/^    INT *maxa;$/;"	m	language:C++	struct:__anon38
maxbs	base/include/fasp.h	/^    INT maxbs;$/;"	m	language:C++	struct:__anon14
maxbs	include/fasp.h	/^    INT maxbs;$/;"	m	language:C++	struct:__anon38
maxfct	base/include/fasp.h	/^    MKL_INT maxfct;$/;"	m	language:C++	struct:__anon12
maxfct	include/fasp.h	/^    MKL_INT maxfct;$/;"	m	language:C++	struct:__anon36
maxit	base/include/fasp.h	/^    INT   maxit;         \/**< max number of iterations *\/$/;"	m	language:C++	struct:__anon7
maxit	base/include/fasp.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon10
maxit	base/include/fasp.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon16
maxit	base/include/fasp.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon17
maxit	base/include/fasp_block.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon4
maxit	include/fasp.h	/^    INT   maxit;         \/**< max number of iterations *\/$/;"	m	language:C++	struct:__anon31
maxit	include/fasp.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon34
maxit	include/fasp.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon40
maxit	include/fasp.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon41
maxit	include/fasp_block.h	/^    INT maxit;$/;"	m	language:C++	struct:__anon28
maxit	test/main/testf.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl, maxit,/;"	v	language:Fortran	program:test
maxit	tutorial/main/poisson-amg.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl, maxit$/;"	v	language:Fortran	program:test
maxit	tutorial/main/poisson-pcg.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl, maxit$/;"	v	language:Fortran	program:test
mchunk	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_chunk  mchunk;$/;"	t	language:C	typeref:struct:malloc_chunk	file:
mchunk	base/extra/include/malloc.c.h	/^typedef struct malloc_chunk  mchunk;$/;"	t	language:C++	typeref:struct:malloc_chunk
mchunkptr	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_chunk* mchunkptr;$/;"	t	language:C	typeref:struct:malloc_chunk	file:
mchunkptr	base/extra/include/malloc.c.h	/^typedef struct malloc_chunk* mchunkptr;$/;"	t	language:C++	typeref:struct:malloc_chunk
mem2chunk	base/extra/dlmalloc/dlmalloc.c	2089;"	d	language:C	file:
mem2chunk	base/extra/include/malloc.c.h	2211;"	d	language:C++
memt	base/include/fasp.h	/^    INT memt;$/;"	m	language:C++	struct:__anon14
memt	include/fasp.h	/^    INT memt;$/;"	m	language:C++	struct:__anon38
meshIn	test/include/misc.h	/^    char meshIn[128];$/;"	m	language:C++	struct:FEM_param
meshOut	test/include/misc.h	/^    char meshOut[128];$/;"	m	language:C++	struct:FEM_param
mesh_aux_build	test/src/FemMesh.c	/^int mesh_aux_build(Mesh *mesh, Mesh_aux *mesh_aux)$/;"	f	language:C	signature:(Mesh *mesh, Mesh_aux *mesh_aux)
mesh_aux_free	test/src/FemMesh.c	/^int mesh_aux_free (Mesh_aux *mesh_aux)$/;"	f	language:C	signature:(Mesh_aux *mesh_aux)
mesh_aux_init	test/src/FemMesh.c	/^int mesh_aux_init (Mesh *mesh, Mesh_aux *mesh_aux, const char *filename)$/;"	f	language:C	signature:(Mesh *mesh, Mesh_aux *mesh_aux, const char *filename)
mesh_aux_init_pro	test/src/FemMesh.c	/^int mesh_aux_init_pro (Mesh *mesh, Mesh_aux *mesh_aux, const char *filename)$/;"	f	language:C	signature:(Mesh *mesh, Mesh_aux *mesh_aux, const char *filename)
mesh_aux_write	test/src/FemMesh.c	/^int mesh_aux_write (Mesh_aux *mesh_aux, const char *filename)$/;"	f	language:C	signature:(Mesh_aux *mesh_aux, const char *filename)
mesh_aux_write_pro	test/src/FemMesh.c	/^int mesh_aux_write_pro (Mesh_aux *mesh_aux, const char *filename)$/;"	f	language:C	signature:(Mesh_aux *mesh_aux, const char *filename)
mesh_free	test/src/FemMesh.c	/^int mesh_free (Mesh *mesh)$/;"	f	language:C	signature:(Mesh *mesh)
mesh_init	test/src/FemMesh.c	/^int mesh_init (Mesh *mesh, const char *filename)$/;"	f	language:C	signature:(Mesh *mesh, const char *filename)
mesh_init_pro	test/src/FemMesh.c	/^int mesh_init_pro (Mesh *mesh, const char *filename)$/;"	f	language:C	signature:(Mesh *mesh, const char *filename)
mesh_out	test/include/misc.h	/^    int mesh_out;$/;"	m	language:C++	struct:FEM_param
mesh_refine	test/src/FemMesh.c	/^int mesh_refine(Mesh *mesh, Mesh_aux *mesh_aux)$/;"	f	language:C	signature:(Mesh *mesh, Mesh_aux *mesh_aux)
mesh_write	test/src/FemMesh.c	/^int mesh_write (Mesh *mesh, const char *filename)$/;"	f	language:C	signature:(Mesh *mesh, const char *filename)
mesh_write_pro	test/src/FemMesh.c	/^int mesh_write_pro (Mesh *mesh, const char *filename)$/;"	f	language:C	signature:(Mesh *mesh, const char *filename)
mflags	base/extra/dlmalloc/dlmalloc.c	/^  flag_t     mflags;$/;"	m	language:C	struct:malloc_state	file:
mflags	base/extra/include/malloc.c.h	/^  flag_t     mflags;$/;"	m	language:C++	struct:malloc_state
mg1d	base/src/PreGMG.inl	/^static void mg1d (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, REAL *b, const INT *level, const INT startlevel, const INT maxlevel)
mg2d	base/src/PreGMG.inl	/^static void mg2d (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, REAL *b, const INT *level, const INT startlevel, const INT maxlevel, const INT *nxk, const INT *nyk)
mg3d	base/src/PreGMG.inl	/^static void mg3d (REAL       *u,$/;"	f	language:C++	file:	signature:(REAL *u, REAL *b, const INT *level, const INT startlevel, const INT maxlevel, const INT *nxk, const INT *nyk, const INT *nzk)
mgl	base/include/fasp_block.h	/^    AMG_data **mgl;       \/**< AMG data for the diagonal blocks *\/$/;"	m	language:C++	struct:__anon5
mgl	include/fasp_block.h	/^    AMG_data **mgl;       \/**< AMG data for the diagonal blocks *\/$/;"	m	language:C++	struct:__anon29
mgl_data	base/include/fasp.h	/^    AMG_data *mgl_data;$/;"	m	language:C++	struct:__anon16
mgl_data	base/include/fasp.h	/^    AMG_data *mgl_data;$/;"	m	language:C++	struct:__anon17
mgl_data	base/include/fasp_block.h	/^    AMG_data_bsr *mgl_data;$/;"	m	language:C++	struct:__anon4
mgl_data	include/fasp.h	/^    AMG_data *mgl_data;$/;"	m	language:C++	struct:__anon40
mgl_data	include/fasp.h	/^    AMG_data *mgl_data;$/;"	m	language:C++	struct:__anon41
mgl_data	include/fasp_block.h	/^    AMG_data_bsr *mgl_data;$/;"	m	language:C++	struct:__anon28
minsize_for_tree_index	base/extra/dlmalloc/dlmalloc.c	2763;"	d	language:C	file:
minsize_for_tree_index	base/extra/include/malloc.c.h	2864;"	d	language:C++
mkl_lib	test/Makefile	/^mkl_lib=-L \/opt\/intel\/composer_xe_2015.2.164\/mkl\/lib\/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl$/;"	m	language:Make
mmap_align	base/extra/dlmalloc/dlmalloc.c	2535;"	d	language:C	file:
mmap_align	base/extra/dlmalloc/dlmalloc.c	2537;"	d	language:C	file:
mmap_align	base/extra/include/malloc.c.h	2636;"	d	language:C++
mmap_align	base/extra/include/malloc.c.h	2638;"	d	language:C++
mmap_aligned	base/extra/include/malloc.c.h	/^static void* mmap_aligned(void *start, size_t length, int prot, int flags, int fd, off_t offset) {$/;"	f	language:C++	signature:(void *start, size_t length, int prot, int flags, int fd, off_t offset)
mmap_alloc	base/extra/dlmalloc/dlmalloc.c	/^static void* mmap_alloc(mstate m, size_t nb) {$/;"	f	language:C	file:	signature:(mstate m, size_t nb)
mmap_alloc	base/extra/include/malloc.c.h	/^static void* mmap_alloc(mstate m, size_t nb) {$/;"	f	language:C++	signature:(mstate m, size_t nb)
mmap_resize	base/extra/dlmalloc/dlmalloc.c	/^static mchunkptr mmap_resize(mstate m, mchunkptr oldp, size_t nb) {$/;"	f	language:C	file:	signature:(mstate m, mchunkptr oldp, size_t nb)
mmap_resize	base/extra/include/malloc.c.h	/^static mchunkptr mmap_resize(mstate m, mchunkptr oldp, size_t nb) {$/;"	f	language:C++	signature:(mstate m, mchunkptr oldp, size_t nb)
mmap_threshold	base/extra/dlmalloc/dlmalloc.c	/^  size_t mmap_threshold;$/;"	m	language:C	struct:malloc_params	file:
mmap_threshold	base/extra/include/malloc.c.h	/^  size_t mmap_threshold;$/;"	m	language:C++	struct:malloc_params
mnum	base/include/fasp.h	/^    MKL_INT mnum;$/;"	m	language:C++	struct:__anon12
mnum	include/fasp.h	/^    MKL_INT mnum;$/;"	m	language:C++	struct:__anon36
mparams	base/extra/dlmalloc/dlmalloc.c	/^static struct malloc_params mparams;$/;"	v	language:C	typeref:struct:malloc_params	file:
mparams	base/extra/include/malloc.c.h	/^static struct malloc_params mparams;$/;"	v	language:C++	typeref:struct:malloc_params
msegment	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_segment  msegment;$/;"	t	language:C	typeref:struct:malloc_segment	file:
msegment	base/extra/include/malloc.c.h	/^typedef struct malloc_segment  msegment;$/;"	t	language:C++	typeref:struct:malloc_segment
msegmentptr	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_segment* msegmentptr;$/;"	t	language:C	typeref:struct:malloc_segment	file:
msegmentptr	base/extra/include/malloc.c.h	/^typedef struct malloc_segment* msegmentptr;$/;"	t	language:C++	typeref:struct:malloc_segment
mspace	base/extra/dlmalloc/dlmalloc.c	/^typedef void* mspace;$/;"	t	language:C	file:
mspace	base/extra/include/dlmalloc.h	/^typedef void* mspace;$/;"	t	language:C++
mspace	base/extra/include/malloc.c.h	/^typedef void* mspace;$/;"	t	language:C++
mspace_calloc	base/extra/dlmalloc/dlmalloc.c	/^void* mspace_calloc(mspace msp, size_t n_elements, size_t elem_size) {$/;"	f	language:C	signature:(mspace msp, size_t n_elements, size_t elem_size)
mspace_calloc	base/extra/include/malloc.c.h	/^void* mspace_calloc(mspace msp, size_t n_elements, size_t elem_size) {$/;"	f	language:C++	signature:(mspace msp, size_t n_elements, size_t elem_size)
mspace_footprint	base/extra/dlmalloc/dlmalloc.c	/^size_t mspace_footprint(mspace msp) {$/;"	f	language:C	signature:(mspace msp)
mspace_footprint	base/extra/include/malloc.c.h	/^size_t mspace_footprint(mspace msp) {$/;"	f	language:C++	signature:(mspace msp)
mspace_free	base/extra/dlmalloc/dlmalloc.c	/^void mspace_free(mspace msp, void* mem) {$/;"	f	language:C	signature:(mspace msp, void* mem)
mspace_free	base/extra/include/malloc.c.h	/^void mspace_free(mspace msp, void* mem) {$/;"	f	language:C++	signature:(mspace msp, void* mem)
mspace_independent_calloc	base/extra/dlmalloc/dlmalloc.c	/^void** mspace_independent_calloc(mspace msp, size_t n_elements,$/;"	f	language:C	signature:(mspace msp, size_t n_elements, size_t elem_size, void* chunks[])
mspace_independent_calloc	base/extra/include/malloc.c.h	/^void** mspace_independent_calloc(mspace msp, size_t n_elements,$/;"	f	language:C++	signature:(mspace msp, size_t n_elements, size_t elem_size, void* chunks[])
mspace_independent_comalloc	base/extra/dlmalloc/dlmalloc.c	/^void** mspace_independent_comalloc(mspace msp, size_t n_elements,$/;"	f	language:C	signature:(mspace msp, size_t n_elements, size_t sizes[], void* chunks[])
mspace_independent_comalloc	base/extra/include/malloc.c.h	/^void** mspace_independent_comalloc(mspace msp, size_t n_elements,$/;"	f	language:C++	signature:(mspace msp, size_t n_elements, size_t sizes[], void* chunks[])
mspace_mallinfo	base/extra/dlmalloc/dlmalloc.c	/^struct mallinfo mspace_mallinfo(mspace msp) {$/;"	f	language:C	signature:(mspace msp)
mspace_mallinfo	base/extra/include/malloc.c.h	/^struct mallinfo mspace_mallinfo(mspace msp) {$/;"	f	language:C++	signature:(mspace msp)
mspace_malloc	base/extra/dlmalloc/dlmalloc.c	/^void* mspace_malloc(mspace msp, size_t bytes) {$/;"	f	language:C	signature:(mspace msp, size_t bytes)
mspace_malloc	base/extra/include/malloc.c.h	/^void* mspace_malloc(mspace msp, size_t bytes) {$/;"	f	language:C++	signature:(mspace msp, size_t bytes)
mspace_malloc_stats	base/extra/dlmalloc/dlmalloc.c	/^void mspace_malloc_stats(mspace msp) {$/;"	f	language:C	signature:(mspace msp)
mspace_malloc_stats	base/extra/include/malloc.c.h	/^void mspace_malloc_stats(mspace msp) {$/;"	f	language:C++	signature:(mspace msp)
mspace_mallopt	base/extra/dlmalloc/dlmalloc.c	/^int mspace_mallopt(int param_number, int value) {$/;"	f	language:C	signature:(int param_number, int value)
mspace_mallopt	base/extra/include/malloc.c.h	/^int mspace_mallopt(int param_number, int value) {$/;"	f	language:C++	signature:(int param_number, int value)
mspace_max_footprint	base/extra/dlmalloc/dlmalloc.c	/^size_t mspace_max_footprint(mspace msp) {$/;"	f	language:C	signature:(mspace msp)
mspace_max_footprint	base/extra/include/malloc.c.h	/^size_t mspace_max_footprint(mspace msp) {$/;"	f	language:C++	signature:(mspace msp)
mspace_memalign	base/extra/dlmalloc/dlmalloc.c	/^void* mspace_memalign(mspace msp, size_t alignment, size_t bytes) {$/;"	f	language:C	signature:(mspace msp, size_t alignment, size_t bytes)
mspace_memalign	base/extra/include/malloc.c.h	/^void* mspace_memalign(mspace msp, size_t alignment, size_t bytes) {$/;"	f	language:C++	signature:(mspace msp, size_t alignment, size_t bytes)
mspace_realloc	base/extra/dlmalloc/dlmalloc.c	/^void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {$/;"	f	language:C	signature:(mspace msp, void* oldmem, size_t bytes)
mspace_realloc	base/extra/include/malloc.c.h	/^void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {$/;"	f	language:C++	signature:(mspace msp, void* oldmem, size_t bytes)
mspace_track_large_chunks	base/extra/dlmalloc/dlmalloc.c	/^int mspace_track_large_chunks(mspace msp, int enable) {$/;"	f	language:C	signature:(mspace msp, int enable)
mspace_track_large_chunks	base/extra/include/malloc.c.h	/^int mspace_track_large_chunks(mspace msp, int enable) {$/;"	f	language:C++	signature:(mspace msp, int enable)
mspace_trim	base/extra/dlmalloc/dlmalloc.c	/^int mspace_trim(mspace msp, size_t pad) {$/;"	f	language:C	signature:(mspace msp, size_t pad)
mspace_trim	base/extra/include/malloc.c.h	/^int mspace_trim(mspace msp, size_t pad) {$/;"	f	language:C++	signature:(mspace msp, size_t pad)
mspace_usable_size	base/extra/dlmalloc/dlmalloc.c	/^size_t mspace_usable_size(void* mem) {$/;"	f	language:C	signature:(void* mem)
mspace_usable_size	base/extra/include/malloc.c.h	/^size_t mspace_usable_size(void* mem) {$/;"	f	language:C++	signature:(void* mem)
mstate	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_state*    mstate;$/;"	t	language:C	typeref:struct:malloc_state	file:
mstate	base/extra/include/malloc.c.h	/^typedef struct malloc_state*    mstate;$/;"	t	language:C++	typeref:struct:malloc_state
mtype	base/include/fasp.h	/^    MKL_INT mtype;$/;"	m	language:C++	struct:__anon12
mtype	include/fasp.h	/^    MKL_INT mtype;$/;"	m	language:C++	struct:__anon36
mulcol_independ_set	base/src/BlaILUSetupBSR.c	/^void mulcol_independ_set (AMG_data *mgl,$/;"	f	language:C	signature:(AMG_data *mgl, INT gslvl)
multicoloring	base/src/BlaILUSetupBSR.c	/^static void multicoloring (AMG_data *mgl,$/;"	f	language:C	file:	signature:(AMG_data *mgl, REAL theta, INT *rowmax, INT *groups)
multicolors_independent_set	base/src/multi_color.c	/^void multicolors_independent_set(AMG_data *mgl, INT gslvl)$/;"	f	language:C	signature:(AMG_data *mgl, INT gslvl)
multivec_storage_method	test/include/poisson_fdm.h	/^    int      multivec_storage_method;$/;"	m	language:C++	struct:__anon23
mumps	FASP.mk	/^ mumps=yes$/;"	m	language:Make
mumps	base/include/fasp.h	/^    Mumps_data *mumps;$/;"	m	language:C++	struct:__anon14
mumps	base/include/fasp.h	/^    Mumps_data mumps;$/;"	m	language:C++	struct:__anon15
mumps	base/include/fasp_block.h	/^    Mumps_data mumps;$/;"	m	language:C++	struct:__anon2
mumps	include/fasp.h	/^    Mumps_data *mumps;$/;"	m	language:C++	struct:__anon38
mumps	include/fasp.h	/^    Mumps_data mumps;$/;"	m	language:C++	struct:__anon39
mumps	include/fasp_block.h	/^    Mumps_data mumps;$/;"	m	language:C++	struct:__anon26
mumps_dir	FASP.mk	/^ mumps_dir="\/opt\/MUMPS_4.10.0.ifort"$/;"	m	language:Make
mutex	base/extra/dlmalloc/dlmalloc.c	/^  MLOCK_T    mutex;     \/* locate lock among fields that rarely change *\/$/;"	m	language:C	struct:malloc_state	file:
mutex	base/extra/include/malloc.c.h	/^  MLOCK_T    mutex;     \/* locate lock among fields that rarely change *\/$/;"	m	language:C++	struct:malloc_state
mxv_matfree	base/include/fasp.h	/^} mxv_matfree; \/**< Data for general matrix passed to iterative solvers *\/$/;"	t	language:C++	typeref:struct:__anon20
mxv_matfree	include/fasp.h	/^} mxv_matfree; \/**< Data for general matrix passed to iterative solvers *\/$/;"	t	language:C++	typeref:struct:__anon44
mytime	test/include/poisson_fdm.h	14;"	d	language:C++
n	test/include/poisson_fdm.h	/^    int      n;    \/**< @brief order of the matrix *\/$/;"	m	language:C++	struct:__anon24
n	test/main/testf.f90	/^  int/;"	v	language:Fortran	program:test
n	tutorial/main/poisson-amg.f90	/^  int/;"	v	language:Fortran	program:test
n	tutorial/main/poisson-pcg.f90	/^  int/;"	v	language:Fortran	program:test
nb	base/include/fasp.h	/^    INT nb;$/;"	m	language:C++	struct:__anon13
nb	base/include/fasp_block.h	/^    INT nb; \/\/ NOTE: for the moment, allow nb*nb full block$/;"	m	language:C++	struct:dBSRmat
nb	base/include/fasp_block.h	/^    INT nb;$/;"	m	language:C++	struct:__anon3
nb	include/fasp.h	/^    INT nb;$/;"	m	language:C++	struct:__anon37
nb	include/fasp_block.h	/^    INT nb; \/\/ NOTE: for the moment, allow nb*nb full block$/;"	m	language:C++	struct:dBSRmat
nb	include/fasp_block.h	/^    INT nb;$/;"	m	language:C++	struct:__anon27
nband	base/include/fasp.h	/^    INT nband;$/;"	m	language:C++	struct:dSTRmat
nband	include/fasp.h	/^    INT nband;$/;"	m	language:C++	struct:dSTRmat
nband	test/include/poisson_fdm.h	/^    int      nband; \/**< @brief the number of offdiagonal bands *\/$/;"	m	language:C++	struct:__anon24
nblk	base/include/fasp.h	/^    INT nblk;$/;"	m	language:C++	struct:__anon14
nblk	include/fasp.h	/^    INT nblk;$/;"	m	language:C++	struct:__anon38
nc	base/include/fasp.h	/^    INT nc;$/;"	m	language:C++	struct:__anon18
nc	base/include/fasp.h	/^    INT nc;$/;"	m	language:C++	struct:dSTRmat
nc	include/fasp.h	/^    INT nc;$/;"	m	language:C++	struct:__anon42
nc	include/fasp.h	/^    INT nc;$/;"	m	language:C++	struct:dSTRmat
ncolors	base/include/fasp.h	/^    INT ncolors;$/;"	m	language:C++	struct:__anon13
ncolors	include/fasp.h	/^    INT ncolors;$/;"	m	language:C++	struct:__anon37
near_kernel_basis	base/include/fasp.h	/^    REAL **near_kernel_basis;$/;"	m	language:C++	struct:__anon15
near_kernel_basis	base/include/fasp_block.h	/^    REAL **near_kernel_basis;$/;"	m	language:C++	struct:__anon2
near_kernel_basis	include/fasp.h	/^    REAL **near_kernel_basis;$/;"	m	language:C++	struct:__anon39
near_kernel_basis	include/fasp_block.h	/^    REAL **near_kernel_basis;$/;"	m	language:C++	struct:__anon26
near_kernel_dim	base/include/fasp.h	/^    INT near_kernel_dim;$/;"	m	language:C++	struct:__anon15
near_kernel_dim	base/include/fasp_block.h	/^    INT near_kernel_dim;$/;"	m	language:C++	struct:__anon2
near_kernel_dim	include/fasp.h	/^    INT near_kernel_dim;$/;"	m	language:C++	struct:__anon39
near_kernel_dim	include/fasp_block.h	/^    INT near_kernel_dim;$/;"	m	language:C++	struct:__anon26
nedalloc	base/extra/include/nedmalloc.h	/^namespace nedalloc {$/;"	n	language:C++
nedblksize	base/extra/include/nedmalloc.h	160;"	d	language:C++
nedcalloc	base/extra/include/nedmalloc.h	148;"	d	language:C++
nedfree	base/extra/include/nedmalloc.h	150;"	d	language:C++
nedindependent_calloc	base/extra/include/nedmalloc.h	157;"	d	language:C++
nedindependent_comalloc	base/extra/include/nedmalloc.h	158;"	d	language:C++
nedmallinfo	base/extra/include/nedmalloc.h	/^struct nedmallinfo {$/;"	s	language:C++
nedmallinfo	base/extra/include/nedmalloc.h	152;"	d	language:C++
nedmalloc	base/extra/include/nedmalloc.h	147;"	d	language:C++
nedmalloc_footprint	base/extra/include/nedmalloc.h	156;"	d	language:C++
nedmalloc_stats	base/extra/include/nedmalloc.h	155;"	d	language:C++
nedmalloc_trim	base/extra/include/nedmalloc.h	154;"	d	language:C++
nedmallopt	base/extra/include/nedmalloc.h	153;"	d	language:C++
nedmemalign	base/extra/include/nedmalloc.h	151;"	d	language:C++
nedpool	base/extra/include/nedmalloc.h	/^typedef struct nedpool_t nedpool;$/;"	t	language:C++	namespace:nedalloc	typeref:struct:nedalloc::nedpool_t
nedrealloc	base/extra/include/nedmalloc.h	149;"	d	language:C++
neigh	base/include/fasp.h	/^    ivector *neigh;$/;"	m	language:C++	struct:__anon17
neigh	include/fasp.h	/^    ivector *neigh;$/;"	m	language:C++	struct:__anon41
next	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_segment* next;   \/* ptr to next segment *\/$/;"	m	language:C	struct:malloc_segment	typeref:struct:malloc_segment::malloc_segment	file:
next	base/extra/include/malloc.c.h	/^  struct malloc_segment* next;   \/* ptr to next segment *\/$/;"	m	language:C++	struct:malloc_segment	typeref:struct:malloc_segment::malloc_segment
next	base/src/PreAMGUtil.inl	/^    INT next;$/;"	m	language:C++	struct:__anon1	file:
next_chunk	base/extra/dlmalloc/dlmalloc.c	2140;"	d	language:C	file:
next_chunk	base/extra/include/malloc.c.h	2262;"	d	language:C++
next_node	base/src/PreAMGUtil.inl	/^    struct linked_list *next_node;$/;"	m	language:C++	struct:linked_list	typeref:struct:linked_list::linked_list	file:
next_pinuse	base/extra/dlmalloc/dlmalloc.c	2144;"	d	language:C	file:
next_pinuse	base/extra/include/malloc.c.h	2266;"	d	language:C++
nfail	test/main/regression.c	/^unsigned INT  nfail;    \/**< number of failed tests *\/$/;"	v	language:C
nfail	test/main/regression_mf.c	/^unsigned INT  nfail;    \/**< number of failed tests *\/$/;"	v	language:C
nfail	test/main/regression_mm.c	/^unsigned INT  nfail[num_solvers];       \/**< number of failed tests without preconditioner *\/$/;"	v	language:C
nfail_amg	test/main/regression_mm.c	/^unsigned INT  nfail_amg[num_solvers];   \/**< number of failed tests for AMG preconditioner *\/$/;"	v	language:C
nfail_amg_solver	test/main/regression_mm.c	/^unsigned INT  nfail_amg_solver;         \/**< number of failed tests for AMG solver *\/$/;"	v	language:C
nfail_diag	test/main/regression_mm.c	/^unsigned INT  nfail_diag[num_solvers];  \/**< number of failed tests for diag preconditioner *\/$/;"	v	language:C
nfail_iluk	test/main/regression_mm.c	/^unsigned INT  nfail_iluk[num_solvers];  \/**< number of failed tests for ILUk preconditioner *\/$/;"	v	language:C
nfail_ilut	test/main/regression_mm.c	/^unsigned INT  nfail_ilut[num_solvers];  \/**< number of failed tests for ILUt preconditioner *\/$/;"	v	language:C
nfail_ilutp	test/main/regression_mm.c	/^unsigned INT  nfail_ilutp[num_solvers]; \/**< number of failed tests for ILUtp preconditioner *\/$/;"	v	language:C
ngrid	base/include/fasp.h	/^    INT ngrid;$/;"	m	language:C++	struct:dSTRmat
ngrid	include/fasp.h	/^    INT ngrid;$/;"	m	language:C++	struct:dSTRmat
nl_amli_krylov_type	base/include/fasp.h	/^    SHORT nl_amli_krylov_type;$/;"	m	language:C++	struct:__anon10
nl_amli_krylov_type	base/include/fasp.h	/^    SHORT nl_amli_krylov_type;$/;"	m	language:C++	struct:__anon16
nl_amli_krylov_type	base/include/fasp_block.h	/^    SHORT nl_amli_krylov_type;$/;"	m	language:C++	struct:__anon4
nl_amli_krylov_type	include/fasp.h	/^    SHORT nl_amli_krylov_type;$/;"	m	language:C++	struct:__anon34
nl_amli_krylov_type	include/fasp.h	/^    SHORT nl_amli_krylov_type;$/;"	m	language:C++	struct:__anon40
nl_amli_krylov_type	include/fasp_block.h	/^    SHORT nl_amli_krylov_type;$/;"	m	language:C++	struct:__anon28
nlevL	base/include/fasp.h	/^    INT nlevL;$/;"	m	language:C++	struct:__anon13
nlevL	include/fasp.h	/^    INT nlevL;$/;"	m	language:C++	struct:__anon37
nlevU	base/include/fasp.h	/^    INT nlevU;$/;"	m	language:C++	struct:__anon13
nlevU	include/fasp.h	/^    INT nlevU;$/;"	m	language:C++	struct:__anon37
nnz	base/include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:dCOOmat
nnz	base/include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:dCSRLmat
nnz	base/include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:dCSRmat
nnz	base/include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:iCOOmat
nnz	base/include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:iCSRmat
nnz	include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:dCOOmat
nnz	include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:dCSRLmat
nnz	include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:dCSRmat
nnz	include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:iCOOmat
nnz	include/fasp.h	/^    INT nnz;$/;"	m	language:C++	struct:iCSRmat
nnz	test/main/testf.f90	/^  integer          :: iufile, n, nnz,/;"	v	language:Fortran	program:test
nnz	tutorial/main/poisson-amg.f90	/^  integer          :: iufile, n, nnz,/;"	v	language:Fortran	program:test
nnz	tutorial/main/poisson-pcg.f90	/^  integer          :: iufile, n, nnz,/;"	v	language:Fortran	program:test
node	test/include/mesh.h	/^    ddenmat node;$/;"	m	language:C++	struct:Mesh
node_bd	test/include/mesh.h	/^    ivector node_bd;$/;"	m	language:C++	struct:Mesh
nsympair_1stpass	base/src/PreAMGAggregationUA.inl	/^static void nsympair_1stpass (const dCSRmat * A,$/;"	f	language:C++	file:	signature:(const dCSRmat * A, const REAL k_tg, ivector * vertices, ivector * map, REAL * s, INT * NumAggregates)
nsympair_2ndpass	base/src/PreAMGAggregationUA.inl	/^static void nsympair_2ndpass (const dCSRmat  *A,$/;"	f	language:C++	file:	signature:(const dCSRmat *A, dCSRmat *tmpA, const REAL k_tg, INT dopass, ivector *map1, ivector *vertices1, ivector *vertices, ivector *map, REAL *s1, INT *NumAggregates)
nt	test/include/misc.h	/^    int nt;$/;"	m	language:C++	struct:FEM_param
ntest	test/main/regression.c	/^unsigned INT  ntest;    \/**< number of tests all together *\/$/;"	v	language:C
ntest	test/main/regression_mf.c	/^unsigned INT  ntest;    \/**< number of tests all together *\/$/;"	v	language:C
ntest	test/main/regression_mm.c	/^unsigned INT  ntest[num_solvers];       \/**< number of tests without preconditioner *\/$/;"	v	language:C
ntest_amg	test/main/regression_mm.c	/^unsigned INT  ntest_amg[num_solvers];   \/**< number of tests using AMG preconditioner *\/$/;"	v	language:C
ntest_amg_solver	test/main/regression_mm.c	/^unsigned INT  ntest_amg_solver;         \/**< number of tests using AMG solver *\/$/;"	v	language:C
ntest_diag	test/main/regression_mm.c	/^unsigned INT  ntest_diag[num_solvers];  \/**< number of tests using diag preconditioner *\/$/;"	v	language:C
ntest_iluk	test/main/regression_mm.c	/^unsigned INT  ntest_iluk[num_solvers];  \/**< number of tests using ILUk preconditioner *\/$/;"	v	language:C
ntest_ilut	test/main/regression_mm.c	/^unsigned INT  ntest_ilut[num_solvers];  \/**< number of tests using ILUt preconditioner *\/$/;"	v	language:C
ntest_ilutp	test/main/regression_mm.c	/^unsigned INT  ntest_ilutp[num_solvers]; \/**< number of tests using ILUtp preconditioner *\/$/;"	v	language:C
num_cols	test/include/poisson_fdm.h	/^    int      num_cols;$/;"	m	language:C++	struct:__anon22
num_levels	base/include/fasp.h	/^    SHORT num_levels;$/;"	m	language:C++	struct:__anon15
num_levels	base/include/fasp_block.h	/^    INT num_levels;$/;"	m	language:C++	struct:__anon2
num_levels	include/fasp.h	/^    SHORT num_levels;$/;"	m	language:C++	struct:__anon39
num_levels	include/fasp_block.h	/^    INT num_levels;$/;"	m	language:C++	struct:__anon26
num_nonzeros	test/include/poisson_fdm.h	/^    int      num_nonzeros;$/;"	m	language:C++	struct:__anon22
num_prob	test/main/regression_mm.c	16;"	d	language:C	file:
num_qp_mat	test/include/misc.h	/^    int num_qp_mat;$/;"	m	language:C++	struct:FEM_param
num_qp_rhs	test/include/misc.h	/^    int num_qp_rhs;$/;"	m	language:C++	struct:FEM_param
num_rownnz	test/include/poisson_fdm.h	/^    int      num_rownnz; $/;"	m	language:C++	struct:__anon22
num_rows	test/include/poisson_fdm.h	/^    int      num_rows;$/;"	m	language:C++	struct:__anon22
num_solvers	test/main/regression_mm.c	17;"	d	language:C	file:
num_vectors	test/include/poisson_fdm.h	/^    int      num_vectors;$/;"	m	language:C++	struct:__anon23
numeric	base/include/fasp.h	/^    void **numeric;$/;"	m	language:C++	struct:__anon14
numeric	include/fasp.h	/^    void **numeric;$/;"	m	language:C++	struct:__anon38
numfactor	base/src/BlaILUSetupBSR.c	/^static INT numfactor (dBSRmat   *A,$/;"	f	language:C	file:	signature:(dBSRmat *A, REAL *luval, INT *jlu, INT *uptr)
numfactor_levsch	base/src/BlaILUSetupBSR.c	/^static INT numfactor_levsch (dBSRmat *A,$/;"	f	language:C	file:	signature:(dBSRmat *A, REAL *luval, INT *jlu, INT *uptr, INT ncolors, INT *ic, INT *icmap)
numfactor_mulcol	base/src/BlaILUSetupBSR.c	/^static INT numfactor_mulcol (dBSRmat   *A,$/;"	f	language:C	file:	signature:(dBSRmat *A, REAL *luval, INT *jlu, INT *uptr, INT ncolors, INT *ic, INT *icmap)
nwork	base/include/fasp.h	/^    INT nwork;$/;"	m	language:C++	struct:__anon13
nwork	include/fasp.h	/^    INT nwork;$/;"	m	language:C++	struct:__anon37
nx	base/include/fasp.h	/^    INT nx;$/;"	m	language:C++	struct:dSTRmat
nx	include/fasp.h	/^    INT nx;$/;"	m	language:C++	struct:dSTRmat
nx	test/include/poisson_fdm.h	/^    int      nx; \/**< @brief number of nodes along x-direction(excluding boundary nodes) *\/$/;"	m	language:C++	struct:__anon24
nxy	base/include/fasp.h	/^    INT nxy;$/;"	m	language:C++	struct:dSTRmat
nxy	include/fasp.h	/^    INT nxy;$/;"	m	language:C++	struct:dSTRmat
ny	base/include/fasp.h	/^    INT ny;$/;"	m	language:C++	struct:dSTRmat
ny	include/fasp.h	/^    INT ny;$/;"	m	language:C++	struct:dSTRmat
ny	test/include/poisson_fdm.h	/^    int      ny; \/**< @brief number of nodes along y-direction(excluding boundary nodes) *\/$/;"	m	language:C++	struct:__anon24
nz	base/include/fasp.h	/^    INT nz;$/;"	m	language:C++	struct:dSTRmat
nz	include/fasp.h	/^    INT nz;$/;"	m	language:C++	struct:dSTRmat
nz	test/include/poisson_fdm.h	/^    int      nz; \/**< @brief number of nodes along z-direction(excluding boundary nodes) *\/$/;"	m	language:C++	struct:__anon24
nz_diff	base/include/fasp.h	/^    INT *nz_diff;$/;"	m	language:C++	struct:dCSRLmat
nz_diff	include/fasp.h	/^    INT *nz_diff;$/;"	m	language:C++	struct:dCSRLmat
nzlu	base/include/fasp.h	/^    INT nzlu;$/;"	m	language:C++	struct:__anon13
nzlu	include/fasp.h	/^    INT nzlu;$/;"	m	language:C++	struct:__anon37
offdiag	base/include/fasp.h	/^    REAL **offdiag;$/;"	m	language:C++	struct:dSTRmat
offdiag	include/fasp.h	/^    REAL **offdiag;$/;"	m	language:C++	struct:dSTRmat
offdiag	test/include/poisson_fdm.h	/^    double **offdiag;$/;"	m	language:C++	struct:__anon24
offsets	base/include/fasp.h	/^    INT *offsets;$/;"	m	language:C++	struct:dSTRmat
offsets	include/fasp.h	/^    INT *offsets;$/;"	m	language:C++	struct:dSTRmat
offsets	test/include/poisson_fdm.h	/^    int     *offsets;$/;"	m	language:C++	struct:__anon24
ok_address	base/extra/dlmalloc/dlmalloc.c	2865;"	d	language:C	file:
ok_address	base/extra/dlmalloc/dlmalloc.c	2874;"	d	language:C	file:
ok_address	base/extra/include/malloc.c.h	2966;"	d	language:C++
ok_address	base/extra/include/malloc.c.h	2975;"	d	language:C++
ok_inuse	base/extra/dlmalloc/dlmalloc.c	2869;"	d	language:C	file:
ok_inuse	base/extra/dlmalloc/dlmalloc.c	2876;"	d	language:C	file:
ok_inuse	base/extra/include/malloc.c.h	2970;"	d	language:C++
ok_inuse	base/extra/include/malloc.c.h	2977;"	d	language:C++
ok_magic	base/extra/dlmalloc/dlmalloc.c	2882;"	d	language:C	file:
ok_magic	base/extra/dlmalloc/dlmalloc.c	2884;"	d	language:C	file:
ok_magic	base/extra/include/malloc.c.h	2983;"	d	language:C++
ok_magic	base/extra/include/malloc.c.h	2985;"	d	language:C++
ok_next	base/extra/dlmalloc/dlmalloc.c	2867;"	d	language:C	file:
ok_next	base/extra/dlmalloc/dlmalloc.c	2875;"	d	language:C	file:
ok_next	base/extra/include/malloc.c.h	2968;"	d	language:C++
ok_next	base/extra/include/malloc.c.h	2976;"	d	language:C++
ok_pinuse	base/extra/dlmalloc/dlmalloc.c	2871;"	d	language:C	file:
ok_pinuse	base/extra/dlmalloc/dlmalloc.c	2877;"	d	language:C	file:
ok_pinuse	base/extra/include/malloc.c.h	2972;"	d	language:C++
ok_pinuse	base/extra/include/malloc.c.h	2978;"	d	language:C++
option	test/include/misc.h	/^    char option[128];$/;"	m	language:C++	struct:FEM_param
ordblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	language:C	struct:mallinfo	file:
ordblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	language:C++	struct:mallinfo
ordblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	language:C++	struct:mallinfo
ordblks	base/extra/include/nedmalloc.h	/^  size_t ordblks;  \/* number of free chunks *\/$/;"	m	language:C++	struct:nedmallinfo
order	base/include/fasp.h	/^    ivector *order;$/;"	m	language:C++	struct:__anon17
order	include/fasp.h	/^    ivector *order;$/;"	m	language:C++	struct:__anon41
ordering1	base/src/PreAMGCoarsenRS.c	/^static void ordering1 (iCSRmat   *S,$/;"	f	language:C	file:	signature:(iCSRmat *S, ivector *order)
orderone	base/src/PreAMGInterpEM.c	/^static SHORT orderone (INT   **mat,$/;"	f	language:C	file:	signature:(INT **mat, REAL **matval, INT *lengths)
output_type	base/include/fasp.h	/^    SHORT output_type;   \/**< type of output stream *\/$/;"	m	language:C++	struct:__anon21
output_type	include/fasp.h	/^    SHORT output_type;   \/**< type of output stream *\/$/;"	m	language:C++	struct:__anon45
overhead_for	base/extra/dlmalloc/dlmalloc.c	2159;"	d	language:C	file:
overhead_for	base/extra/include/malloc.c.h	2281;"	d	language:C++
owns_data	test/include/poisson_fdm.h	/^    int      owns_data;$/;"	m	language:C++	struct:__anon22
owns_data	test/include/poisson_fdm.h	/^    int      owns_data;$/;"	m	language:C++	struct:__anon23
p	base/include/fasp_grid.h	/^    REAL (*p)[2];  \/**< Coordinates of vertices *\/$/;"	m	language:C++	struct:grid2d
p	include/fasp_grid.h	/^    REAL (*p)[2];  \/**< Coordinates of vertices *\/$/;"	m	language:C++	struct:grid2d
pad_request	base/extra/dlmalloc/dlmalloc.c	2098;"	d	language:C	file:
pad_request	base/extra/include/malloc.c.h	2220;"	d	language:C++
page_align	base/extra/dlmalloc/dlmalloc.c	2524;"	d	language:C	file:
page_align	base/extra/include/malloc.c.h	2625;"	d	language:C++
page_size	base/extra/dlmalloc/dlmalloc.c	/^  size_t page_size;$/;"	m	language:C	struct:malloc_params	file:
page_size	base/extra/include/malloc.c.h	/^  size_t page_size;$/;"	m	language:C++	struct:malloc_params
pair_aggregate_init	base/src/PreAMGAggregationUA.inl	/^static void pair_aggregate_init (const dCSRmat  *A,$/;"	f	language:C++	file:	signature:(const dCSRmat *A, const SHORT checkdd, const REAL kaptg, INT *iperm, ivector *vertices, REAL *s)
pair_aggregate_init2	base/src/PreAMGAggregationUA.inl	/^static void pair_aggregate_init2 (const dCSRmat  *A,$/;"	f	language:C++	file:	signature:(const dCSRmat *A, ivector *map, ivector *vertices, REAL *s1, REAL *s)
pair_number	base/include/fasp.h	/^    INT pair_number;$/;"	m	language:C++	struct:__anon10
pair_number	include/fasp.h	/^    INT pair_number;$/;"	m	language:C++	struct:__anon34
parent	base/extra/dlmalloc/dlmalloc.c	/^  struct malloc_tree_chunk* parent;$/;"	m	language:C	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
parent	base/extra/include/malloc.c.h	/^  struct malloc_tree_chunk* parent;$/;"	m	language:C++	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk
pcg1d	base/src/PreGMG.inl	/^static INT pcg1d (REAL        *u,$/;"	f	language:C++	file:	signature:(REAL *u, const REAL *b, const INT *level, const INT maxlevel, const INT nx, const REAL rtol, const INT maxit, const SHORT prtlvl)
pcg2d	base/src/PreGMG.inl	/^static INT pcg2d (REAL        *u,$/;"	f	language:C++	file:	signature:(REAL *u, const REAL *b, const INT *level, const INT maxlevel, const INT *nxk, const INT *nyk, const REAL rtol, const INT maxit, const SHORT prtlvl)
pcg3d	base/src/PreGMG.inl	/^static INT pcg3d (REAL        *u,$/;"	f	language:C++	file:	signature:(REAL *u, const REAL *b, const INT *level, const INT maxlevel, const INT *nxk, const INT *nyk, const INT *nzk, const REAL rtol, const INT maxit, const SHORT prtlvl)
pcgrid2d	base/include/fasp_grid.h	/^typedef const grid2d *pcgrid2d; \/**< Grid in 2d *\/$/;"	t	language:C++
pcgrid2d	include/fasp_grid.h	/^typedef const grid2d *pcgrid2d; \/**< Grid in 2d *\/$/;"	t	language:C++
pdata	base/include/fasp.h	/^    Pardiso_data pdata;$/;"	m	language:C++	struct:__anon15
pdata	base/include/fasp_block.h	/^    Pardiso_data pdata;$/;"	m	language:C++	struct:__anon2
pdata	include/fasp.h	/^    Pardiso_data pdata;$/;"	m	language:C++	struct:__anon39
pdata	include/fasp_block.h	/^    Pardiso_data pdata;$/;"	m	language:C++	struct:__anon26
pdiri	base/include/fasp_grid.h	/^    INT *pdiri;    \/**< Boundary flags (0 <=> interior point) *\/$/;"	m	language:C++	struct:grid2d
pdiri	include/fasp_grid.h	/^    INT *pdiri;    \/**< Boundary flags (0 <=> interior point) *\/$/;"	m	language:C++	struct:grid2d
perm	base/src/ItrSmootherBSR.c	/^static inline void perm (const INT    n,$/;"	f	language:C	file:	signature:(const INT n, const INT nb, const REAL *x, const INT *p, REAL *y)
pfather	base/include/fasp_grid.h	/^    INT *pfather;  \/**< Father point or edge *\/$/;"	m	language:C++	struct:grid2d
pfather	include/fasp_grid.h	/^    INT *pfather;  \/**< Father point or edge *\/$/;"	m	language:C++	struct:grid2d
pgrid2d	base/include/fasp_grid.h	/^typedef grid2d *pgrid2d; \/**< Grid in 2d *\/$/;"	t	language:C++
pgrid2d	include/fasp_grid.h	/^typedef grid2d *pgrid2d; \/**< Grid in 2d *\/$/;"	t	language:C++
pi	test/main/testfct_heat.inl	13;"	d	language:C++	file:
pi	test/main/testgmg.c	/^const REAL pi = 3.14159265;$/;"	v	language:C
pi	tutorial/main/poisson-gmg.c	/^const REAL pi = 3.14159265;$/;"	v	language:C
pinuse	base/extra/dlmalloc/dlmalloc.c	2127;"	d	language:C	file:
pinuse	base/extra/include/malloc.c.h	2249;"	d	language:C++
pivot	base/include/fasp.h	/^    ivector *pivot;$/;"	m	language:C++	struct:__anon17
pivot	include/fasp.h	/^    ivector *pivot;$/;"	m	language:C++	struct:__anon41
pivotS	base/include/fasp.h	/^    ivector *pivotS;$/;"	m	language:C++	struct:__anon17
pivotS	include/fasp.h	/^    ivector *pivotS;$/;"	m	language:C++	struct:__anon41
polynomial_degree	base/include/fasp.h	/^    SHORT polynomial_degree;$/;"	m	language:C++	struct:__anon10
polynomial_degree	base/include/fasp.h	/^    SHORT polynomial_degree;$/;"	m	language:C++	struct:__anon16
polynomial_degree	include/fasp.h	/^    SHORT polynomial_degree;$/;"	m	language:C++	struct:__anon34
polynomial_degree	include/fasp.h	/^    SHORT polynomial_degree;$/;"	m	language:C++	struct:__anon40
postsmooth_iter	base/include/fasp.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon10
postsmooth_iter	base/include/fasp.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon16
postsmooth_iter	base/include/fasp.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon17
postsmooth_iter	base/include/fasp_block.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon4
postsmooth_iter	include/fasp.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon34
postsmooth_iter	include/fasp.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon40
postsmooth_iter	include/fasp.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon41
postsmooth_iter	include/fasp_block.h	/^    SHORT postsmooth_iter;$/;"	m	language:C++	struct:__anon28
precond	base/include/fasp.h	/^} precond; \/**< Data for general preconditioner passed to iterative solvers *\/$/;"	t	language:C++	typeref:struct:__anon19
precond	include/fasp.h	/^} precond; \/**< Data for general preconditioner passed to iterative solvers *\/$/;"	t	language:C++	typeref:struct:__anon43
precond_data	base/include/fasp.h	/^} precond_data; \/**< Data for preconditioners *\/$/;"	t	language:C++	typeref:struct:__anon16
precond_data	include/fasp.h	/^} precond_data; \/**< Data for preconditioners *\/$/;"	t	language:C++	typeref:struct:__anon40
precond_data_blc	base/include/fasp_block.h	/^} precond_data_blc; \/**< Precond data for block matrices *\/$/;"	t	language:C++	typeref:struct:__anon5
precond_data_blc	include/fasp_block.h	/^} precond_data_blc; \/**< Precond data for block matrices *\/$/;"	t	language:C++	typeref:struct:__anon29
precond_data_bsr	base/include/fasp_block.h	/^} precond_data_bsr; \/**< Data for preconditioners in dBSRmat format *\/$/;"	t	language:C++	typeref:struct:__anon4
precond_data_bsr	include/fasp_block.h	/^} precond_data_bsr; \/**< Data for preconditioners in dBSRmat format *\/$/;"	t	language:C++	typeref:struct:__anon28
precond_data_str	base/include/fasp.h	/^} precond_data_str; \/**< Data for preconditioners of STR matrices *\/$/;"	t	language:C++	typeref:struct:__anon17
precond_data_str	include/fasp.h	/^} precond_data_str; \/**< Data for preconditioners of STR matrices *\/$/;"	t	language:C++	typeref:struct:__anon41
precond_data_sweeping	base/include/fasp_block.h	/^} precond_data_sweeping; \/**< Data for sweeping preconditioner *\/$/;"	t	language:C++	typeref:struct:__anon6
precond_data_sweeping	include/fasp_block.h	/^} precond_data_sweeping; \/**< Data for sweeping preconditioner *\/$/;"	t	language:C++	typeref:struct:__anon30
precond_diag_bsr	base/include/fasp_block.h	/^} precond_diag_bsr; \/**< Data for diagnal preconditioners in dBSRmat format *\/$/;"	t	language:C++	typeref:struct:__anon3
precond_diag_bsr	include/fasp_block.h	/^} precond_diag_bsr; \/**< Data for diagnal preconditioners in dBSRmat format *\/$/;"	t	language:C++	typeref:struct:__anon27
precond_diag_str	base/include/fasp.h	/^} precond_diag_str; \/**< Data for diagonal preconditioners of STR matrices *\/$/;"	t	language:C++	typeref:struct:__anon18
precond_diag_str	include/fasp.h	/^} precond_diag_str; \/**< Data for diagonal preconditioners of STR matrices *\/$/;"	t	language:C++	typeref:struct:__anon42
precond_type	base/include/fasp.h	/^    SHORT precond_type;  \/**< preconditioner type: see fasp_const.h *\/$/;"	m	language:C++	struct:__anon7
precond_type	base/include/fasp.h	/^    SHORT precond_type;  \/**< type of preconditioner for iterative solvers *\/$/;"	m	language:C++	struct:__anon21
precond_type	include/fasp.h	/^    SHORT precond_type;  \/**< preconditioner type: see fasp_const.h *\/$/;"	m	language:C++	struct:__anon31
precond_type	include/fasp.h	/^    SHORT precond_type;  \/**< type of preconditioner for iterative solvers *\/$/;"	m	language:C++	struct:__anon45
prefix	Makefile	/^prefix = no-prefix$/;"	m	language:Make
prepend_alloc	base/extra/dlmalloc/dlmalloc.c	/^static void* prepend_alloc(mstate m, char* newbase, char* oldbase,$/;"	f	language:C	file:	signature:(mstate m, char* newbase, char* oldbase, size_t nb)
prepend_alloc	base/extra/include/malloc.c.h	/^static void* prepend_alloc(mstate m, char* newbase, char* oldbase,$/;"	f	language:C++	signature:(mstate m, char* newbase, char* oldbase, size_t nb)
pres_mgl_data	base/include/fasp_block.h	/^    AMG_data *pres_mgl_data;$/;"	m	language:C++	struct:__anon4
pres_mgl_data	include/fasp_block.h	/^    AMG_data *pres_mgl_data;$/;"	m	language:C++	struct:__anon28
presmooth_iter	base/include/fasp.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon10
presmooth_iter	base/include/fasp.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon16
presmooth_iter	base/include/fasp.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon17
presmooth_iter	base/include/fasp_block.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon4
presmooth_iter	include/fasp.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon34
presmooth_iter	include/fasp.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon40
presmooth_iter	include/fasp.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon41
presmooth_iter	include/fasp_block.h	/^    SHORT presmooth_iter;$/;"	m	language:C++	struct:__anon28
prev	base/src/PreAMGUtil.inl	/^    INT prev;$/;"	m	language:C++	struct:__anon1	file:
prev_chunk	base/extra/dlmalloc/dlmalloc.c	2141;"	d	language:C	file:
prev_chunk	base/extra/include/malloc.c.h	2263;"	d	language:C++
prev_foot	base/extra/dlmalloc/dlmalloc.c	/^  size_t                    prev_foot;$/;"	m	language:C	struct:malloc_tree_chunk	file:
prev_foot	base/extra/dlmalloc/dlmalloc.c	/^  size_t               prev_foot;  \/* Size of previous chunk (if free).  *\/$/;"	m	language:C	struct:malloc_chunk	file:
prev_foot	base/extra/include/malloc.c.h	/^  size_t                    prev_foot;$/;"	m	language:C++	struct:malloc_tree_chunk
prev_foot	base/extra/include/malloc.c.h	/^  size_t               prev_foot;  \/* Size of previous chunk (if free).  *\/$/;"	m	language:C++	struct:malloc_chunk
prev_node	base/src/PreAMGUtil.inl	/^    struct linked_list *prev_node;$/;"	m	language:C++	struct:linked_list	typeref:struct:linked_list::linked_list	file:
print_level	base/include/fasp.h	/^    SHORT print_level;   \/**< print level *\/$/;"	m	language:C++	struct:__anon21
print_level	base/include/fasp.h	/^    SHORT print_level;   \/**< print level: 0--10 *\/$/;"	m	language:C++	struct:__anon7
print_level	base/include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon10
print_level	base/include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon16
print_level	base/include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon17
print_level	base/include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon8
print_level	base/include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon9
print_level	base/include/fasp_block.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon4
print_level	include/fasp.h	/^    SHORT print_level;   \/**< print level *\/$/;"	m	language:C++	struct:__anon45
print_level	include/fasp.h	/^    SHORT print_level;   \/**< print level: 0--10 *\/$/;"	m	language:C++	struct:__anon31
print_level	include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon32
print_level	include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon33
print_level	include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon34
print_level	include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon40
print_level	include/fasp.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon41
print_level	include/fasp_block.h	/^    SHORT print_level;$/;"	m	language:C++	struct:__anon28
problem_num	base/include/fasp.h	/^    INT  problem_num;    \/**< problem number to solve *\/$/;"	m	language:C++	struct:__anon21
problem_num	include/fasp.h	/^    INT  problem_num;    \/**< problem number to solve *\/$/;"	m	language:C++	struct:__anon45
prt_lvl	test/main/testf.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl,/;"	v	language:Fortran	program:test
prt_lvl	tutorial/main/poisson-amg.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl,/;"	v	language:Fortran	program:test
prt_lvl	tutorial/main/poisson-pcg.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl,/;"	v	language:Fortran	program:test
pt	base/include/fasp.h	/^    void *pt[64];$/;"	m	language:C++	struct:__anon12
pt	include/fasp.h	/^    void *pt[64];$/;"	m	language:C++	struct:__anon36
pthread_acquire_lock	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE int pthread_acquire_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
pthread_acquire_lock	base/extra/include/malloc.c.h	/^static FORCEINLINE int pthread_acquire_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
pthread_init_lock	base/extra/dlmalloc/dlmalloc.c	/^static int pthread_init_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
pthread_init_lock	base/extra/include/malloc.c.h	/^static int pthread_init_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
pthread_mlock_t	base/extra/dlmalloc/dlmalloc.c	/^struct pthread_mlock_t {$/;"	s	language:C	file:
pthread_mlock_t	base/extra/include/malloc.c.h	/^struct pthread_mlock_t {$/;"	s	language:C++
pthread_mutexattr_settype	base/extra/dlmalloc/dlmalloc.c	1837;"	d	language:C	file:
pthread_mutexattr_settype	base/extra/include/malloc.c.h	1960;"	d	language:C++
pthread_release_lock	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE void pthread_release_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
pthread_release_lock	base/extra/include/malloc.c.h	/^static FORCEINLINE void pthread_release_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
pthread_try_lock	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE int pthread_try_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
pthread_try_lock	base/extra/include/malloc.c.h	/^static FORCEINLINE int pthread_try_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
put_byte	base/src/AuxGraphics.c	/^static void put_byte (FILE       *fp,$/;"	f	language:C	file:	signature:(FILE *fp, const INT c)
put_dword	base/src/AuxGraphics.c	/^static void put_dword (FILE       *fp,$/;"	f	language:C	file:	signature:(FILE *fp, const INT d)
put_word	base/src/AuxGraphics.c	/^static void put_word (FILE       *fp,$/;"	f	language:C	file:	signature:(FILE *fp, const INT w)
pw	base/include/fasp_block.h	/^    REAL *pw;$/;"	m	language:C++	struct:__anon2
pw	include/fasp_block.h	/^    REAL *pw;$/;"	m	language:C++	struct:__anon26
quality_bound	base/include/fasp.h	/^    REAL quality_bound;$/;"	m	language:C++	struct:__anon10
quality_bound	include/fasp.h	/^    REAL quality_bound;$/;"	m	language:C++	struct:__anon34
r	base/include/fasp.h	/^    dvector r;$/;"	m	language:C++	struct:__anon16
r	base/include/fasp.h	/^    dvector r;$/;"	m	language:C++	struct:__anon17
r	base/include/fasp_block.h	/^    dvector r;            \/**< temp work space *\/$/;"	m	language:C++	struct:__anon5
r	base/include/fasp_block.h	/^    dvector r; \/**< temporary dvector used to store and restore the residual *\/$/;"	m	language:C++	struct:__anon6
r	base/include/fasp_block.h	/^    dvector r;$/;"	m	language:C++	struct:__anon4
r	include/fasp.h	/^    dvector r;$/;"	m	language:C++	struct:__anon40
r	include/fasp.h	/^    dvector r;$/;"	m	language:C++	struct:__anon41
r	include/fasp_block.h	/^    dvector r;            \/**< temp work space *\/$/;"	m	language:C++	struct:__anon29
r	include/fasp_block.h	/^    dvector r; \/**< temporary dvector used to store and restore the residual *\/$/;"	m	language:C++	struct:__anon30
r	include/fasp_block.h	/^    dvector r;$/;"	m	language:C++	struct:__anon28
r8mat_print	base/extra/hb_io/XtrHBIO.c	/^void r8mat_print ( int m, int n, double a[], char *title )$/;"	f	language:C	signature:( int m, int n, double a[], char *title )
r8mat_print_some	base/extra/hb_io/XtrHBIO.c	/^void r8mat_print_some ( int m, int n, double a[], int ilo, int jlo, int ihi,$/;"	f	language:C	signature:( int m, int n, double a[], int ilo, int jlo, int ihi, int jhi, char *title )
r8vec_print	base/extra/hb_io/XtrHBIO.c	/^void r8vec_print ( int n, double a[], char *title )$/;"	f	language:C	signature:( int n, double a[], char *title )
r8vec_print_part	base/extra/hb_io/XtrHBIO.c	/^void r8vec_print_part ( int n, double a[], int max_print, char *title )$/;"	f	language:C	signature:( int n, double a[], int max_print, char *title )
rap_setup	test/main/testrap.c	/^static void rap_setup(AMG_data *mgl, AMG_param *param)$/;"	f	language:C	file:	signature:(AMG_data *mgl, AMG_param *param)
rb0b2d	base/src/ItrSmootherRBGS.inl	/^static void rb0b2d (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT *mark, INT nx, INT ny, INT nsweeps)
rb0b3d	base/src/ItrSmootherRBGS.inl	/^static void rb0b3d (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT *mark, INT nx, INT ny, INT nz, INT nsweeps)
rb0f2d	base/src/ItrSmootherRBGS.inl	/^static void rb0f2d (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT *mark, INT nx, INT ny, INT nsweeps)
rb0f3d	base/src/ItrSmootherRBGS.inl	/^static void rb0f3d (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT *mark, INT nx, INT ny, INT nz, INT nsweeps)
refine_lvl	test/include/misc.h	/^    int refine_lvl;$/;"	m	language:C++	struct:FEM_param
relaxation	base/include/fasp.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon10
relaxation	base/include/fasp.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon16
relaxation	base/include/fasp.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon17
relaxation	base/include/fasp_block.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon4
relaxation	include/fasp.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon34
relaxation	include/fasp.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon40
relaxation	include/fasp.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon41
relaxation	include/fasp_block.h	/^    REAL relaxation;$/;"	m	language:C++	struct:__anon28
release_checks	base/extra/dlmalloc/dlmalloc.c	/^  size_t     release_checks;$/;"	m	language:C	struct:malloc_state	file:
release_checks	base/extra/include/malloc.c.h	/^  size_t     release_checks;$/;"	m	language:C++	struct:malloc_state
release_unused_segments	base/extra/dlmalloc/dlmalloc.c	/^static size_t release_unused_segments(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
release_unused_segments	base/extra/include/malloc.c.h	/^static size_t release_unused_segments(mstate m) {$/;"	f	language:C++	signature:(mstate m)
rem_positive_ff	base/src/PreAMGCoarsenRS.c	/^static void rem_positive_ff (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *Stemp, ivector *vertices)
remove_node	base/src/PreAMGUtil.inl	/^static void remove_node (LinkList *LoL_head_ptr,$/;"	f	language:C++	file:	signature:(LinkList *LoL_head_ptr, LinkList *LoL_tail_ptr, INT measure, INT index, INT *lists, INT *where)
replace_dv	base/extra/dlmalloc/dlmalloc.c	3471;"	d	language:C	file:
replace_dv	base/extra/include/malloc.c.h	3590;"	d	language:C++
request2size	base/extra/dlmalloc/dlmalloc.c	2102;"	d	language:C	file:
request2size	base/extra/include/malloc.c.h	2224;"	d	language:C++
reset_on_error	base/extra/dlmalloc/dlmalloc.c	/^static void reset_on_error(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
reset_on_error	base/extra/include/malloc.c.h	/^static void reset_on_error(mstate m) {$/;"	f	language:C++	signature:(mstate m)
residual1d	base/src/PreGMG.inl	/^static void residual1d (const REAL *u,$/;"	f	language:C++	file:	signature:(const REAL *u, const REAL *b, REAL *r, const INT k, const INT *level)
residual2d	base/src/PreGMG.inl	/^static void residual2d (const REAL *u,$/;"	f	language:C++	file:	signature:(const REAL *u, const REAL *b, REAL *r, const INT k, const INT *level, const INT *nxk, const INT *nyk)
residual3d	base/src/PreGMG.inl	/^static void residual3d (const REAL *u,$/;"	f	language:C++	file:	signature:(const REAL *u, const REAL *b, REAL *r, const INT k, const INT *level, const INT *nxk, const INT *nyk, const INT *nzk)
restart	base/include/fasp.h	/^    INT   restart;       \/**< number of steps for restarting: for GMRES etc *\/$/;"	m	language:C++	struct:__anon7
restart	base/include/fasp.h	/^    INT restart;         \/**< restart number used in GMRES *\/$/;"	m	language:C++	struct:__anon21
restart	include/fasp.h	/^    INT   restart;       \/**< number of steps for restarting: for GMRES etc *\/$/;"	m	language:C++	struct:__anon31
restart	include/fasp.h	/^    INT restart;         \/**< restart number used in GMRES *\/$/;"	m	language:C++	struct:__anon45
restriction2d5pt	base/src/PreGMG.inl	/^static void restriction2d5pt (REAL       *b,$/;"	f	language:C++	file:	signature:(REAL *b, const REAL *r, const INT *level, const INT k, const INT *nxk, const INT *nyk)
restriction3d7pt	base/src/PreGMG.inl	/^static void restriction3d7pt (REAL       *b,$/;"	f	language:C++	file:	signature:(REAL *b, const REAL *r, const INT *level, const INT k, const INT *nxk, const INT *nyk, const INT *nzk)
rhsloc	base/include/fasp.h	/^    REAL *rhsloc;$/;"	m	language:C++	struct:__anon14
rhsloc	include/fasp.h	/^    REAL *rhsloc;$/;"	m	language:C++	struct:__anon38
rhsloc1	base/include/fasp.h	/^    dvector rhsloc1;$/;"	m	language:C++	struct:__anon14
rhsloc1	include/fasp.h	/^    dvector rhsloc1;$/;"	m	language:C++	struct:__anon38
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:__anon13
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dCOOmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dCSRLmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dCSRmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:ddenmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dvector
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:iCOOmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:iCSRmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:idenmat
row	base/include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:ivector
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:__anon37
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dCOOmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dCSRLmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dCSRmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:ddenmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:dvector
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:iCOOmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:iCSRmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:idenmat
row	include/fasp.h	/^    INT row;$/;"	m	language:C++	struct:ivector
rowind	base/include/fasp.h	/^    INT *rowind;$/;"	m	language:C++	struct:dCOOmat
rowind	include/fasp.h	/^    INT *rowind;$/;"	m	language:C++	struct:dCOOmat
rownnz	test/include/poisson_fdm.h	/^    int     *rownnz;$/;"	m	language:C++	struct:__anon22
s	base/include/fasp_grid.h	/^    INT (*s)[3];   \/**< Edges of triangles *\/$/;"	m	language:C++	struct:grid2d
s	include/fasp_grid.h	/^    INT (*s)[3];   \/**< Edges of triangles *\/$/;"	m	language:C++	struct:grid2d
s_len_trim	base/extra/hb_io/XtrHBIO.c	/^int s_len_trim ( char *s )$/;"	f	language:C	signature:( char *s )
s_substring	base/extra/hb_io/XtrHBIO.c	/^char *s_substring ( char *s, int a, int b )$/;"	f	language:C	signature:( char *s, int a, int b )
s_to_format	base/extra/hb_io/XtrHBIO.c	/^void s_to_format ( char *s, int *r, char *code, int *w, int *m )$/;"	f	language:C	signature:( char *s, int *r, char *code, int *w, int *m )
s_trim	base/extra/hb_io/XtrHBIO.c	/^void s_trim ( char *s )$/;"	f	language:C	signature:( char *s )
same_or_left_bits	base/extra/dlmalloc/dlmalloc.c	2789;"	d	language:C	file:
same_or_left_bits	base/extra/include/malloc.c.h	2890;"	d	language:C++
sbinptr	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_chunk* sbinptr;  \/* The type of bins of chunks *\/$/;"	t	language:C	typeref:struct:malloc_chunk	file:
sbinptr	base/extra/include/malloc.c.h	/^typedef struct malloc_chunk* sbinptr;  \/* The type of bins of chunks *\/$/;"	t	language:C++	typeref:struct:malloc_chunk
scaled	base/include/fasp.h	/^    SHORT scaled;$/;"	m	language:C++	struct:__anon17
scaled	include/fasp.h	/^    SHORT scaled;$/;"	m	language:C++	struct:__anon41
seg	base/extra/dlmalloc/dlmalloc.c	/^  msegment   seg;$/;"	m	language:C	struct:malloc_state	file:
seg	base/extra/include/malloc.c.h	/^  msegment   seg;$/;"	m	language:C++	struct:malloc_state
segment_holding	base/extra/dlmalloc/dlmalloc.c	/^static msegmentptr segment_holding(mstate m, char* addr) {$/;"	f	language:C	file:	signature:(mstate m, char* addr)
segment_holding	base/extra/include/malloc.c.h	/^static msegmentptr segment_holding(mstate m, char* addr) {$/;"	f	language:C++	signature:(mstate m, char* addr)
segment_holds	base/extra/dlmalloc/dlmalloc.c	2549;"	d	language:C	file:
segment_holds	base/extra/include/malloc.c.h	2650;"	d	language:C++
set_foot	base/extra/dlmalloc/dlmalloc.c	2148;"	d	language:C	file:
set_foot	base/extra/include/malloc.c.h	2270;"	d	language:C++
set_free_with_pinuse	base/extra/dlmalloc/dlmalloc.c	2155;"	d	language:C	file:
set_free_with_pinuse	base/extra/include/malloc.c.h	2277;"	d	language:C++
set_inuse	base/extra/dlmalloc/dlmalloc.c	2908;"	d	language:C	file:
set_inuse	base/extra/dlmalloc/dlmalloc.c	2931;"	d	language:C	file:
set_inuse	base/extra/include/malloc.c.h	3009;"	d	language:C++
set_inuse	base/extra/include/malloc.c.h	3032;"	d	language:C++
set_inuse_and_pinuse	base/extra/dlmalloc/dlmalloc.c	2913;"	d	language:C	file:
set_inuse_and_pinuse	base/extra/dlmalloc/dlmalloc.c	2936;"	d	language:C	file:
set_inuse_and_pinuse	base/extra/include/malloc.c.h	3014;"	d	language:C++
set_inuse_and_pinuse	base/extra/include/malloc.c.h	3037;"	d	language:C++
set_lock	base/extra/dlmalloc/dlmalloc.c	2518;"	d	language:C	file:
set_lock	base/extra/include/malloc.c.h	2619;"	d	language:C++
set_size_and_pinuse_of_free_chunk	base/extra/dlmalloc/dlmalloc.c	2151;"	d	language:C	file:
set_size_and_pinuse_of_free_chunk	base/extra/include/malloc.c.h	2273;"	d	language:C++
set_size_and_pinuse_of_inuse_chunk	base/extra/dlmalloc/dlmalloc.c	2918;"	d	language:C	file:
set_size_and_pinuse_of_inuse_chunk	base/extra/dlmalloc/dlmalloc.c	2941;"	d	language:C	file:
set_size_and_pinuse_of_inuse_chunk	base/extra/include/malloc.c.h	3019;"	d	language:C++
set_size_and_pinuse_of_inuse_chunk	base/extra/include/malloc.c.h	3042;"	d	language:C++
setup_heat	test/src/FemHeatEqn.c	/^int setup_heat (dCSRmat *A_heat,$/;"	f	language:C	signature:(dCSRmat *A_heat, dCSRmat *Mass, dvector *b_heat, Mesh *mesh, Mesh_aux *mesh_aux, FEM_param *pt, dvector *uh_heat, Bd_apply_info *bdinfo, double dt)
setup_poisson	test/src/FemPoisson.c	/^int setup_poisson (dCSRmat *A,$/;"	f	language:C	signature:(dCSRmat *A, dvector *b, Mesh *mesh, Mesh_aux *mesh_aux, FEM_param *pt, dvector *ptr_uh, ivector *dof)
sflags	base/extra/dlmalloc/dlmalloc.c	/^  flag_t       sflags;           \/* mmap and extern flag *\/$/;"	m	language:C	struct:malloc_segment	file:
sflags	base/extra/include/malloc.c.h	/^  flag_t       sflags;           \/* mmap and extern flag *\/$/;"	m	language:C++	struct:malloc_segment
should_trim	base/extra/dlmalloc/dlmalloc.c	2575;"	d	language:C	file:
should_trim	base/extra/dlmalloc/dlmalloc.c	2577;"	d	language:C	file:
should_trim	base/extra/include/malloc.c.h	2676;"	d	language:C++
should_trim	base/extra/include/malloc.c.h	2678;"	d	language:C++
size	base/extra/dlmalloc/dlmalloc.c	/^  size_t       size;             \/* allocated size *\/$/;"	m	language:C	struct:malloc_segment	file:
size	base/extra/include/malloc.c.h	/^  size_t       size;             \/* allocated size *\/$/;"	m	language:C++	struct:malloc_segment
size	test/include/poisson_fdm.h	/^    int      size;     \/**< @brief length of the vector  *\/$/;"	m	language:C++	struct:__anon25
size	test/include/poisson_fdm.h	/^    int      size;$/;"	m	language:C++	struct:__anon23
small_index	base/extra/dlmalloc/dlmalloc.c	2680;"	d	language:C	file:
small_index	base/extra/include/malloc.c.h	2781;"	d	language:C++
small_index2size	base/extra/dlmalloc/dlmalloc.c	2681;"	d	language:C	file:
small_index2size	base/extra/include/malloc.c.h	2782;"	d	language:C++
smallbin_at	base/extra/dlmalloc/dlmalloc.c	2685;"	d	language:C	file:
smallbin_at	base/extra/include/malloc.c.h	2786;"	d	language:C++
smallbins	base/extra/dlmalloc/dlmalloc.c	/^  mchunkptr  smallbins[(NSMALLBINS+1)*2];$/;"	m	language:C	struct:malloc_state	file:
smallbins	base/extra/include/malloc.c.h	/^  mchunkptr  smallbins[(NSMALLBINS+1)*2];$/;"	m	language:C++	struct:malloc_state
smallmap	base/extra/dlmalloc/dlmalloc.c	/^  binmap_t   smallmap;$/;"	m	language:C	struct:malloc_state	file:
smallmap	base/extra/include/malloc.c.h	/^  binmap_t   smallmap;$/;"	m	language:C++	struct:malloc_state
smallmap_is_marked	base/extra/dlmalloc/dlmalloc.c	2776;"	d	language:C	file:
smallmap_is_marked	base/extra/include/malloc.c.h	2877;"	d	language:C++
smat_amxv	base/src/BlaSpmvSTR.c	/^static inline void smat_amxv (const REAL   alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const REAL *a, const REAL *b, const INT n, REAL *c)
smat_amxv_nc3	base/src/BlaSpmvSTR.c	/^static inline void smat_amxv_nc3 (const REAL   alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const REAL *a, const REAL *b, REAL *c)
smat_amxv_nc5	base/src/BlaSpmvSTR.c	/^static inline void smat_amxv_nc5 (const REAL   alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const REAL *a, const REAL *b, REAL *c)
smblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	language:C	struct:mallinfo	file:
smblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	language:C++	struct:mallinfo
smblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	language:C++	struct:mallinfo
smblks	base/extra/include/nedmalloc.h	/^  size_t smblks;   \/* always 0 *\/$/;"	m	language:C++	struct:nedmallinfo
smooth_agg	base/src/PreAMGSetupSA.c	/^static void smooth_agg (dCSRmat    *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, dCSRmat *tentp, dCSRmat *P, AMG_param *param, dCSRmat *N)
smooth_agg_bsr	base/src/PreAMGSetupSABSR.c	/^static void smooth_agg_bsr (const dBSRmat    *A,$/;"	f	language:C	file:	signature:(const dBSRmat *A, dBSRmat *tentp, dBSRmat *P, const AMG_param *param, const dCSRmat *N)
smooth_filter	base/include/fasp.h	/^    SHORT smooth_filter;$/;"	m	language:C++	struct:__anon10
smooth_filter	include/fasp.h	/^    SHORT smooth_filter;$/;"	m	language:C++	struct:__anon34
smooth_order	base/include/fasp.h	/^    SHORT smooth_order; \/\/ 1: nature order 2: C\/F order (both are symmetric)$/;"	m	language:C++	struct:__anon10
smooth_order	base/include/fasp.h	/^    SHORT smooth_order;$/;"	m	language:C++	struct:__anon16
smooth_order	base/include/fasp_block.h	/^    SHORT smooth_order;$/;"	m	language:C++	struct:__anon4
smooth_order	include/fasp.h	/^    SHORT smooth_order; \/\/ 1: nature order 2: C\/F order (both are symmetric)$/;"	m	language:C++	struct:__anon34
smooth_order	include/fasp.h	/^    SHORT smooth_order;$/;"	m	language:C++	struct:__anon40
smooth_order	include/fasp_block.h	/^    SHORT smooth_order;$/;"	m	language:C++	struct:__anon28
smooth_restriction	base/include/fasp.h	/^    SHORT smooth_restriction;$/;"	m	language:C++	struct:__anon10
smooth_restriction	include/fasp.h	/^    SHORT smooth_restriction;$/;"	m	language:C++	struct:__anon34
smoother	base/include/fasp.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon10
smoother	base/include/fasp.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon16
smoother	base/include/fasp.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon17
smoother	base/include/fasp_block.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon4
smoother	include/fasp.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon34
smoother	include/fasp.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon40
smoother	include/fasp.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon41
smoother	include/fasp_block.h	/^    SHORT smoother;$/;"	m	language:C++	struct:__anon28
solver_type	base/include/fasp.h	/^    SHORT solver_type;   \/**< type of iterative solvers *\/$/;"	m	language:C++	struct:__anon21
solver_type	include/fasp.h	/^    SHORT solver_type;   \/**< type of iterative solvers *\/$/;"	m	language:C++	struct:__anon45
start	base/include/fasp.h	/^    INT *start;$/;"	m	language:C++	struct:dCSRLmat
start	include/fasp.h	/^    INT *start;$/;"	m	language:C++	struct:dCSRLmat
stop_type	base/include/fasp.h	/^    SHORT stop_type;     \/**< stopping criteria type *\/$/;"	m	language:C++	struct:__anon7
stop_type	base/include/fasp.h	/^    SHORT stop_type;     \/**< type of stopping criteria for iterative solvers *\/$/;"	m	language:C++	struct:__anon21
stop_type	include/fasp.h	/^    SHORT stop_type;     \/**< stopping criteria type *\/$/;"	m	language:C++	struct:__anon31
stop_type	include/fasp.h	/^    SHORT stop_type;     \/**< type of stopping criteria for iterative solvers *\/$/;"	m	language:C++	struct:__anon45
storage_manner	base/include/fasp_block.h	/^    INT storage_manner; \/\/ 0: row-major order, 1: column-major order$/;"	m	language:C++	struct:dBSRmat
storage_manner	include/fasp_block.h	/^    INT storage_manner; \/\/ 0: row-major order, 1: column-major order$/;"	m	language:C++	struct:dBSRmat
str_spaAxpy	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_2D_blk	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_2D_blk (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_2D_nc1	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_2D_nc1 (const REAL     alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_2D_nc3	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_2D_nc3 (const REAL     alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_2D_nc5	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_2D_nc5 (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_3D_blk	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_3D_blk (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_3D_nc1	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_3D_nc1 (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_3D_nc3	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_3D_nc3 (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
str_spaAxpy_3D_nc5	base/src/BlaSpmvSTR.c	/^static inline void str_spaAxpy_3D_nc5 (const REAL      alpha,$/;"	f	language:C	file:	signature:(const REAL alpha, const dSTRmat *A, const REAL *x, REAL *y)
strong_coupled	base/include/fasp.h	/^    REAL strong_coupled;$/;"	m	language:C++	struct:__anon10
strong_coupled	include/fasp.h	/^    REAL strong_coupled;$/;"	m	language:C++	struct:__anon34
strong_couplings	base/src/PreAMGCoarsenRS.c	/^static void strong_couplings (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, AMG_param *param )
strong_couplings_agg1	base/src/PreAMGCoarsenRS.c	/^static void strong_couplings_agg1 (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, iCSRmat *Sh, ivector *vertices, ivector *CGPT_index, ivector *CGPT_rindex)
strong_couplings_agg2	base/src/PreAMGCoarsenRS.c	/^static void strong_couplings_agg2 (dCSRmat   *A,$/;"	f	language:C	file:	signature:(dCSRmat *A, iCSRmat *S, iCSRmat *Sh, ivector *vertices, ivector *CGPT_index, ivector *CGPT_rindex)
strong_threshold	base/include/fasp.h	/^    REAL strong_threshold;$/;"	m	language:C++	struct:__anon10
strong_threshold	include/fasp.h	/^    REAL strong_threshold;$/;"	m	language:C++	struct:__anon34
stype	test/main/testf.f90	/^  integer          :: iufile, n, nnz, i, prt_lvl, maxit, stype$/;"	v	language:Fortran	program:test
sw	base/include/fasp_block.h	/^    REAL *sw;$/;"	m	language:C++	struct:__anon2
sw	include/fasp_block.h	/^    REAL *sw;$/;"	m	language:C++	struct:__anon26
swep2db	base/src/ItrSmootherRBGS.inl	/^static void swep2db (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT nbegx, INT nbegy, INT *mark, INT nx, INT ny)
swep2df	base/src/ItrSmootherRBGS.inl	/^static void swep2df (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT nbegx, INT nbegy, INT *mark, INT nx, INT ny)
swep3db	base/src/ItrSmootherRBGS.inl	/^static void swep3db (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT nbegx, INT nbegy, INT nbegz, INT *mark, INT nx, INT ny, INT nz)
swep3df	base/src/ItrSmootherRBGS.inl	/^static void swep3df (INT   *ia,$/;"	f	language:C++	file:	signature:(INT *ia, INT *ja, REAL *aa, REAL *u, REAL *f, INT nbegx, INT nbegy, INT nbegz, INT *mark, INT nx, INT ny, INT nz)
swzparam	base/include/fasp.h	/^    SWZ_param *swzparam;$/;"	m	language:C++	struct:__anon14
swzparam	include/fasp.h	/^    SWZ_param *swzparam;$/;"	m	language:C++	struct:__anon38
sys_alloc	base/extra/dlmalloc/dlmalloc.c	/^static void* sys_alloc(mstate m, size_t nb) {$/;"	f	language:C	file:	signature:(mstate m, size_t nb)
sys_alloc	base/extra/include/malloc.c.h	/^static void* sys_alloc(mstate m, size_t nb) {$/;"	f	language:C++	signature:(mstate m, size_t nb)
sys_trim	base/extra/dlmalloc/dlmalloc.c	/^static int sys_trim(mstate m, size_t pad) {$/;"	f	language:C	file:	signature:(mstate m, size_t pad)
sys_trim	base/extra/include/malloc.c.h	/^static int sys_trim(mstate m, size_t pad) {$/;"	f	language:C++	signature:(mstate m, size_t pad)
t	base/include/fasp_grid.h	/^    INT (*t)[3];   \/**< Vertices of triangles *\/$/;"	m	language:C++	struct:grid2d
t	include/fasp_grid.h	/^    INT (*t)[3];   \/**< Vertices of triangles *\/$/;"	m	language:C++	struct:grid2d
tail	base/src/PreAMGUtil.inl	/^    INT tail;$/;"	m	language:C++	struct:linked_list	file:
tbinptr	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_tree_chunk* tbinptr; \/* The type of bins of trees *\/$/;"	t	language:C	typeref:struct:malloc_tree_chunk	file:
tbinptr	base/extra/include/malloc.c.h	/^typedef struct malloc_tree_chunk* tbinptr; \/* The type of bins of trees *\/$/;"	t	language:C++	typeref:struct:malloc_tree_chunk
tchunk	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_tree_chunk  tchunk;$/;"	t	language:C	typeref:struct:malloc_tree_chunk	file:
tchunk	base/extra/include/malloc.c.h	/^typedef struct malloc_tree_chunk  tchunk;$/;"	t	language:C++	typeref:struct:malloc_tree_chunk
tchunkptr	base/extra/dlmalloc/dlmalloc.c	/^typedef struct malloc_tree_chunk* tchunkptr;$/;"	t	language:C	typeref:struct:malloc_tree_chunk	file:
tchunkptr	base/extra/include/malloc.c.h	/^typedef struct malloc_tree_chunk* tchunkptr;$/;"	t	language:C++	typeref:struct:malloc_tree_chunk
tentative_smooth	base/include/fasp.h	/^    REAL tentative_smooth;$/;"	m	language:C++	struct:__anon10
tentative_smooth	base/include/fasp.h	/^    REAL tentative_smooth;$/;"	m	language:C++	struct:__anon16
tentative_smooth	base/include/fasp_block.h	/^    REAL tentative_smooth;$/;"	m	language:C++	struct:__anon4
tentative_smooth	include/fasp.h	/^    REAL tentative_smooth;$/;"	m	language:C++	struct:__anon34
tentative_smooth	include/fasp.h	/^    REAL tentative_smooth;$/;"	m	language:C++	struct:__anon40
tentative_smooth	include/fasp_block.h	/^    REAL tentative_smooth;$/;"	m	language:C++	struct:__anon28
test	test/main/testf.f90	/^program test$/;"	p	language:Fortran
test	tutorial/main/poisson-amg.f90	/^program test$/;"	p	language:Fortran
test	tutorial/main/poisson-pcg.f90	/^program test$/;"	p	language:Fortran
tfather	base/include/fasp_grid.h	/^    INT *tfather;  \/**< Father triangle *\/$/;"	m	language:C++	struct:grid2d
tfather	include/fasp_grid.h	/^    INT *tfather;  \/**< Father triangle *\/$/;"	m	language:C++	struct:grid2d
thread_ini_flag	base/src/AuxThreads.c	/^INT thread_ini_flag = 0;$/;"	v	language:C
threadid	base/extra/dlmalloc/dlmalloc.c	/^  long threadid;$/;"	m	language:C	struct:win32_mlock_t	file:
threadid	base/extra/dlmalloc/dlmalloc.c	/^  pthread_t threadid;$/;"	m	language:C	struct:pthread_mlock_t	file:
threadid	base/extra/include/malloc.c.h	/^  long threadid;$/;"	m	language:C++	struct:win32_mlock_t
threadid	base/extra/include/malloc.c.h	/^  pthread_t threadid;$/;"	m	language:C++	struct:pthread_mlock_t
timestamp	base/extra/hb_io/XtrHBIO.c	/^void timestamp ( void )$/;"	f	language:C	signature:( void )
tmalloc_large	base/extra/dlmalloc/dlmalloc.c	/^static void* tmalloc_large(mstate m, size_t nb) {$/;"	f	language:C	file:	signature:(mstate m, size_t nb)
tmalloc_large	base/extra/include/malloc.c.h	/^static void* tmalloc_large(mstate m, size_t nb) {$/;"	f	language:C++	signature:(mstate m, size_t nb)
tmalloc_small	base/extra/dlmalloc/dlmalloc.c	/^static void* tmalloc_small(mstate m, size_t nb) {$/;"	f	language:C	file:	signature:(mstate m, size_t nb)
tmalloc_small	base/extra/include/malloc.c.h	/^static void* tmalloc_small(mstate m, size_t nb) {$/;"	f	language:C++	signature:(mstate m, size_t nb)
tol	base/include/fasp.h	/^    REAL  tol;           \/**< convergence tolerance *\/$/;"	m	language:C++	struct:__anon7
tol	base/include/fasp.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon10
tol	base/include/fasp.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon16
tol	base/include/fasp.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon17
tol	base/include/fasp_block.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon4
tol	include/fasp.h	/^    REAL  tol;           \/**< convergence tolerance *\/$/;"	m	language:C++	struct:__anon31
tol	include/fasp.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon34
tol	include/fasp.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon40
tol	include/fasp.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon41
tol	include/fasp_block.h	/^    REAL tol;$/;"	m	language:C++	struct:__anon28
tol	test/main/testf.f90	/^  double precision :: tol$/;"	v	language:Fortran	program:test
tol	tutorial/main/poisson-amg.f90	/^  double precision :: tol$/;"	v	language:Fortran	program:test
tol	tutorial/main/poisson-pcg.f90	/^  double precision :: tol$/;"	v	language:Fortran	program:test
top	base/extra/dlmalloc/dlmalloc.c	/^  mchunkptr  top;$/;"	m	language:C	struct:malloc_state	file:
top	base/extra/include/malloc.c.h	/^  mchunkptr  top;$/;"	m	language:C++	struct:malloc_state
topologic_sort_ILU	base/src/BlaILUSetupBSR.c	/^void topologic_sort_ILU (ILU_data *iludata)$/;"	f	language:C	signature:(ILU_data *iludata)
topsize	base/extra/dlmalloc/dlmalloc.c	/^  size_t     topsize;$/;"	m	language:C	struct:malloc_state	file:
topsize	base/extra/include/malloc.c.h	/^  size_t     topsize;$/;"	m	language:C++	struct:malloc_state
total_alloc_count	base/src/AuxMemory.c	/^unsigned INT total_alloc_count = 0;        \/\/! Total number of allocations$/;"	v	language:C
total_alloc_mem	base/src/AuxMemory.c	/^unsigned INT total_alloc_mem   = 0;        \/\/! Total allocated memory amount$/;"	v	language:C
traverse_and_check	base/extra/dlmalloc/dlmalloc.c	/^static size_t traverse_and_check(mstate m) {$/;"	f	language:C	file:	signature:(mstate m)
traverse_and_check	base/extra/include/malloc.c.h	/^static size_t traverse_and_check(mstate m) {$/;"	f	language:C++	signature:(mstate m)
treebin_at	base/extra/dlmalloc/dlmalloc.c	2686;"	d	language:C	file:
treebin_at	base/extra/include/malloc.c.h	2787;"	d	language:C++
treebins	base/extra/dlmalloc/dlmalloc.c	/^  tbinptr    treebins[NTREEBINS];$/;"	m	language:C	struct:malloc_state	file:
treebins	base/extra/include/malloc.c.h	/^  tbinptr    treebins[NTREEBINS];$/;"	m	language:C++	struct:malloc_state
treemap	base/extra/dlmalloc/dlmalloc.c	/^  binmap_t   treemap;$/;"	m	language:C	struct:malloc_state	file:
treemap	base/extra/include/malloc.c.h	/^  binmap_t   treemap;$/;"	m	language:C++	struct:malloc_state
treemap_is_marked	base/extra/dlmalloc/dlmalloc.c	2780;"	d	language:C	file:
treemap_is_marked	base/extra/include/malloc.c.h	2881;"	d	language:C++
triangles	base/include/fasp_grid.h	/^    INT triangles; \/**< Number of triangles *\/$/;"	m	language:C++	struct:grid2d
triangles	include/fasp_grid.h	/^    INT triangles; \/**< Number of triangles *\/$/;"	m	language:C++	struct:grid2d
trim_check	base/extra/dlmalloc/dlmalloc.c	/^  size_t     trim_check;$/;"	m	language:C	struct:malloc_state	file:
trim_check	base/extra/include/malloc.c.h	/^  size_t     trim_check;$/;"	m	language:C++	struct:malloc_state
trim_threshold	base/extra/dlmalloc/dlmalloc.c	/^  size_t trim_threshold;$/;"	m	language:C	struct:malloc_params	file:
trim_threshold	base/extra/include/malloc.c.h	/^  size_t trim_threshold;$/;"	m	language:C++	struct:malloc_params
truncation_threshold	base/include/fasp.h	/^    REAL truncation_threshold;$/;"	m	language:C++	struct:__anon10
truncation_threshold	include/fasp.h	/^    REAL truncation_threshold;$/;"	m	language:C++	struct:__anon34
type	base/include/fasp.h	/^    INT type;$/;"	m	language:C++	struct:__anon13
type	include/fasp.h	/^    INT type;$/;"	m	language:C++	struct:__anon37
u	test/main/testf.f90	/^  doub/;"	v	language:Fortran	program:test
u	test/main/testfct_heat.inl	/^double u (double *p)$/;"	f	language:C++	signature:(double *p)
u	test/main/testfct_poisson.inl	/^double u (double *p)$/;"	f	language:C++	signature:(double *p)
u	tutorial/main/poisson-amg.f90	/^  doub/;"	v	language:Fortran	program:test
u	tutorial/main/poisson-pcg.f90	/^  doub/;"	v	language:Fortran	program:test
u_x	test/main/testfct_heat.inl	/^double u_x (double *p)$/;"	f	language:C++	signature:(double *p)
u_x	test/main/testfct_poisson.inl	/^double u_x (double *p)$/;"	f	language:C++	signature:(double *p)
u_y	test/main/testfct_heat.inl	/^double u_y (double *p)$/;"	f	language:C++	signature:(double *p)
u_y	test/main/testfct_poisson.inl	/^double u_y (double *p)$/;"	f	language:C++	signature:(double *p)
unlink_chunk	base/extra/dlmalloc/dlmalloc.c	3630;"	d	language:C	file:
unlink_chunk	base/extra/include/malloc.c.h	3749;"	d	language:C++
unlink_first_small_chunk	base/extra/dlmalloc/dlmalloc.c	3451;"	d	language:C	file:
unlink_first_small_chunk	base/extra/include/malloc.c.h	3570;"	d	language:C++
unlink_large_chunk	base/extra/dlmalloc/dlmalloc.c	3553;"	d	language:C	file:
unlink_large_chunk	base/extra/include/malloc.c.h	3672;"	d	language:C++
unlink_small_chunk	base/extra/dlmalloc/dlmalloc.c	3431;"	d	language:C	file:
unlink_small_chunk	base/extra/include/malloc.c.h	3550;"	d	language:C++
uordblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	language:C	struct:mallinfo	file:
uordblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	language:C++	struct:mallinfo
uordblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	language:C++	struct:mallinfo
uordblks	base/extra/include/nedmalloc.h	/^  size_t uordblks; \/* total allocated space *\/$/;"	m	language:C++	struct:nedmallinfo
uptr	base/include/fasp.h	/^    INT *uptr;$/;"	m	language:C++	struct:__anon13
uptr	include/fasp.h	/^    INT *uptr;$/;"	m	language:C++	struct:__anon37
use_lock	base/extra/dlmalloc/dlmalloc.c	2507;"	d	language:C	file:
use_lock	base/extra/include/malloc.c.h	2608;"	d	language:C++
use_mmap	base/extra/dlmalloc/dlmalloc.c	2511;"	d	language:C	file:
use_mmap	base/extra/include/malloc.c.h	2612;"	d	language:C++
use_noncontiguous	base/extra/dlmalloc/dlmalloc.c	2515;"	d	language:C	file:
use_noncontiguous	base/extra/include/malloc.c.h	2616;"	d	language:C++
usmblks	base/extra/dlmalloc/dlmalloc.c	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	language:C	struct:mallinfo	file:
usmblks	base/extra/include/dlmalloc.h	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	language:C++	struct:mallinfo
usmblks	base/extra/include/malloc.c.h	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	language:C++	struct:mallinfo
usmblks	base/extra/include/nedmalloc.h	/^  size_t usmblks;  \/* maximum total allocated space *\/$/;"	m	language:C++	struct:nedmallinfo
val	base/include/fasp.h	/^    INT **val;$/;"	m	language:C++	struct:idenmat
val	base/include/fasp.h	/^    INT *val;$/;"	m	language:C++	struct:iCOOmat
val	base/include/fasp.h	/^    INT *val;$/;"	m	language:C++	struct:iCSRmat
val	base/include/fasp.h	/^    INT *val;$/;"	m	language:C++	struct:ivector
val	base/include/fasp.h	/^    REAL **val;$/;"	m	language:C++	struct:ddenmat
val	base/include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dCOOmat
val	base/include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dCSRLmat
val	base/include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dCSRmat
val	base/include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dvector
val	base/include/fasp_block.h	/^    REAL *val;$/;"	m	language:C++	struct:dBSRmat
val	include/fasp.h	/^    INT **val;$/;"	m	language:C++	struct:idenmat
val	include/fasp.h	/^    INT *val;$/;"	m	language:C++	struct:iCOOmat
val	include/fasp.h	/^    INT *val;$/;"	m	language:C++	struct:iCSRmat
val	include/fasp.h	/^    INT *val;$/;"	m	language:C++	struct:ivector
val	include/fasp.h	/^    REAL **val;$/;"	m	language:C++	struct:ddenmat
val	include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dCOOmat
val	include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dCSRLmat
val	include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dCSRmat
val	include/fasp.h	/^    REAL *val;$/;"	m	language:C++	struct:dvector
val	include/fasp_block.h	/^    REAL *val;$/;"	m	language:C++	struct:dBSRmat
vecstride	test/include/poisson_fdm.h	/^    int      vecstride, idxstride;$/;"	m	language:C++	struct:__anon23
vertices	base/include/fasp_grid.h	/^    INT vertices;  \/**< Number of grid points *\/$/;"	m	language:C++	struct:grid2d
vertices	include/fasp_grid.h	/^    INT vertices;  \/**< Number of grid points *\/$/;"	m	language:C++	struct:grid2d
w	base/include/fasp.h	/^    REAL *w;$/;"	m	language:C++	struct:__anon16
w	base/include/fasp.h	/^    REAL *w;$/;"	m	language:C++	struct:__anon17
w	base/include/fasp.h	/^    dvector w;$/;"	m	language:C++	struct:__anon15
w	base/include/fasp_block.h	/^    REAL *w;   \/**< temporary work space for other usage *\/$/;"	m	language:C++	struct:__anon6
w	base/include/fasp_block.h	/^    REAL *w;$/;"	m	language:C++	struct:__anon4
w	base/include/fasp_block.h	/^    dvector w;$/;"	m	language:C++	struct:__anon2
w	include/fasp.h	/^    REAL *w;$/;"	m	language:C++	struct:__anon40
w	include/fasp.h	/^    REAL *w;$/;"	m	language:C++	struct:__anon41
w	include/fasp.h	/^    dvector w;$/;"	m	language:C++	struct:__anon39
w	include/fasp_block.h	/^    REAL *w;   \/**< temporary work space for other usage *\/$/;"	m	language:C++	struct:__anon30
w	include/fasp_block.h	/^    REAL *w;$/;"	m	language:C++	struct:__anon28
w	include/fasp_block.h	/^    dvector w;$/;"	m	language:C++	struct:__anon26
weight	base/include/fasp.h	/^    REAL weight;$/;"	m	language:C++	struct:__anon15
weight	include/fasp.h	/^    REAL weight;$/;"	m	language:C++	struct:__anon39
win32_acquire_lock	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE int win32_acquire_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
win32_acquire_lock	base/extra/include/malloc.c.h	/^static FORCEINLINE int win32_acquire_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
win32_mlock_t	base/extra/dlmalloc/dlmalloc.c	/^struct win32_mlock_t {$/;"	s	language:C	file:
win32_mlock_t	base/extra/include/malloc.c.h	/^struct win32_mlock_t {$/;"	s	language:C++
win32_release_lock	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE void win32_release_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
win32_release_lock	base/extra/include/malloc.c.h	/^static FORCEINLINE void win32_release_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
win32_try_lock	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE int win32_try_lock (MLOCK_T *sl) {$/;"	f	language:C	file:	signature:(MLOCK_T *sl)
win32_try_lock	base/extra/include/malloc.c.h	/^static FORCEINLINE int win32_try_lock (MLOCK_T *sl) {$/;"	f	language:C++	signature:(MLOCK_T *sl)
win32direct_mmap	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE void* win32direct_mmap(size_t size) {$/;"	f	language:C	file:	signature:(size_t size)
win32direct_mmap	base/extra/include/malloc.c.h	/^static FORCEINLINE void* win32direct_mmap(size_t size) {$/;"	f	language:C++	signature:(size_t size)
win32mmap	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE void* win32mmap(size_t size) {$/;"	f	language:C	file:	signature:(size_t size)
win32mmap	base/extra/include/malloc.c.h	/^static FORCEINLINE void* win32mmap(size_t size) {$/;"	f	language:C++	signature:(size_t size)
win32munmap	base/extra/dlmalloc/dlmalloc.c	/^static FORCEINLINE int win32munmap(void* ptr, size_t size) {$/;"	f	language:C	file:	signature:(void* ptr, size_t size)
win32munmap	base/extra/include/malloc.c.h	/^static FORCEINLINE int win32munmap(void* ptr, size_t size) {$/;"	f	language:C++	signature:(void* ptr, size_t size)
work	base/include/fasp.h	/^    REAL *work;$/;"	m	language:C++	struct:__anon13
work	include/fasp.h	/^    REAL *work;$/;"	m	language:C++	struct:__anon37
workdir	base/include/fasp.h	/^    char workdir[256];   \/**< working directory for data files *\/$/;"	m	language:C++	struct:__anon21
workdir	include/fasp.h	/^    char workdir[256];   \/**< working directory for data files *\/$/;"	m	language:C++	struct:__anon45
write_bmp16	base/src/AuxGraphics.c	/^static INT write_bmp16 (const char   *fname,$/;"	f	language:C	file:	signature:(const char *fname, const INT m, const INT n, const char map[])
x	base/include/fasp.h	/^    dvector x;$/;"	m	language:C++	struct:__anon15
x	base/include/fasp_block.h	/^    dvector x;$/;"	m	language:C++	struct:__anon2
x	include/fasp.h	/^    dvector x;$/;"	m	language:C++	struct:__anon39
x	include/fasp_block.h	/^    dvector x;$/;"	m	language:C++	struct:__anon26
xequaly	base/src/PreGMG.inl	/^static void xequaly (REAL *x,$/;"	f	language:C++	file:	signature:(REAL *x, const REAL *y, const INT *level, const INT k)
xloc1	base/include/fasp.h	/^    dvector xloc1;$/;"	m	language:C++	struct:__anon14
xloc1	include/fasp.h	/^    dvector xloc1;$/;"	m	language:C++	struct:__anon38
ypcz	base/src/PreGMG.inl	/^static void ypcz (REAL       *x,$/;"	f	language:C++	file:	signature:(REAL *x, const REAL *y, const REAL c, const REAL *z, const INT *level, const INT k)
